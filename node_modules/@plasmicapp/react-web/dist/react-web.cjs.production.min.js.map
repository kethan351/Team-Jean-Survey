{"version":3,"file":"react-web.cjs.production.min.js","sources":["../../../node_modules/regenerator-runtime/runtime.js","../src/auth/PlasmicPageGuard.tsx","../src/common.ts","../src/react-utils.tsx","../src/render/Stack.tsx","../src/render/elements.ts","../src/render/PlasmicHead/index.tsx","../src/render/PlasmicImg/index.tsx","../src/render/PlasmicLink.tsx","../src/render/translation.tsx","../src/render/PlasmicSlot.tsx","../src/render/screen-variants.ts","../src/render/ssr.tsx","../src/render/triggers.ts","../src/states/types.ts","../src/states/graph.ts","../src/states/helpers.ts","../src/states/valtio.tsx","../src/index-common.tsx","../src/plume/plume-utils.ts","../src/plume/props-utils.ts","../src/plume/collection-utils.tsx","../src/plume/triggered-overlay/context.tsx","../src/plume/menu/context.tsx","../src/plume/menu/menu.tsx","../src/plume/menu-button/menu-trigger.tsx","../src/plume/select/context.tsx","../src/plume/select/select.tsx","../src/plume/menu-button/DropdownMenu.tsx","../src/render/PlasmicIcon.tsx","../src/render/global-variants.ts","../src/plume/button/index.tsx","../src/plume/checkbox/index.tsx","../src/plume/menu-button/menu-button.tsx","../src/plume/menu/menu-group.tsx","../src/plume/menu/menu-item.tsx","../src/plume/select/select-option.tsx","../src/plume/select/select-option-group.tsx","../src/plume/switch/index.tsx","../src/plume/text-input/index.tsx","../src/plume/triggered-overlay/triggered-overlay.tsx"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { usePlasmicDataSourceContext } from \"@plasmicapp/data-sources-context\";\nimport React from \"react\";\n\n// https://stackoverflow.com/a/2117523\nfunction uuidv4() {\n  // @ts-ignore\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n    (\n      c ^\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\n    ).toString(16)\n  );\n}\n\nasync function triggerLogin(\n  appId: string,\n  authorizeEndpoint: string,\n  redirectUri?: string\n) {\n  async function sha256(text: string) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(text);\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray\n      .map((b) => b.toString(16).padStart(2, \"0\"))\n      .join(\"\");\n    return hashHex;\n  }\n\n  const continueTo = window.location.href;\n  const state = JSON.stringify({ continueTo });\n  const code_verifier = uuidv4();\n  localStorage.setItem(\"code_verifier\", code_verifier);\n  const code_challenge = await sha256(code_verifier);\n\n  const params = new URLSearchParams();\n  params.set(\"client_id\", appId);\n  params.set(\"state\", state);\n  params.set(\"response_type\", \"code\");\n  params.set(\"code_challenge\", code_challenge);\n  params.set(\"code_challenge_method\", \"S256\");\n\n  if (redirectUri) {\n    params.set(\"redirect_uri\", redirectUri);\n  }\n\n  const url = `${authorizeEndpoint}?${params.toString()}`;\n  window.location.href = url;\n}\n\ninterface PlasmicPageGuardProps {\n  appId: string;\n  authorizeEndpoint: string;\n  minRole?: string;\n  canTriggerLogin: boolean;\n  children: React.ReactNode;\n}\n\nexport function PlasmicPageGuard(props: PlasmicPageGuardProps) {\n  const {\n    appId,\n    authorizeEndpoint,\n    minRole,\n    canTriggerLogin,\n    children,\n  } = props;\n\n  const dataSourceCtxValue = usePlasmicDataSourceContext();\n\n  React.useEffect(() => {\n    if (canTriggerLogin) {\n      if (\n        minRole &&\n        dataSourceCtxValue &&\n        \"isUserLoading\" in dataSourceCtxValue &&\n        !dataSourceCtxValue.isUserLoading &&\n        !dataSourceCtxValue.user\n      ) {\n        triggerLogin(\n          appId,\n          authorizeEndpoint,\n          dataSourceCtxValue.authRedirectUri\n        );\n      }\n    }\n  }, [dataSourceCtxValue, appId, authorizeEndpoint, canTriggerLogin, minRole]);\n\n  function canUserViewPage() {\n    if (!minRole) {\n      return true;\n    }\n    if (!dataSourceCtxValue) {\n      return false;\n    }\n    if (!dataSourceCtxValue.user) {\n      return false;\n    }\n    if (!(\"roleIds\" in dataSourceCtxValue.user)) {\n      return false;\n    }\n    if (!Array.isArray(dataSourceCtxValue.user.roleIds)) {\n      return false;\n    }\n    return dataSourceCtxValue.user.roleIds.includes(minRole);\n  }\n\n  if (\n    !dataSourceCtxValue ||\n    dataSourceCtxValue.isUserLoading ||\n    (!dataSourceCtxValue.user && minRole && canTriggerLogin)\n  ) {\n    return null;\n  }\n\n  if (!canUserViewPage()) {\n    return <div>You don't have access to this page</div>;\n  }\n\n  return children;\n}\n","export function notNil<T>(x: T | undefined | null): x is T {\n  return x != null;\n}\n\nexport function pick<T extends {}>(\n  obj: T,\n  ...keys: (string | number | symbol)[]\n): Partial<T> {\n  if (Object.keys(obj).length === 0) {\n    return obj;\n  }\n  const res: any = {};\n  for (const key of keys) {\n    if (key in obj) {\n      res[key] = obj[key as keyof T];\n    }\n  }\n  return res as Partial<T>;\n}\n\nexport function pickBy<T extends {}>(\n  obj: T,\n  func: (key: string, val: any) => boolean\n): Partial<T> {\n  const res: any = {};\n  for (const [key, val] of Object.entries(obj)) {\n    if (func(key, val)) {\n      res[key] = obj[key as keyof T];\n    }\n  }\n  return res as Partial<T>;\n}\n\nexport function omit<T extends {}>(obj: T, ...keys: (keyof T)[]): Partial<T> {\n  if (Object.keys(obj).length === 0) {\n    return obj;\n  }\n  const res: Partial<T> = {};\n  for (const key of Object.keys(obj) as (keyof T)[]) {\n    if (!keys.includes(key)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n}\n\nexport function isSubset<T>(a1: T[], a2: T[]) {\n  return a1.every((x) => a2.includes(x));\n}\n\nexport function chainSingleArgFuncs<A>(...funcs: ((arg: A) => A)[]) {\n  if (funcs.length === 0) {\n    return undefined;\n  }\n  return (arg: A) => {\n    let res: A = arg;\n    for (const func of funcs) {\n      res = func(res);\n    }\n    return res;\n  };\n}\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nexport function isString(x: any): x is string {\n  return typeof x === \"string\";\n}\n\nexport function groupBy<T>(\n  collection: T[],\n  keyFunc: (x: T) => string\n): Record<string, T[]> {\n  const result: Record<string, T[]> = {};\n  for (const obj of collection) {\n    const key = keyFunc(obj);\n    if (key in result) {\n      result[key].push(obj);\n    } else {\n      result[key] = [obj];\n    }\n  }\n  return result;\n}\n\nexport function mapValues<V, V2>(\n  obj: Record<string, V>,\n  mapper: (value: V) => V2\n): Record<string, V2> {\n  const result: Record<string, V2> = {};\n  for (const key in obj) {\n    result[key] = mapper(obj[key]);\n  }\n  return result;\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nexport const isBrowser = typeof window !== \"undefined\";\nexport const NONE = Symbol(\"NONE\");\n\nexport const useIsomorphicLayoutEffect = isBrowser\n  ? React.useLayoutEffect\n  : React.useEffect;\n\nexport function createElementWithChildren(\n  elementType: any,\n  props: any,\n  children: React.ReactNode\n) {\n  if (Array.isArray(children)) {\n    return React.createElement(\n      elementType,\n      props,\n      ...children\n    ) as React.ReactElement;\n  } else if (children || \"children\" in props) {\n    // Only call React.createElement with `children` if there are actual children,\n    // or if there was an explicit (albeit undefined) children passed via\n    // props.  Otherwise, if you pass `undefined` as the children argument\n    // to React.createElement, the created element will have prop {children: undefined}.\n    // If the `root` is an PlasmicGeneratedComponent, and these props with {children: undefined}\n    // are used, then it will be taken as a `children` override, and will thus blank out\n    // everything under the root node.\n    return React.createElement(elementType, props, children);\n  } else {\n    return React.createElement(elementType, props);\n  }\n}\n\nexport function ensureNotArray(children: React.ReactNode) {\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children[0];\n    } else {\n      return React.createElement(React.Fragment, {}, ...children);\n    }\n  } else {\n    return children;\n  }\n}\n\n/**\n * Flattens ReactNode into an array of ReactChild, but does NOT replace\n * missing keys with array index, as React.Children.toArray() does.\n */\nexport function toChildArray(children: React.ReactNode): React.ReactChild[] {\n  if (isReactChild(children)) {\n    return [children];\n  } else if (Array.isArray(children)) {\n    return children.flatMap(toChildArray);\n  } else {\n    return [];\n  }\n}\n\nexport function isReactText(child: React.ReactNode): child is React.ReactText {\n  return typeof child === \"string\" || typeof child === \"number\";\n}\n\nexport function isReactChild(\n  child: React.ReactNode\n): child is React.ReactChild {\n  return React.isValidElement(child) || isReactText(child);\n}\n\nexport function isReactFragment(\n  child: React.ReactNode\n): child is React.ReactElement {\n  return React.isValidElement(child) && child.type === React.Fragment;\n}\n\nexport function isReactNode(x: any) {\n  return (\n    typeof x === \"string\" || typeof x === \"number\" || React.isValidElement(x)\n  );\n}\n\n// From https://stackoverflow.com/questions/54775790/forcing-excess-property-checking-on-variable-passed-to-typescript-function\n// We also wrap the error message in a Partial<> because otherwise Jetbrains IDEs will autocomplete the component with all the string methods as props - see https://github.com/plasmicapp/plasmic/issues/16.\nexport type StrictProps<T, TExpected> = Exclude<\n  keyof T,\n  keyof TExpected\n> extends never\n  ? {}\n  : Partial<\"Unexpected extraneous props\">;\n\nexport type HTMLElementRefOf<T extends keyof JSX.IntrinsicElements> = Exclude<\n  React.ComponentProps<T>[\"ref\"],\n  string\n>;\n\nexport function mergeProps(\n  props: Record<string, any>,\n  ...restProps: Record<string, any>[]\n): Record<string, any> {\n  if (restProps.every((rest) => Object.keys(rest).length === 0)) {\n    return props;\n  }\n\n  const result = { ...props };\n\n  for (const rest of restProps) {\n    for (const key of Object.keys(rest)) {\n      result[key] = mergePropVals(key, result[key], rest[key]);\n    }\n  }\n\n  return result;\n}\n\nfunction updateRef<T>(ref: React.Ref<T> | undefined, value: T | null) {\n  if (!ref) {\n    return;\n  }\n\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else {\n    if (!Object.isFrozen(ref)) {\n      (ref as React.MutableRefObject<T | null>).current = value;\n    }\n  }\n}\n\nexport function mergeRefs<T>(...refs: (React.Ref<T> | undefined)[]) {\n  return (value: T) => {\n    for (const ref of refs) {\n      updateRef(ref, value);\n    }\n  };\n}\n\nexport function mergePropVals(name: string, val1: any, val2: any): any {\n  if (val1 === NONE || val2 === NONE) {\n    // The NONE sentinel always skips all merging and returns null\n    return null;\n  } else if (val1 == null) {\n    // If either of them is nil, prefer the other\n    return val2;\n  } else if (val2 == null) {\n    return val1;\n  } else if (name === \"className\") {\n    // Special case for className -- always combine both class names\n    return classNames(val1, val2);\n  } else if (name === \"style\") {\n    // Special case for style -- always shallow-merge style dicts\n    return { ...val1, ...val2 };\n  } else if (name === \"ref\") {\n    // Special case for ref\n    return mergeRefs(val1, val2);\n  } else if (typeof val1 !== typeof val2) {\n    // If the type of the two values are different, then no way to merge them.\n    // Prefer val2.\n    return val2;\n  } else if (name.startsWith(\"on\") && typeof val1 === \"function\") {\n    // Special case for event handlers -- always call both handlers\n    return (...args: any[]) => {\n      let res: any;\n      if (typeof val1 === \"function\") {\n        res = val1(...args);\n      }\n      if (typeof val2 === \"function\") {\n        res = val2(...args);\n      }\n      return res;\n    };\n  } else {\n    // For all else, prefer val2\n    return val2;\n  }\n}\n\nexport function getElementTypeName(element: React.ReactElement) {\n  if (typeof element.type === \"string\") {\n    return element.type;\n  } else {\n    const comp = element.type as any;\n    return comp.displayName ?? comp.name ?? comp.render?.name ?? \"Component\";\n  }\n}\n","import * as React from \"react\";\nimport { createElementWithChildren } from \"../react-utils\";\nimport { wrapFlexContainerChildren } from \"./elements\";\n\nfunction renderStack<T extends keyof JSX.IntrinsicElements>(\n  as: T,\n  props: React.ComponentProps<T>,\n  hasGap: boolean | undefined,\n  ref: React.Ref<any>\n) {\n  const { children, ...rest } = props;\n  const wrappedChildren = wrapFlexContainerChildren(children, hasGap ?? false);\n  return createElementWithChildren(as, { ref, ...rest }, wrappedChildren);\n}\n\nfunction FlexStack_<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>,\n  outerRef: React.Ref<any>\n) {\n  const { as, hasGap, ...rest } = props;\n  return renderStack(\n    as ?? \"div\",\n    rest as React.ComponentProps<T>,\n    hasGap,\n    outerRef\n  );\n}\n\nconst FlexStack = React.forwardRef(FlexStack_) as <\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(\n  props: { as?: T; hasGap?: boolean } & React.ComponentProps<T>\n) => React.ReactElement;\n\nconst makeStackImpl = <T extends keyof JSX.IntrinsicElements>(as: T) => {\n  return React.forwardRef(\n    (\n      props: React.ComponentProps<T> & { hasGap?: boolean },\n      ref: React.Ref<any>\n    ) => {\n      const { hasGap, ...rest } = props;\n      return renderStack(as, rest as React.ComponentProps<T>, hasGap, ref);\n    }\n  ) as React.FC<React.ComponentProps<T> & { hasGap?: boolean }>;\n};\n\nexport const Stack = Object.assign(FlexStack, {\n  div: makeStackImpl(\"div\"),\n  a: makeStackImpl(\"a\"),\n  button: makeStackImpl(\"button\"),\n  h1: makeStackImpl(\"h1\"),\n  h2: makeStackImpl(\"h2\"),\n  h3: makeStackImpl(\"h3\"),\n  h4: makeStackImpl(\"h4\"),\n  h5: makeStackImpl(\"h5\"),\n  h6: makeStackImpl(\"h6\"),\n  label: makeStackImpl(\"label\"),\n  form: makeStackImpl(\"form\"),\n  section: makeStackImpl(\"section\"),\n  head: makeStackImpl(\"head\"),\n  main: makeStackImpl(\"main\"),\n  nav: makeStackImpl(\"nav\"),\n});\n","import get from \"dlv\";\nimport * as React from \"react\";\nimport { chainSingleArgFuncs, isSubset, notNil, omit, pick } from \"../common\";\nimport {\n  createElementWithChildren,\n  ensureNotArray,\n  isReactNode,\n  mergeProps,\n  mergePropVals,\n  NONE,\n} from \"../react-utils\";\nimport { $State } from \"../states\";\nimport { Stack } from \"./Stack\";\n\ninterface Variants {\n  [vg: string]: any;\n}\n\nexport type MultiChoiceArg<M extends string> = M | M[] | { [v in M]?: boolean };\nexport type SingleChoiceArg<M extends string> = M;\nexport type SingleBooleanChoiceArg<M extends string> = M | boolean;\n\ninterface OverrideTwiddle {\n  wrapChildren?: (children: React.ReactNode) => React.ReactNode;\n  wrap?: (node: React.ReactNode) => React.ReactNode;\n}\n\nexport type DefaultOverride<C extends React.ElementType> = {\n  type: \"default\";\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type AsOverride<C extends React.ElementType> = {\n  type: \"as\";\n  as: C;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type RenderOverride<C extends React.ElementType> = {\n  type: \"render\";\n  render: (props: React.ComponentProps<C>, Comp: C) => React.ReactNode;\n  props?: Partial<React.ComponentProps<C>>;\n} & OverrideTwiddle;\n\nexport type Override<DefaultElementType extends React.ElementType> =\n  | DefaultOverride<DefaultElementType>\n  | AsOverride<any>\n  | RenderOverride<DefaultElementType>;\n\nexport type Overrides = Record<string, Flex<any>>;\nexport type Args = Record<string, any>;\n\n// Flex provides a more \"flexible\" way to specify bindings.\nexport type Flex<DefaultElementType extends React.ElementType> =\n  // Fully-specified bindings\n  | (Omit<DefaultOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n      render?: never;\n    })\n  | Omit<AsOverride<any>, \"type\">\n  | (Omit<RenderOverride<DefaultElementType>, \"type\"> & {\n      as?: never;\n    })\n\n  // Valid ReactNode, used as children.\n  // Note: We use React.ReactChild instead of React.ReactNode because we don't want to include\n  // React.ReactFragment, which includes {}, which would allow any object to be passed in,\n  // defeating any attempt to type-check!\n  | React.ReactChild\n\n  // Ignored\n  | null\n  | undefined\n\n  // dict of props for the DefaultElementType\n  | (Partial<React.ComponentProps<DefaultElementType>> & {\n      wrap?: never;\n      wrapChildren?: never;\n      props?: never;\n      as?: never;\n      render?: never;\n    })\n\n  // render function taking in dict of props for the DefaultElementType\n  | ((props: React.ComponentProps<DefaultElementType>) => React.ReactNode);\n\nexport function hasVariant<V extends Variants>(\n  variants: V | undefined,\n  groupName: keyof V,\n  variant: string\n) {\n  if (variants == null) {\n    return false;\n  }\n  const groupVariants = variants[groupName];\n  if (groupVariants == null) {\n    return false;\n  } else if (groupVariants === true) {\n    return variant === groupName;\n  } else if (groupVariants === false) {\n    return false;\n  } else if (Array.isArray(groupVariants)) {\n    return groupVariants.includes(variant);\n  } else if (typeof groupVariants === \"string\") {\n    return groupVariants === variant;\n  } else {\n    return (\n      groupVariants[variant] !== undefined && groupVariants[variant] !== false\n    );\n  }\n}\n\nexport function wrapFlexContainerChildren(\n  children: React.ReactNode,\n  hasGap: boolean\n) {\n  // We need to always wrap the children, even if there are no gaps, because\n  // otherwise if we toggle between with and without gap, React reconciliation\n  // will blow away the children tree and all state if we switch from having\n  // a wrapper and not.\n  const className = hasGap ? \"__wab_flex-container\" : \"__wab_passthrough\";\n  if (!children) {\n    return null;\n  } else if (Array.isArray(children)) {\n    return React.createElement(\"div\", { className }, ...children);\n  } else {\n    return React.createElement(\"div\", { className }, children);\n  }\n}\n\nfunction createPlasmicElement<DefaultElementType extends React.ElementType>(\n  override: Flex<DefaultElementType>,\n  defaultRoot: DefaultElementType,\n  defaultProps: Partial<React.ComponentProps<DefaultElementType>>,\n  wrapChildrenInFlex?: boolean\n): React.ReactNode | null {\n  if (!override || Object.keys(override).length === 0) {\n    return createElementWithChildren(\n      defaultRoot,\n      defaultProps,\n      defaultProps.children\n    );\n  }\n  const override2 = deriveOverride(override);\n  const props = mergeOverrideProps(defaultProps, override2.props);\n  if (override2.type === \"render\") {\n    return override2.render(\n      props as React.ComponentProps<DefaultElementType>,\n      defaultRoot\n    );\n  }\n\n  let root = defaultRoot;\n  if (override2.type === \"as\" && override2.as) {\n    if (defaultRoot === (Stack as React.ElementType)) {\n      // If there was an \"as\" override specified, but the default type is\n      // a Stack, then we don't want to switch to using \"as\" as the root,\n      // because then we'd lose the flex wrapper that Stack provides.\n      // Instead, we specify the \"as\" as the \"as\" prop to Stack.\n      props.as = override2.as;\n    } else {\n      root = override2.as;\n    }\n  }\n\n  let children = props.children;\n\n  if (override2.wrapChildren) {\n    children = override2.wrapChildren(ensureNotArray(children));\n  }\n\n  if (wrapChildrenInFlex) {\n    // For legacy, we still support data-plasmic-wrap-flex-children\n    children = wrapFlexContainerChildren(children, true);\n  }\n\n  let result = createElementWithChildren(root, props, children);\n\n  if (override2.wrap) {\n    result = override2.wrap(result) as React.ReactElement;\n  }\n\n  return result;\n}\n\n// We use data-plasmic-XXX attributes for custom properties since Typescript doesn't\n// support type check on jsx pragma. See https://github.com/microsoft/TypeScript/issues/21699\n// for more info.\nconst seenElements = new Map<string, React.ReactNode>();\nexport function createPlasmicElementProxy<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  // We use seenElements to keep track of elements that has been rendered by\n  // createPlasmicElementProxy().  When a JSX tree is evaluated, the JSX factory\n  // is invoked from the leaf to the root as the last call.  So we can store\n  // all the elements we've created until we encounter the leaf, at which point\n  // we will clear this map.  We are guaranteed that this map will only contain\n  // elements from one Plasmic* component at a time, because we're just creating\n  // elements and not \"rendering\" at this point; even if this JSX tree references\n  // other Plasmic* elements, we'll just create an element referencing that component,\n  // rather than following into the content of that component.\n  //\n  // TODO: is this ConcurrentMode friendly?\n\n  if (props == null) {\n    props = {};\n  }\n\n  const name = props[\"data-plasmic-name\"];\n  const isRoot = props[\"data-plasmic-root\"];\n  const forNodeName = props[\"data-plasmic-for-node\"];\n\n  delete props[\"data-plasmic-name\"];\n  delete props[\"data-plasmic-root\"];\n  delete props[\"data-plasmic-for-node\"];\n\n  const element = createPlasmicElementFromJsx(\n    defaultElement,\n    props,\n    ...children\n  );\n  if (name) {\n    seenElements.set(name, element);\n  }\n\n  if (isRoot) {\n    // If this is the root, and we requested a specific node by specifying data-plasmic-for-node,\n    // then return that node instead\n    const forNode = forNodeName\n      ? seenElements.get(forNodeName) ?? null\n      : element;\n\n    // Clear out the seenElements map, as we're done rendering this Plasmic* component.\n    seenElements.clear();\n    return forNode;\n  }\n  return element;\n}\n\nfunction createPlasmicElementFromJsx<\n  DefaultElementType extends React.ElementType\n>(\n  defaultElement: DefaultElementType,\n  props: Partial<React.ComponentProps<DefaultElementType>>,\n  ...children: React.ReactNode[]\n) {\n  const override = props[\"data-plasmic-override\"];\n  const wrapFlexChild = props[\"data-plasmic-wrap-flex-child\"];\n  const triggerProps = (props[\"data-plasmic-trigger-props\"] ??\n    []) as React.HTMLAttributes<HTMLElement>[];\n  delete props[\"data-plasmic-override\"];\n  delete props[\"data-plasmic-wrap-flex-child\"];\n  delete props[\"data-plasmic-trigger-props\"];\n  return createPlasmicElement(\n    override,\n    defaultElement,\n    mergeProps(\n      props,\n      children.length === 0\n        ? {}\n        : { children: children.length === 1 ? children[0] : children },\n      ...triggerProps\n    ) as any,\n    wrapFlexChild\n  );\n}\n\nexport function makeFragment(...children: React.ReactNode[]) {\n  return React.createElement(React.Fragment, {}, ...children);\n}\n\nexport const UNSET = Symbol(\"UNSET\");\n\nfunction mergeOverrideProps(\n  defaults: Record<string, any>,\n  overrides?: Record<string, any>\n): Record<string, any> {\n  if (!overrides) {\n    return defaults;\n  }\n\n  const result = { ...defaults };\n\n  for (const key of Object.keys(overrides)) {\n    const defaultVal = defaults[key];\n    let overrideVal = overrides[key];\n    if (overrideVal === UNSET) {\n      delete result[key];\n    } else {\n      // We use the NONE sentinel if the overrideVal is nil, and is not one of the\n      // props that we merge by default -- which are className, style, and\n      // event handlers.  This means for all other \"normal\" props -- like children,\n      // title, etc -- a nil value will unset the default.\n      if (\n        overrideVal == null &&\n        key !== \"className\" &&\n        key !== \"style\" &&\n        !(key.startsWith(\"on\") && typeof defaultVal === \"function\")\n      ) {\n        overrideVal = NONE;\n      }\n      result[key] = mergePropVals(key, defaultVal, overrideVal);\n    }\n  }\n\n  return result;\n}\n\nexport function wrapWithClassName(element: React.ReactNode, className: string) {\n  const key = React.isValidElement(element)\n    ? element.key || undefined\n    : undefined;\n  return React.createElement(\n    \"div\",\n    {\n      key,\n      className,\n      style: {\n        display: \"grid\",\n      },\n    },\n    element\n  );\n}\n\nfunction deriveOverride<C extends React.ElementType>(x: Flex<C>): Override<C> {\n  if (!x) {\n    // undefined Binding is an empty Binding\n    return {\n      type: \"default\",\n      props: {} as any,\n    };\n  } else if (isReactNode(x)) {\n    // If ReactNode, then assume this is the children\n    return {\n      type: \"default\",\n      props: {\n        children: x,\n      } as any,\n    };\n  } else if (typeof x === \"object\") {\n    // If any of the overrideKeys is a key of this object, then assume\n    // this is a full Override\n    if (\"as\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"as\",\n      } as any;\n    } else if (\"render\" in x) {\n      return {\n        ...x,\n        type: \"render\",\n      } as any;\n    } else if (\"props\" in x) {\n      return {\n        ...x,\n        props: x.props || {},\n        type: \"default\",\n      };\n    } else if (isSubset(Object.keys(x), [\"wrap\", \"wrapChildren\"])) {\n      // Only twiddling functions present, so assume no props overrides\n      // (otherwise we'd assume these were props).\n      return {\n        ...x,\n        props: {},\n        type: \"default\",\n      };\n    }\n\n    // Else, assume this is just a props object.\n    return {\n      type: \"default\",\n      props: x as any,\n    };\n  } else if (typeof x === \"function\") {\n    return {\n      type: \"render\",\n      render: x,\n    };\n  }\n\n  throw new Error(`Unexpected override: ${x}`);\n}\n\nfunction mergeVariants<V extends Variants>(\n  v1: Partial<V> | undefined,\n  v2: Partial<V> | undefined\n): Partial<V> {\n  if (!v1 || !v2) {\n    return v1 || v2 || {};\n  }\n  return { ...v1, ...v2 };\n}\n\nexport function mergeVariantsWithStates(\n  variants: Variants,\n  $state: $State,\n  linkedStates: {\n    variantGroup: string;\n    statePath: (string | number)[];\n  }[]\n): Variants {\n  return {\n    ...variants,\n    ...Object.fromEntries(\n      linkedStates.map(({ variantGroup, statePath }) => [\n        variantGroup,\n        get($state, statePath),\n      ])\n    ),\n  };\n}\n\nfunction mergeArgs<A extends Args>(\n  a1: Partial<A> | undefined,\n  a2: Partial<A> | undefined\n): Partial<A> {\n  if (!a1 || !a2) {\n    return a1 || a2 || {};\n  }\n  return { ...a1, ...a2 };\n}\n\nfunction mergeFlexOverrides<O extends Overrides>(\n  o1: Partial<O>,\n  o2: Partial<O> | undefined\n): Partial<O> {\n  if (!o2) {\n    return o1;\n  }\n  const keys = Array.from(new Set([...Object.keys(o1), ...Object.keys(o2)]));\n  const merged: Record<string, any> = {};\n  for (const key of keys) {\n    merged[key] = mergeFlexOverride(o1[key], o2[key]);\n  }\n  return merged as Partial<O>;\n}\n\nfunction mergeFlexOverride<C extends React.ElementType<any>>(\n  fo1: Flex<C> | undefined,\n  fo2: Flex<C> | undefined\n): Flex<C> | undefined {\n  if (!fo1) {\n    return fo2;\n  }\n  if (!fo2) {\n    return fo1;\n  }\n\n  const o1 = deriveOverride(fo1);\n  const o2 = deriveOverride(fo2);\n  const wrap = chainSingleArgFuncs(...[o1.wrap, o2.wrap].filter(notNil));\n  const wrapChildren = chainSingleArgFuncs(\n    ...[o1.wrapChildren, o2.wrapChildren].filter(notNil)\n  );\n\n  // \"render\" type always takes precedence, but we still merge the props\n  const props = mergeOverrideProps(o1.props ?? {}, o2.props) as Partial<\n    React.ComponentProps<C>\n  >;\n  if (o2.type === \"render\") {\n    return {\n      render: o2.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  if (o1.type === \"render\") {\n    return {\n      render: o1.render,\n      props,\n      wrap,\n      wrapChildren,\n    };\n  }\n\n  // \"as\" will take precedence\n  const as =\n    (o2.type === \"as\" ? o2.as : undefined) ??\n    (o1.type === \"as\" ? o1.as : undefined);\n\n  return {\n    props,\n    wrap,\n    wrapChildren,\n    ...(as ? { as } : {}),\n  };\n}\n\nexport function deriveRenderOpts(\n  props: Record<string, any>,\n  config: {\n    name: string;\n    descendantNames: string[];\n    internalVariantPropNames: string[];\n    internalArgPropNames: string[];\n  }\n) {\n  const {\n    name,\n    descendantNames,\n    internalVariantPropNames,\n    internalArgPropNames,\n  } = config;\n  const reservedPropNames = [\"variants\", \"args\", \"overrides\"];\n  const variants = mergeVariants(\n    omit(pick(props, ...internalVariantPropNames), ...reservedPropNames),\n    props.variants\n  );\n  const args = mergeArgs(\n    omit(pick(props, ...internalArgPropNames), ...reservedPropNames),\n    props.args\n  );\n  let overrides = mergeFlexOverrides(\n    omit(\n      pick(props, ...descendantNames),\n      ...internalArgPropNames,\n      ...internalVariantPropNames,\n      ...reservedPropNames\n    ),\n    props.overrides\n  );\n\n  const leftoverProps = omit(\n    props,\n    \"variants\",\n    \"args\",\n    \"overrides\",\n    ...descendantNames,\n    ...internalVariantPropNames,\n    ...internalArgPropNames\n  ) as Partial<React.ComponentProps<\"button\">>;\n\n  if (Object.keys(leftoverProps).length > 0) {\n    overrides = mergeFlexOverrides(overrides, {\n      [name]: {\n        props: leftoverProps,\n      },\n    });\n  }\n  return { variants, args, overrides };\n}\n","import * as React from \"react\";\n\nexport const PlasmicHeadContext = React.createContext<\n  React.ComponentType<any> | undefined\n>(undefined);\n\ntype PlasmicHeadProps = {\n  title?: string;\n  description?: string;\n  image?: string;\n  canonical?: string;\n};\n\nexport function PlasmicHead(props: PlasmicHeadProps) {\n  const Head = React.useContext(PlasmicHeadContext);\n  if (!Head) {\n    console.warn(\n      `Plasmic: Head meta tags are being ignored. To make them work, pass a Head component into PlasmicRootProvider.`\n    );\n    // TODO: Link to doc about Head.\n    return null;\n  }\n\n  // Helmet does not support React.Fragments, so we need to use `[<meta />,\n  // <meta />]` instead of `<><meta /><meta /></>`.\n  return (\n    <Head>\n      {props.image ? (\n        [\n          <meta\n            key=\"twitter:card\"\n            name=\"twitter:card\"\n            content=\"summary_large_image\"\n          />,\n          <meta key=\"og:image\" property=\"og:image\" content={props.image} />,\n          <meta\n            key=\"twitter:image\"\n            name=\"twitter:image\"\n            content={props.image}\n          />,\n        ]\n      ) : (\n        <meta key=\"twitter:card\" name=\"twitter:card\" content=\"summary\" />\n      )}\n      {props.title && [\n        <title key=\"title\">{props.title}</title>,\n        <meta key=\"og:title\" property=\"og:title\" content={props.title} />,\n        <meta\n          key=\"twitter:title\"\n          property=\"twitter:title\"\n          content={props.title}\n        />,\n      ]}\n      {props.description && [\n        <meta\n          key=\"description\"\n          name=\"description\"\n          content={props.description}\n        />,\n        <meta\n          key=\"og:description\"\n          property=\"og:description\"\n          content={props.description}\n        />,\n        <meta\n          key=\"twitter:description\"\n          name=\"twitter:description\"\n          content={props.description}\n        />,\n      ]}\n      {props.canonical && (\n        <link key=\"canonical\" ref=\"canonical\" href={props.canonical} />\n      )}\n    </Head>\n  );\n}\n\nexport const plasmicHeadMeta = {\n  name: \"hostless-plasmic-head\",\n  displayName: \"Head\",\n  description: \"Used to add page metadata to HTML <head />.\",\n  importName: \"PlasmicHead\",\n  importPath: \"@plasmicapp/react-web\",\n  isRepeatable: false,\n  styleSections: false,\n  props: {\n    title: {\n      type: \"string\",\n      displayName: \"Title\",\n    },\n    description: {\n      type: \"string\",\n      displayName: \"Description\",\n    },\n    image: {\n      type: \"imageUrl\",\n      displayName: \"Image\",\n    },\n    canonical: {\n      type: \"string\",\n      displayName: \"Canonical URL\",\n    },\n  },\n};\n","/**\n * Responsive `<img/>` replacement, based on `next/image`\n */\n\nimport classNames from \"classnames\";\nimport React, { CSSProperties } from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeRefs } from \"../../react-utils\";\n\nexport interface ImageLoader {\n  supportsUrl: (url: string) => boolean;\n  transformUrl: (opts: {\n    src: string;\n    width?: number;\n    quality?: number;\n    format?: \"webp\";\n  }) => string;\n}\n\ntype ImgTagProps = Omit<\n  React.ComponentProps<\"img\">,\n  \"src\" | \"srcSet\" | \"ref\" | \"style\"\n>;\n\n// Default image sizes to snap to\n// TODO: make this configurable?\nconst IMG_SIZES = [16, 32, 48, 64, 96, 128, 256, 384];\nconst DEVICE_SIZES = [640, 750, 828, 1080, 1200, 1920, 2048, 3840];\nconst ALL_SIZES = [...IMG_SIZES, ...DEVICE_SIZES];\n\nexport interface PlasmicImgProps extends ImgTagProps {\n  /**\n   * Either an object with the src string, and its full width and height,\n   * or just a src string with unknown intrinsic dimensions.\n   */\n  src?:\n    | string\n    | {\n        src:\n          | string\n          | {\n              src: string;\n              height: number;\n              width: number;\n              blurDataURL?: string;\n            };\n        fullHeight: number;\n        fullWidth: number;\n        // We might also get a more precise aspectRatio for SVGs\n        // instead of relyiing on fullWidth / fullHeight, because\n        // those values might be rounded and not so accurate.\n        aspectRatio?: number;\n      };\n\n  /**\n   * className applied to the wrapper element if one is used.\n   */\n  className?: string;\n\n  /**\n   * css width\n   */\n  displayWidth?: number | string;\n\n  /**\n   * css height\n   */\n  displayHeight?: number | string;\n\n  /**\n   * css min-width\n   */\n  displayMinWidth?: number | string;\n\n  /**\n   * css min-height\n   */\n  displayMinHeight?: number | string;\n\n  /**\n   * css max-width\n   */\n  displayMaxWidth?: number | string;\n\n  /**\n   * css max-height\n   */\n  displayMaxHeight?: number | string;\n\n  /**\n   * For variable quality formats like jpg, the quality from 0 to 100\n   */\n  quality?: number;\n\n  /**\n   * ImageLoader to use for loading different dimensions of the image.\n   * If none specified, will not attempt to load different dimensions.\n   */\n  loader?: \"plasmic\" | ImageLoader;\n\n  /**\n   * Style applied to the wrapper element. objectFit and objectPosition\n   * rules are applied to the img element.\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Ref for the img element.  The normal <PlasmicImg ref={...} />\n   * prop gives the root element instead, which may be the img element\n   * or a wrapper element\n   */\n  imgRef?: React.Ref<HTMLImageElement>;\n}\n\nexport const PlasmicImg = React.forwardRef(function PlasmicImg(\n  props: PlasmicImgProps,\n  outerRef: React.Ref<HTMLElement>\n) {\n  let {\n    src,\n    className,\n    displayWidth,\n    displayHeight,\n    displayMinWidth,\n    displayMinHeight,\n    displayMaxWidth,\n    displayMaxHeight,\n    quality,\n    loader,\n    imgRef,\n    style,\n    loading,\n    ...rest\n  } = props;\n\n  const imgProps = Object.assign({}, rest, {\n    // Default loading to \"lazy\" if not specified (which is different from the\n    // html img, which defaults to eager!)\n    loading: loading ?? \"lazy\",\n  });\n\n  const { fullWidth, fullHeight, aspectRatio } =\n    typeof src === \"string\" || !src\n      ? { fullWidth: undefined, fullHeight: undefined, aspectRatio: undefined }\n      : src;\n  const srcStr = src\n    ? typeof src === \"string\"\n      ? src\n      : typeof src.src === \"string\"\n      ? src.src\n      : src.src.src\n    : \"\";\n\n  // Assume external image if either dimension is null and use usual <img>\n  if (fullHeight == null || fullWidth == null) {\n    return (\n      <img\n        src={srcStr}\n        className={className}\n        style={style}\n        {...imgProps}\n        loading={loading}\n        ref={mergeRefs(imgRef, outerRef) as any}\n      />\n    );\n  }\n\n  if (\n    isSvg(srcStr) &&\n    (displayHeight == null || displayHeight === \"auto\") &&\n    (displayWidth == null || displayWidth === \"auto\")\n  ) {\n    displayWidth = \"100%\";\n  }\n\n  let computedDisplayWidth = displayWidth;\n  if (\n    fullWidth &&\n    fullHeight &&\n    (!displayWidth || displayWidth === \"auto\") &&\n    !!getPixelLength(displayHeight)\n  ) {\n    // If there's a pixel length specified for displayHeight but not displayWidth,\n    // then we can derive the pixel length for displayWidth.  Having an explicit\n    // displayWidth makes this a fixed-size image, which makes it possible for us to\n    // generate better markup!\n    if (!isSvg(srcStr)) {\n      // We shouldn't do it for SVGs though, because `fullWidth` and\n      // `fullHeight` might have rounded values so the final\n      // `displayWidth` could differ by 1px or so.\n      computedDisplayWidth =\n        (getPixelLength(displayHeight)! * fullWidth) / fullHeight;\n    }\n  }\n\n  let spacerWidth = fullWidth;\n  let spacerHeight = fullHeight;\n  if (aspectRatio && isFinite(aspectRatio) && isSvg(srcStr)) {\n    // For SVGs, fullWidth and fullHeight can be rounded values, which would\n    // cause some discrepancy between the actual aspect ratio and the aspect\n    // ratio from those values. So, for those cases, we set large width / height\n    // values to get a more precise ratio from the spacer.\n    spacerWidth = DEFAULT_SVG_WIDTH;\n    spacerHeight = Math.round(spacerWidth / aspectRatio);\n  }\n\n  const { sizes, widthDescs } = getWidths(computedDisplayWidth, fullWidth, {\n    minWidth: displayMinWidth,\n  });\n  const imageLoader = getImageLoader(loader);\n  const spacerSvg = `<svg width=\"${spacerWidth}\" height=\"${spacerHeight}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\"/>`;\n  const spacerSvgBase64 =\n    typeof window === \"undefined\"\n      ? Buffer.from(spacerSvg).toString(\"base64\")\n      : window.btoa(spacerSvg);\n\n  let wrapperStyle: CSSProperties = { ...(style || {}) };\n  let spacerStyle: CSSProperties = {\n    ...pick(style || {}, \"objectFit\", \"objectPosition\"),\n  };\n\n  if (displayWidth != null && displayWidth !== \"auto\") {\n    // If width is set, set it on the wrapper along with min/max width\n    // and just use `width: 100%` on the spacer\n    spacerStyle.width = \"100%\";\n    // Rely on the styles set by `classname` on the wrapper:\n    // wrapperStyle.width = displayWidth;\n    // wrapperStyle.minWidth = displayMinWidth;\n    // wrapperStyle.maxWidth = displayMaxWidth;\n  } else {\n    // Otherwise, we want auto sizing from the spacer, so set width there.\n    //\n    // But if we have min/max width, it should be set in the wrapper and it\n    // can be percentage values (and we add corresponding min/max width to\n    // 100% in the spacer). In general it ends up with the correct effect,\n    // but some edge cases might make `min-width: 100%` shrink the image more\n    // than it should.\n    spacerStyle.width = displayWidth;\n    wrapperStyle.width = \"auto\";\n    if (displayMinWidth) {\n      spacerStyle.minWidth = \"100%\";\n      // Rely on min-width set by `classname` on the wrapper:\n      // wrapperStyle.minWidth = displayMinWidth;\n    }\n    if (displayMaxWidth != null && displayMaxWidth !== \"none\") {\n      spacerStyle.maxWidth = \"100%\";\n      // Rely on max-width set by `classname` on the wrapper:\n      // wrapperStyle.maxWidth = displayMaxWidth;\n    }\n  }\n\n  if (displayHeight != null && displayHeight !== \"auto\") {\n    spacerStyle.height = \"100%\";\n    // wrapperStyle.height = displayHeight;\n    // wrapperStyle.minHeight = displayMinHeight;\n    // wrapperStyle.maxHeight = displayMaxHeight;\n  } else {\n    spacerStyle.height = displayHeight;\n    wrapperStyle.height = \"auto\";\n    if (displayMinHeight) {\n      spacerStyle.minHeight = \"100%\";\n      // wrapperStyle.minHeight = displayMinHeight;\n    }\n    if (displayMaxHeight != null && displayMaxHeight !== \"none\") {\n      spacerStyle.maxHeight = \"100%\";\n      // wrapperStyle.maxHeight = displayMaxHeight;\n    }\n  }\n\n  return (\n    <div\n      className={classNames(className, \"__wab_img-wrapper\")}\n      ref={outerRef as any}\n      style={wrapperStyle}\n    >\n      <img\n        alt=\"\"\n        aria-hidden\n        className=\"__wab_img-spacer-svg\"\n        src={`data:image/svg+xml;base64,${spacerSvgBase64}`}\n        style={spacerStyle}\n      />\n      {makePicture({\n        imageLoader,\n        widthDescs,\n        sizes,\n        src: srcStr,\n        quality,\n        ref: imgRef,\n        style: style ? pick(style, \"objectFit\", \"objectPosition\") : undefined,\n        imgProps,\n        className: \"__wab_img\",\n      })}\n    </div>\n  );\n});\n\nfunction makePicture(opts: {\n  imageLoader?: ImageLoader;\n  widthDescs: WidthDesc[];\n  sizes?: string;\n  src: string;\n  quality?: number;\n  style?: React.CSSProperties;\n  className?: string;\n  imgProps: ImgTagProps;\n  ref?: React.Ref<HTMLImageElement>;\n}) {\n  // If imageLoader is undefined, then this renders to just a normal\n  // <img />.  Else it will render to a <picture> with a <source> for\n  // webp, and srcSet/sizes set according to width requirements.\n  const {\n    imageLoader,\n    widthDescs,\n    src,\n    quality,\n    style,\n    className,\n    sizes,\n    imgProps,\n    ref,\n  } = opts;\n  return (\n    <picture className=\"__wab_picture\">\n      {imageLoader && imageLoader.supportsUrl(src) && (\n        <source\n          type=\"image/webp\"\n          srcSet={widthDescs\n            .map(\n              (wd) =>\n                `${imageLoader.transformUrl({\n                  src,\n                  quality,\n                  width: wd.width,\n                  format: \"webp\",\n                })} ${wd.desc}`\n            )\n            .join(\", \")}\n        />\n      )}\n      <img\n        {...imgProps}\n        ref={ref}\n        className={className}\n        decoding=\"async\"\n        src={\n          imageLoader && imageLoader.supportsUrl(src)\n            ? imageLoader.transformUrl({\n                src,\n                quality,\n                width: widthDescs[widthDescs.length - 1].width,\n              })\n            : src\n        }\n        srcSet={\n          imageLoader && imageLoader.supportsUrl(src)\n            ? widthDescs\n                .map(\n                  (wd) =>\n                    `${imageLoader.transformUrl({\n                      src,\n                      quality,\n                      width: wd.width,\n                    })} ${wd.desc}`\n                )\n                .join(\", \")\n            : undefined\n        }\n        sizes={imageLoader && imageLoader.supportsUrl(src) ? sizes : undefined}\n        style={{\n          ...(style ? pick(style, \"objectFit\", \"objectPosition\") : {}),\n          width: 0,\n          height: 0,\n        }}\n      />\n    </picture>\n  );\n}\n\nconst DEFAULT_SVG_WIDTH = 10000;\n\nfunction isSvg(src: string) {\n  return src.endsWith(\".svg\") || src.startsWith(\"data:image/svg\");\n}\n\ninterface WidthDesc {\n  width?: number;\n  desc: string;\n}\n\nfunction getClosestPresetSize(width: number, fullWidth: number) {\n  const nextBiggerIndex =\n    ALL_SIZES.findIndex((w) => w >= width) ?? ALL_SIZES.length - 1;\n  const nextBigger = ALL_SIZES[nextBiggerIndex];\n  if (nextBigger >= fullWidth) {\n    // If the requested width is larger than the fullWidth,\n    // we just use the original width instead. It's impossible\n    // to make an image bigger than fullWidth!\n    return undefined;\n  } else if (\n    nextBiggerIndex + 1 < ALL_SIZES.length &&\n    fullWidth <= ALL_SIZES[nextBiggerIndex + 1]\n  ) {\n    // If the fullWidth is just between nextBigger and the one after that,\n    // then also might as well just use the original size (so, width is 30,\n    // nextBigger is 32, then we just use the original as long as fullWidth is\n    // less than 48)\n    return undefined;\n  }\n\n  return nextBigger;\n}\n\n/**\n * Computes the appropriate srcSet and sizes to use\n */\nfunction getWidths(\n  width: number | string | undefined,\n  fullWidth: number,\n  extra?: { minWidth: string | number | undefined }\n): { sizes: string | undefined; widthDescs: WidthDesc[] } {\n  const minWidth = extra?.minWidth;\n  const pixelWidth = getPixelLength(width);\n  const pixelMinWidth = getPixelLength(minWidth);\n  if (pixelWidth != null && (!minWidth || pixelMinWidth != null)) {\n    // If there's an exact width, then we just need to display it at 1x and 2x density\n    return {\n      widthDescs: [\n        {\n          width: getClosestPresetSize(\n            Math.max(pixelWidth, pixelMinWidth ?? 0),\n            fullWidth\n          ),\n          desc: \"1x\",\n        },\n        {\n          width: getClosestPresetSize(\n            Math.max(pixelWidth, pixelMinWidth ?? 0) * 2,\n            fullWidth\n          ),\n          desc: \"2x\",\n        },\n      ],\n      sizes: undefined,\n    };\n  }\n  // Otherwise we don't know what sizes we'll end up, so we just cap it at\n  // device width.  TODO: do better!\n  const usefulSizes = DEVICE_SIZES.filter(\n    (size) => !fullWidth || size < fullWidth\n  );\n  if (!!fullWidth && usefulSizes.length === 0) {\n    // image fullWidth is smaller than all device sizes.  So all we can do\n    // is offer 1x\n    return {\n      widthDescs: [\n        {\n          width: getClosestPresetSize(fullWidth, fullWidth),\n          desc: \"1x\",\n        },\n      ],\n      sizes: undefined,\n    };\n  }\n  return {\n    widthDescs: usefulSizes.map((size) => ({\n      width: getClosestPresetSize(size, fullWidth),\n      // If this is the last (buggest) useful width, but it is\n      // still within the bounds set by DEVICE_SIZES, then just\n      // use the original, unresized image.  This means if we match\n      // the largest size, we use unresized and best quality image.\n      // We only do this, though, if fullWidth is \"reasonable\" --\n      // smaller than the largest size we would consider.\n      // i === usefulSizes.length - 1 &&\n      // fullWidth < DEVICE_SIZES[DEVICE_SIZES.length - 1]\n      //   ? undefined\n      //   : size,\n      desc: `${size}w`,\n    })),\n    sizes: \"100vw\",\n  };\n}\n\nfunction getPixelLength(length: number | string | undefined) {\n  if (length == null || length == \"\") {\n    return undefined;\n  }\n\n  if (typeof length === \"number\") {\n    return length;\n  }\n\n  const parsed = parseNumeric(length);\n  if (parsed && (!parsed.units || parsed.units === \"px\")) {\n    return parsed.num;\n  }\n\n  return undefined;\n}\n\nfunction parseNumeric(val: string) {\n  // Parse strings like \"30\", \"30px\", \"30%\", \"30px /* blah blah */\"\n  const res = val.match(\n    /^\\s*(-?(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+))\\s*([a-z]*|%)\\s*(?:\\/\\*.*)?$/i\n  );\n  if (res == null) {\n    return undefined;\n  }\n  const num = res[1];\n  const units = res[2];\n  return { num: +num, units };\n}\n\nfunction getImageLoader(loader: \"plasmic\" | ImageLoader | undefined) {\n  if (loader == null) {\n    return undefined;\n  } else if (loader === \"plasmic\") {\n    return PLASMIC_IMAGE_LOADER;\n  } else {\n    return loader;\n  }\n}\n\nconst PLASMIC_IMAGE_LOADER: ImageLoader = {\n  supportsUrl: (src) => {\n    return src.startsWith(\"https://img.plasmic.app\") && !isSvg(src);\n  },\n  transformUrl: (opts) => {\n    const params = [\n      opts.width ? `w=${opts.width}` : undefined,\n      `q=${opts.quality ?? 75}`,\n      opts.format ? `f=${opts.format}` : undefined,\n    ].filter((x) => !!x);\n    return `${opts.src}?${params.join(\"&\")}`;\n  },\n};\n","import React from \"react\";\nimport { omit, pick } from \"../common\";\n\nexport const PlasmicLink = React.forwardRef(function PlasmicLink(\n  props: any,\n  ref: React.Ref<any>\n) {\n  // props.href is required for nextjs; if no props.href,\n  // then we just render the default anchor element\n  if (props.platform === \"nextjs\" && props.href) {\n    const nextjsProps = [\n      \"href\",\n      \"replace\",\n      \"scroll\",\n      \"shallow\",\n      \"passHref\",\n      \"prefetch\",\n      \"locale\",\n    ];\n\n    return React.createElement(\n      props.component,\n      { ...pick(props, ...nextjsProps), legacyBehavior: true },\n      <a {...omit(props, \"component\", \"platform\", ...nextjsProps)} ref={ref} />\n    );\n  }\n\n  if (props.platform === \"gatsby\" && isInternalHref(props.href)) {\n    return React.createElement(props.component, {\n      ...omit(props, \"component\", \"platform\", \"href\"),\n      ...{ to: props.href, ref },\n    });\n  }\n\n  return <a {...omit(props, \"component\", \"platform\")} ref={ref} />;\n});\n\nfunction isInternalHref(href: string): boolean {\n  return /^\\/(?!\\/)/.test(href);\n}\n","import React from \"react\";\n\nexport type PlasmicTranslator = (\n  str: string,\n  opts?: {\n    components?: {\n      [key: string]: React.ReactElement;\n    };\n  }\n) => React.ReactNode;\n\nexport const PlasmicTranslatorContext = React.createContext<\n  PlasmicTranslator | undefined\n>(undefined);\n\nexport interface TransProps {\n  transKey?: string;\n  children?: React.ReactNode;\n}\n\nfunction isIterable(val: any): val is Iterable<any> {\n  return val != null && typeof val[Symbol.iterator] === \"function\";\n}\n\nexport function genTranslatableString(elt: React.ReactNode) {\n  const components: {\n    [key: string]: React.ReactElement;\n  } = {};\n  let componentsCount = 0;\n\n  const getText = (node: React.ReactNode): string => {\n    if (!node) {\n      return \"\";\n    }\n    if (\n      typeof node === \"number\" ||\n      typeof node === \"boolean\" ||\n      typeof node === \"string\"\n    ) {\n      return node.toString();\n    }\n    if (typeof node !== \"object\") {\n      return \"\";\n    }\n    if (Array.isArray(node) || isIterable(node)) {\n      return Array.from(node)\n        .map((child) => getText(child))\n        .filter((child) => !!child)\n        .join(\"\");\n    }\n    const nodeChildren: React.ReactNode =\n      (hasKey(node, \"props\") &&\n        hasKey(node.props, \"children\") &&\n        (node.props.children as React.ReactNode | undefined)) ||\n      (hasKey(node, \"children\") && node.children) ||\n      [];\n    const contents = `${React.Children.toArray(nodeChildren)\n      .map((child) => getText(child))\n      .filter((child) => !!child)\n      .join(\"\")}`;\n    if (React.isValidElement(node) && node.type === React.Fragment) {\n      return contents;\n    }\n    const componentId = componentsCount + 1;\n    componentsCount++;\n    components[componentId] = React.isValidElement(node)\n      ? React.cloneElement(node as any, {\n          key: componentId,\n          children: undefined,\n        })\n      : (node as never);\n    return `<${componentId}>${contents}</${componentId}>`;\n  };\n\n  const str = getText(elt);\n  return {\n    str,\n    components,\n    componentsCount,\n  };\n}\n\nexport function Trans({ transKey, children }: TransProps) {\n  const _t = React.useContext(PlasmicTranslatorContext);\n  if (!_t) {\n    warnNoTranslationFunctionAtMostOnce();\n    return children;\n  }\n\n  const { str, components, componentsCount } = genTranslatableString(children);\n  return _t(transKey ?? str, componentsCount > 0 ? { components } : undefined);\n}\n\nlet hasWarned = false;\nfunction warnNoTranslationFunctionAtMostOnce() {\n  if (!hasWarned) {\n    console.warn(\n      \"Using Plasmic Translation but no translation function has been provided\"\n    );\n    hasWarned = true;\n  }\n}\n\nfunction hasKey<K extends string>(v: any, key: K): v is Record<K, any> {\n  return typeof v === \"object\" && v !== null && key in v;\n}\n","import * as React from \"react\";\nimport { mergeProps } from \"../react-utils\";\nimport { Trans } from \"./translation\";\n\nexport function PlasmicSlot<T extends keyof JSX.IntrinsicElements = \"div\">(\n  props: React.ComponentProps<T> & {\n    as?: T;\n    defaultContents?: React.ReactNode;\n    value?: React.ReactNode;\n  }\n) {\n  return renderPlasmicSlot(props);\n}\n\nexport function renderPlasmicSlot<\n  T extends keyof JSX.IntrinsicElements = \"div\"\n>(opts: {\n  as?: T;\n  defaultContents?: React.ReactNode;\n  value?: React.ReactNode;\n}) {\n  const { as, defaultContents, value, ...rest } = opts;\n\n  let content = value === undefined ? defaultContents : value;\n  if (!content || (Array.isArray(content) && content.length === 0)) {\n    return null;\n  }\n\n  // If the content is a raw string, then we need to wrap the raw string\n  // into an element, in case the slot is inside a flex-gap\n  // container (you cannot apply margin to just a text node).\n  const maybeString = maybeAsString(content);\n  if (maybeString) {\n    content = <span className=\"__wab_slot-string-wrapper\">{maybeString}</span>;\n  }\n\n  const nonEmptyProps = Object.keys(rest).filter((p) => !!(rest as any)[p]);\n  if (nonEmptyProps.length === 0) {\n    // No attrs to apply to the slot (which means the slot is unstyled), then\n    // just render the content directly; no need for style wrapper.\n    return <>{content}</>;\n  }\n\n  return React.createElement(\n    as || \"span\",\n    mergeProps({ className: \"__wab_slot\" }, rest),\n    content\n  );\n}\n\nfunction maybeAsString(\n  node: React.ReactNode\n): string | React.ReactElement | undefined {\n  // Unwrap fragments\n  if (React.isValidElement(node)) {\n    // Fragment doesn't render DOM elements\n    if (node.type === React.Fragment) {\n      return maybeAsString(node.props.children);\n    } else if (node.type === Trans) {\n      // Trans also doesn't render DOM elements. But we don't want to just render\n      // its content string, because we want to keep the <Trans/> for the localization.\n      // So we render the same node, to be wrapped into __wab_slot-string-wrapper.\n      return node;\n    }\n  }\n\n  if (typeof node === \"string\") {\n    return node;\n  }\n\n  if (Array.isArray(node) && node.length === 1 && typeof node[0] === \"string\") {\n    return node[0];\n  }\n\n  return undefined;\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { isBrowser, useIsomorphicLayoutEffect } from \"../react-utils\";\n\ntype Queries = { [name: string]: string };\n\nconst listeners: Array<() => void> = [];\nconst queries: Queries = {};\n\nfunction matchScreenVariants() {\n  if (!isBrowser) {\n    return [];\n  }\n  return Object.entries(queries)\n    .filter(([, query]) => window.matchMedia(query).matches)\n    .map(([name]) => name);\n}\n\n// undefined if screen variants have never been calculated\nlet curScreenVariants: string[] | undefined = undefined;\n\nfunction recalculateScreenVariants() {\n  const screenVariant = matchScreenVariants();\n  if (\n    !curScreenVariants ||\n    screenVariant.join(\"\") !== curScreenVariants.join(\"\")\n  ) {\n    curScreenVariants = screenVariant;\n    ReactDOM.unstable_batchedUpdates(() =>\n      listeners.forEach((listener) => listener())\n    );\n  }\n}\n\nfunction ensureInitCurScreenVariants() {\n  // Initializes curScreenVariants if it hadn't been before. Note that this must\n  // be called from within an effect.\n  if (curScreenVariants === undefined) {\n    curScreenVariants = matchScreenVariants();\n  }\n}\n\nif (isBrowser) {\n  window.addEventListener(\"resize\", recalculateScreenVariants);\n}\n\nexport function createUseScreenVariants(\n  isMulti: boolean,\n  screenQueries: Queries\n) {\n  Object.assign(queries, screenQueries);\n  curScreenVariants = undefined;\n\n  return function () {\n    // It is important that upon first render, we return [] or undefined, because\n    // that is what SSR will use, and the client must match.  In an effect (which\n    // only happens on the client), we then actually ask for the real screen variant\n    // and, if different from [] or undefined, forces a re-render.\n\n    const [, updateState] = React.useState<{}>();\n    const lastScreenVariantsRef = React.useRef<string[]>(\n      curScreenVariants || []\n    );\n\n    // We do useLayoutEffect instead of useEffect to immediately\n    // register our forceUpdate. This ensures that if there was\n    // a window resize event between render and effects, that the\n    // listener will be registered in time\n    useIsomorphicLayoutEffect(() => {\n      const updateIfChanged = () => {\n        if (\n          curScreenVariants &&\n          lastScreenVariantsRef.current.join(\"\") !== curScreenVariants.join(\"\")\n        ) {\n          lastScreenVariantsRef.current = curScreenVariants;\n          // Force update\n          updateState({});\n        }\n      };\n\n      // Listeners are invoked whenever the window is resized\n      listeners.push(updateIfChanged);\n\n      // Initialize the curScreenVariants for the first time.  We don't need\n      // to invoke the listeners here because all components will already\n      // have this effect running and will re-render if the real screen\n      // variant is non-empty.\n      ensureInitCurScreenVariants();\n\n      // Now, if the curScreenVariants differs from what we returned last,\n      // then force a re-render.\n      updateIfChanged();\n      return () => {\n        // Remove our listener on unmount\n        listeners.splice(listeners.indexOf(updateIfChanged), 1);\n      };\n    }, []);\n\n    if (isMulti) {\n      return curScreenVariants || [];\n    } else if (curScreenVariants) {\n      return curScreenVariants[curScreenVariants.length - 1];\n    } else {\n      return undefined;\n    }\n  };\n}\n","import { PlasmicDataSourceContextProvider } from \"@plasmicapp/data-sources-context\";\nimport { SSRProvider, useIsSSR as useAriaIsSSR } from \"@react-aria/ssr\";\nimport * as React from \"react\";\nimport { PlasmicHeadContext } from \"./PlasmicHead\";\nimport { PlasmicTranslator, PlasmicTranslatorContext } from \"./translation\";\nexport {\n  PlasmicDataSourceContextProvider,\n  useCurrentUser,\n} from \"@plasmicapp/data-sources-context\";\n\nexport interface PlasmicRootContextValue {\n  platform?: \"nextjs\" | \"gatsby\";\n}\n\nconst PlasmicRootContext = React.createContext<\n  PlasmicRootContextValue | undefined\n>(undefined);\n\nexport interface PlasmicRootProviderProps {\n  platform?: \"nextjs\" | \"gatsby\";\n  children?: React.ReactNode;\n  translator?: PlasmicTranslator;\n  Head?: React.ComponentType<any>;\n}\n\nexport function PlasmicRootProvider(props: PlasmicRootProviderProps) {\n  const {\n    platform,\n    children,\n    userAuthToken,\n    isUserLoading,\n    authRedirectUri,\n    user,\n  } = props as any;\n  const context = React.useMemo(\n    () => ({\n      platform,\n    }),\n    [platform]\n  );\n  const dataSourceContextValue = React.useMemo(\n    () => ({\n      userAuthToken,\n      user,\n      isUserLoading,\n      authRedirectUri,\n    }),\n    [userAuthToken, isUserLoading, user, authRedirectUri]\n  );\n  return (\n    <PlasmicRootContext.Provider value={context}>\n      <SSRProvider>\n        <PlasmicDataSourceContextProvider value={dataSourceContextValue}>\n          <PlasmicTranslatorContext.Provider value={props.translator}>\n            <PlasmicHeadContext.Provider value={props.Head}>\n              {children}\n            </PlasmicHeadContext.Provider>\n          </PlasmicTranslatorContext.Provider>\n        </PlasmicDataSourceContextProvider>\n      </SSRProvider>\n    </PlasmicRootContext.Provider>\n  );\n}\n\nexport const useIsSSR = useAriaIsSSR;\n\nexport function useHasPlasmicRoot() {\n  return !!React.useContext(PlasmicRootContext);\n}\n\nlet hasWarnedSSR = false;\n/**\n * Warns the user if PlasmicRootProvider is not used\n */\nexport function useEnsureSSRProvider() {\n  const hasRoot = useHasPlasmicRoot();\n  if (hasRoot || hasWarnedSSR || process.env.NODE_ENV !== \"development\") {\n    return;\n  }\n\n  hasWarnedSSR = true;\n  console.warn(\n    `Plasmic: To ensure your components work correctly with server-side rendering, please use PlasmicRootProvider at the root of your application.  See https://docs.plasmic.app/learn/ssr`\n  );\n}\n","import * as React from \"react\";\nimport { useFocusRing as useAriaFocusRing } from \"@react-aria/focus\";\n\nfunction useFocused(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisible(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: false,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useFocusedWithin(opts: { isTextInput?: boolean }) {\n  const { isFocused, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocused, focusProps];\n}\n\nfunction useFocusVisibleWithin(opts: { isTextInput?: boolean }) {\n  const { isFocusVisible, focusProps } = useAriaFocusRing({\n    within: true,\n    isTextInput: opts.isTextInput,\n  });\n\n  return [isFocusVisible, focusProps];\n}\n\nfunction useHover() {\n  const [isHover, setHover] = React.useState(false);\n  return [\n    isHover,\n    {\n      onMouseEnter: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n    },\n  ];\n}\n\nfunction usePressed() {\n  const [isPressed, setPressed] = React.useState(false);\n  return [\n    isPressed,\n    {\n      onMouseDown: () => setPressed(true),\n      onMouseUp: () => setPressed(false),\n    },\n  ];\n}\n\nconst TRIGGER_TO_HOOK = {\n  useHover,\n  useFocused,\n  useFocusVisible,\n  useFocusedWithin,\n  useFocusVisibleWithin,\n  usePressed,\n} as const;\n\ntype TriggerType = keyof typeof TRIGGER_TO_HOOK;\n\ninterface TriggerOpts {\n  isTextInput?: boolean;\n}\n\n/**\n * Installs argment trigger. All the useTrigger calls must use hardcoded `trigger` arg,\n * as it's not valid to install variable React hooks!\n */\nexport function useTrigger(trigger: TriggerType, opts: TriggerOpts) {\n  return TRIGGER_TO_HOOK[trigger](opts) as [\n    boolean,\n    React.HTMLAttributes<HTMLElement>\n  ];\n}\n","export type InitFuncEnv = {\n  $props: Record<string, any>;\n  $state: Record<string, any>;\n  $queries?: Record<string, any>;\n  $ctx?: Record<string, any>;\n};\n\nexport type DollarStateEnv = Omit<InitFuncEnv, \"$state\">;\n\nexport type NoUndefinedField<T> = { [P in keyof T]-?: T[P] };\n\nexport type InitFunc<T> = (env: NoUndefinedField<InitFuncEnv>) => T;\n\nexport type DeprecatedInitFunc<T> = (\n  $props: Record<string, any>,\n  $state: $State,\n  $ctx: Record<string, any>\n) => T;\n\nexport type ObjectPath = (string | number)[];\n\nexport interface $StateSpec<T> {\n  // path of the state, like `count` or `list.selectedIndex`\n  path: string;\n  // if initial value is defined by a js expression\n  initFunc?: InitFunc<T>;\n  // if initial value is a hard-coded value\n  initVal?: T;\n  // Whether this state is private, readonly, or writable in\n  // this component\n  type: \"private\" | \"readonly\" | \"writable\";\n\n  // If writable, there should be a valueProp that maps props[valueProp]\n  // to the value of the state\n  valueProp?: string;\n\n  // If writable or readonly, there should be an onChangeProp where\n  // props[onChangeProp] is invoked whenever the value changes\n  onChangeProp?: string;\n\n  isImmutable?: boolean;\n\n  variableType: \"text\" | \"number\" | \"boolean\" | \"array\" | \"object\" | \"variant\";\n}\n\nexport interface $State {\n  [key: string]: any;\n  registerInitFunc?: (\n    path: string,\n    f: InitFunc<any>,\n    repetitonIndex?: number[]\n  ) => any;\n}\n\nexport const ARRAY_SYMBOL = Symbol(\"[]\");\nexport const PLASMIC_STATE_PROXY_SYMBOL = Symbol(\"plasmic.state.proxy\");\n\nexport interface Internal$StateSpec<T> extends $StateSpec<T> {\n  isRepeated: boolean;\n  pathObj: (string | symbol)[];\n}\n\nexport interface Internal$StateInstance {\n  path: ObjectPath; // [\"counter\", 0, \"count\"]\n  specKey: string;\n}\n","import { isNum, shallowEqual } from \"./helpers\";\nimport {\n  $StateSpec,\n  ARRAY_SYMBOL,\n  InitFunc,\n  Internal$StateSpec,\n  ObjectPath,\n} from \"./types\";\n\nconst UNINITIALIZED = Symbol(\"plasmic.unitialized\");\n\nexport interface StateCell<T> {\n  initialValue?: T | Symbol;\n  path: ObjectPath;\n  registeredInitFunc?: InitFunc<T>;\n  listeners: (() => void)[];\n}\n\nexport class StateSpecNode<T> {\n  private _specs: Internal$StateSpec<T>[];\n  private _edges: Map<string | symbol, StateSpecNode<any>>;\n  private _state: Record<string, StateCell<T>>;\n\n  constructor(specs: Internal$StateSpec<T>[]) {\n    this._specs = specs;\n    this._edges = new Map();\n    this._state = {};\n  }\n\n  setSpecs(specs: Internal$StateSpec<T>[]) {\n    this._specs = specs;\n  }\n\n  edges() {\n    return this._edges;\n  }\n\n  state() {\n    return this._state;\n  }\n\n  hasEdge(key: string | symbol) {\n    return this._edges.has(key);\n  }\n\n  addEdge(key: string | symbol, node: StateSpecNode<any>) {\n    this._edges.set(key, node);\n  }\n\n  clearEdges() {\n    this._edges = new Map();\n  }\n\n  children() {\n    return this._edges.values();\n  }\n\n  makeTransition(key: string | symbol | number) {\n    key = isNum(key) ? ARRAY_SYMBOL : key;\n    return this._edges.get(key);\n  }\n\n  isLeaf() {\n    return this._edges.size === 0;\n  }\n\n  hasArrayTransition() {\n    return this._edges.has(ARRAY_SYMBOL);\n  }\n\n  getSpec() {\n    return this._specs[0];\n  }\n\n  getAllSpecs() {\n    return this._specs;\n  }\n\n  getState(path: ObjectPath) {\n    return this._state[JSON.stringify(path)];\n  }\n\n  getInitFunc(stateCell: StateCell<any>) {\n    return stateCell.registeredInitFunc ?? this.getSpec().initFunc;\n  }\n\n  clearStates() {\n    this._state = {};\n  }\n\n  states() {\n    return Object.values(this._state);\n  }\n\n  hasState(path: ObjectPath) {\n    const key = JSON.stringify(path);\n    return key in this._state;\n  }\n\n  createStateCell(path: ObjectPath) {\n    const key = JSON.stringify(path);\n    this._state[key] = {\n      listeners: [],\n      initialValue: UNINITIALIZED,\n      path,\n    };\n  }\n\n  deleteStateCell(prefixPath: ObjectPath) {\n    [...Object.keys(this._state)].forEach((key) => {\n      const path = JSON.parse(key);\n      if (shallowEqual(prefixPath, path.slice(0, prefixPath.length))) {\n        delete this._state[key];\n      }\n    });\n  }\n\n  setInitialValue(path: ObjectPath, value: any) {\n    const key = JSON.stringify(path);\n    this._state[key].initialValue = value;\n  }\n\n  getInitialValue(path: ObjectPath) {\n    const key = JSON.stringify(path);\n    return this._state[key].initialValue;\n  }\n\n  addListener(path: ObjectPath, f: () => void) {\n    const key = JSON.stringify(path);\n    this._state[key].listeners.push(f);\n  }\n}\n\nexport const transformPathStringToObj = (str: string) => {\n  const splitStatePathPart = (state: string): (string | symbol)[] =>\n    state.endsWith(\"[]\")\n      ? [...splitStatePathPart(state.slice(0, -2)), ARRAY_SYMBOL]\n      : [state];\n  return str.split(\".\").flatMap(splitStatePathPart);\n};\n\nexport function buildTree(specs: $StateSpec<any>[]) {\n  const internalSpec = specs.map(\n    (spec) =>\n      ({\n        ...spec,\n        pathObj: transformPathStringToObj(spec.path),\n        isRepeated: spec.path.split(\".\").some((part) => part.endsWith(\"[]\")),\n      } as Internal$StateSpec<any>)\n  );\n\n  const rec = (currentPath: (string | symbol)[]): StateSpecNode<any> => {\n    const node = new StateSpecNode(\n      internalSpec.filter((spec) =>\n        shallowEqual(currentPath, spec.pathObj.slice(0, currentPath.length))\n      )!\n    );\n    node.getAllSpecs().forEach((spec) => {\n      if (spec.pathObj.length > currentPath.length) {\n        const nextKey = spec.pathObj[currentPath.length];\n        if (!node.hasEdge(nextKey)) {\n          node.addEdge(nextKey, rec([...currentPath, nextKey]));\n        }\n      }\n    });\n    return node;\n  };\n\n  return rec([]);\n}\n\nexport function updateTree(root: StateSpecNode<any>, specs: $StateSpec<any>[]) {\n  const internalSpec = specs.map(\n    (spec) =>\n      ({\n        ...spec,\n        pathObj: transformPathStringToObj(spec.path),\n        isRepeated: spec.path.split(\".\").some((part) => part.endsWith(\"[]\")),\n      } as Internal$StateSpec<any>)\n  );\n\n  const rec = (\n    oldNode: StateSpecNode<any> | undefined,\n    currentPath: (string | symbol)[]\n  ): StateSpecNode<any> => {\n    const nodeSpecs = internalSpec.filter((spec) =>\n      shallowEqual(currentPath, spec.pathObj.slice(0, currentPath.length))\n    )!;\n    const node = oldNode ?? new StateSpecNode(nodeSpecs);\n    node.setSpecs(nodeSpecs);\n    const oldEdges = oldNode?.edges();\n    node.clearEdges();\n    node.getAllSpecs().forEach((spec) => {\n      if (spec.pathObj.length > currentPath.length) {\n        const nextKey = spec.pathObj[currentPath.length];\n        if (!node.hasEdge(nextKey)) {\n          node.addEdge(\n            nextKey,\n            rec(oldEdges?.get(nextKey), [...currentPath, nextKey])\n          );\n        }\n      }\n    });\n    return node;\n  };\n\n  return rec(root, []);\n}\n\nexport function getStateCells(root: StateSpecNode<any>) {\n  const leaves: StateSpecNode<any>[] = [];\n  const rec = (node: StateSpecNode<any>) => {\n    for (const child of node.children()) {\n      rec(child);\n    }\n    if (node.isLeaf() && node.getAllSpecs().length > 0) {\n      leaves.push(node);\n    }\n  };\n  rec(root);\n  return leaves;\n}\n\nexport function findStateCell(\n  root: StateSpecNode<any>,\n  pathStr: string,\n  repetitionIndex?: number[]\n) {\n  const realPath: ObjectPath = [];\n  const pathObj = transformPathStringToObj(pathStr);\n  let currRepIndex = 0;\n  for (const part of pathObj) {\n    if (typeof part === \"symbol\") {\n      if (\n        !root.hasArrayTransition() ||\n        !repetitionIndex ||\n        currRepIndex > repetitionIndex.length\n      ) {\n        throw new Error(\n          `transition not found: pathStr ${pathStr} part ${\n            typeof part === \"symbol\" ? \"[]\" : part\n          }`\n        );\n      }\n      realPath.push(repetitionIndex[currRepIndex++]);\n      root = root.makeTransition(ARRAY_SYMBOL)!;\n    } else {\n      if (!root.hasEdge(part)) {\n        throw new Error(\n          `transition not found: pathStr ${pathStr} part ${\n            typeof part === \"symbol\" ? \"[]\" : part\n          }`\n        );\n      }\n      realPath.push(part);\n      root = root.makeTransition(part)!;\n    }\n  }\n  return {\n    node: root,\n    realPath,\n  };\n}\n","import get from \"dlv\";\nimport { useEffect, useLayoutEffect } from \"react\";\nimport { getStateCells, StateSpecNode } from \"./graph\";\nimport { $State, ObjectPath, PLASMIC_STATE_PROXY_SYMBOL } from \"./types\";\n\nexport function generateStateOnChangeProp(\n  $state: $State,\n  path: ObjectPath\n): (val: any) => void {\n  return (val) => set($state, path, val);\n}\n\nexport function generateStateValueProp($state: $State, path: ObjectPath) {\n  return get($state, path);\n}\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nexport function isPlasmicStateProxy(obj: any) {\n  return (\n    obj != null && typeof obj === \"object\" && !!obj[PLASMIC_STATE_PROXY_SYMBOL]\n  );\n}\n\nexport function getStateCellsInPlasmicProxy(\n  obj: any\n): { realPath: ObjectPath; path: string }[] {\n  if (!isPlasmicStateProxy(obj)) {\n    return [];\n  }\n  const { node: rootNode, path: rootPath, isOutside } = obj[\n    PLASMIC_STATE_PROXY_SYMBOL\n  ];\n  if (isOutside) {\n    return [];\n  }\n  return getStateCells(rootNode).flatMap((node) =>\n    node.states().map((stateCell) => ({\n      path: node.getSpec().path,\n      realPath: stateCell.path.slice(rootPath.length),\n    }))\n  );\n}\n\nexport function getStateSpecInPlasmicProxy(obj: any, path: ObjectPath) {\n  obj = get(obj, path.slice(0, path.length - 1));\n  if (!isPlasmicStateProxy(obj)) {\n    return undefined;\n  }\n  const { node, isOutside } = obj[PLASMIC_STATE_PROXY_SYMBOL] as {\n    node: StateSpecNode<any>;\n    isOutside: boolean;\n  };\n  const nextNode = node.makeTransition(path[path.length - 1]);\n  if (isOutside || node.isLeaf() || !nextNode) {\n    return undefined;\n  }\n  return {\n    spec: nextNode.getSpec(),\n    isImplicitStateArray: nextNode.hasArrayTransition(),\n  };\n}\n\nexport function shallowEqual<T>(a1: T[], a2: T[]) {\n  if (a1.length !== a2.length) {\n    return false;\n  }\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] !== a2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Shallow comparison of arrays.\n */\nexport function arrayEq(xs: ReadonlyArray<any>, ys: ReadonlyArray<any>) {\n  return (\n    xs.length === ys.length && xs.every((_, index) => xs[index] === ys[index])\n  );\n}\n\nexport function isNum(value: string | number | symbol): value is number {\n  return typeof value === \"symbol\" ? false : !isNaN(+value);\n}\n\ntype StringGen = string | (() => string);\nexport function assert<T>(\n  cond: T,\n  msg: StringGen = \"Assertion failed\"\n): asserts cond {\n  if (!cond) {\n    // We always generate an non empty message so that it doesn't get swallowed\n    // by the async library.\n    msg = (typeof msg === \"string\" ? msg : msg()) || \"Assertion failed\";\n    debugger;\n    throw new Error(msg);\n  }\n}\n\n/**\n * Forked from https://github.com/lukeed/dset\n * Changes: fixed setting a deep value to a proxy object\n */\nexport function set(obj: any, keys: any, val: any) {\n  keys = keys.split ? keys.split(\".\") : keys;\n  var i = 0,\n    l = keys.length,\n    t = obj,\n    x,\n    k;\n  while (i < l) {\n    k = keys[i++];\n    if (k === \"__proto__\" || k === \"constructor\" || k === \"prototype\") break;\n    const newValue =\n      i === l\n        ? val\n        : typeof (x = t[k]) === typeof keys\n        ? x\n        : keys[i] * 0 !== 0 || !!~(\"\" + keys[i]).indexOf(\".\")\n        ? {}\n        : [];\n    assignValue(t, k, newValue);\n    t = t[k];\n  }\n}\n\n/**\n * Forked from lodash\n */\nfunction baseAssignValue(object: any, key: any, value: any) {\n  if (key == \"__proto__\") {\n    Object.defineProperty(object, key, {\n      configurable: true,\n      enumerable: true,\n      value: value,\n      writable: true,\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nfunction eq(value: any, other: any) {\n  return value === other || (value !== value && other !== other);\n}\n\nfunction assignValue(object: any, key: any, value: any) {\n  const objValue = object[key];\n  if (\n    !(\n      Object.prototype.hasOwnProperty.call(object, key) && eq(objValue, value)\n    ) ||\n    (value === undefined && !(key in object))\n  ) {\n    baseAssignValue(object, key, value);\n  }\n}\n","import clone from \"clone\";\nimport get from \"dlv\";\nimport deepEqual from \"fast-deep-equal\";\nimport React from \"react\";\nimport { proxy as createValtioProxy, ref, useSnapshot } from \"valtio\";\nimport {\n  buildTree,\n  findStateCell,\n  getStateCells,\n  StateCell,\n  StateSpecNode,\n  updateTree,\n} from \"./graph\";\nimport { arrayEq, assert, set, useIsomorphicLayoutEffect } from \"./helpers\";\nimport {\n  $State,\n  $StateSpec,\n  DeprecatedInitFunc,\n  DollarStateEnv,\n  InitFunc,\n  InitFuncEnv,\n  NoUndefinedField,\n  ObjectPath,\n  PLASMIC_STATE_PROXY_SYMBOL,\n} from \"./types\";\n\nfunction isNum(value: string | number | symbol): value is number {\n  return typeof value === \"symbol\" ? false : !isNaN(+value);\n}\n\nfunction canProxy(value: any) {\n  return typeof value === \"object\" && value != null;\n}\n\ninterface Internal$State {\n  registrationsQueue: {\n    node: StateSpecNode<any>;\n    path: ObjectPath;\n    f: InitFunc<any>;\n  }[];\n  stateValues: Record<string, any>;\n  env: NoUndefinedField<DollarStateEnv>;\n  rootSpecTree: StateSpecNode<any>;\n  specTreeLeaves: StateSpecNode<any>[];\n  specs: $StateSpec<any>[];\n}\n\nfunction initializeStateValue(\n  $$state: Internal$State,\n  initialSpecNode: StateSpecNode<any>,\n  initialStatePath: ObjectPath,\n  proxyRoot: any\n) {\n  const stateAccess: Set<{\n    node: StateSpecNode<any>;\n    path: ObjectPath;\n  }> = new Set();\n  const $state = create$StateProxy($$state, (node, path) => ({\n    get() {\n      stateAccess.add({ path, node });\n      const spec = node.getSpec();\n      if (spec.valueProp) {\n        return $$state.env.$props[spec.valueProp];\n      } else if (!node.hasState(path) && spec.initFunc) {\n        node.createStateCell(path);\n        return initializeStateValue($$state, node, path, proxyRoot);\n      }\n      return get(proxyRoot, path);\n    },\n    set() {\n      throw new Error(`Cannot update state values during initialization`);\n    },\n  }));\n\n  stateAccess.forEach(({ node, path }) => {\n    node.addListener(path, () => {\n      const newValue = invokeInitFuncBackwardsCompatible(\n        initialSpecNode.getSpec().initFunc!,\n        {\n          $state,\n          ...$$state.env,\n        }\n      );\n      set(proxyRoot, initialStatePath, newValue);\n    });\n  });\n\n  const initFunc = initialSpecNode.getInitFunc(\n    initialSpecNode.getState(initialStatePath)\n  )!;\n  const initialValue = invokeInitFuncBackwardsCompatible(initFunc, {\n    $state,\n    ...$$state.env,\n  });\n  initialSpecNode.setInitialValue(initialStatePath, clone(initialValue));\n\n  const initialSpec = initialSpecNode.getSpec();\n  const value = initialSpec.isImmutable\n    ? mkUntrackedValue(initialValue)\n    : clone(initialValue);\n  set(proxyRoot, initialStatePath, value);\n  //immediately fire onChange\n  if (initialSpec.onChangeProp) {\n    $$state.env.$props[initialSpec.onChangeProp]?.(initialValue);\n  }\n\n  return initialValue;\n}\n\nfunction create$StateProxy(\n  $$state: Internal$State,\n  leafHandlers: (\n    node: StateSpecNode<any>,\n    path: ObjectPath\n  ) => ProxyHandler<any>\n) {\n  let proxyRoot: any;\n  const rec = (\n    currPath: ObjectPath,\n    currNode: StateSpecNode<any>,\n    isOutside: boolean,\n    initialObject?: any\n  ) => {\n    const getNextPath = (property: string | number | symbol) => [\n      ...currPath,\n      isNum(property) ? +property : (property as string),\n    ];\n    const spec = currNode.getSpec();\n    const handlers: ProxyHandler<any> = {\n      deleteProperty(target, property) {\n        if (\n          !isOutside &&\n          !currNode.isLeaf() &&\n          !currNode.hasArrayTransition() &&\n          !isNum(property)\n        ) {\n          throw new Error(\n            \"Can't delete a property in the middle of the state spec\"\n          );\n        }\n        delete get($$state.stateValues, currPath)[property];\n        if (spec.onChangeProp) {\n          //we are always in a leaf, since we only have two cases:\n          // 1 - delete properties outside the state tree\n          // 2 - delete indices in repeated implicit states, but these can't be exposed, so they don't have onChangeProp\n          $$state.env.$props[spec.onChangeProp]?.(\n            get(proxyRoot, currPath.slice(spec.pathObj.length))\n          );\n        }\n        const nextPath = getNextPath(property);\n        const nextNode = currNode.makeTransition(property);\n        if (nextNode) {\n          getStateCells(nextNode).forEach((node) => {\n            node.deleteStateCell(nextPath);\n          });\n        }\n        return Reflect.deleteProperty(target, property);\n      },\n      get(target, property, receiver) {\n        if (property === PLASMIC_STATE_PROXY_SYMBOL) {\n          return {\n            node: currNode,\n            path: currPath,\n            isOutside,\n          };\n        }\n        const nextPath = getNextPath(property);\n\n        if (isOutside || currNode.isLeaf()) {\n          return Reflect.get(target, property, receiver);\n        }\n        const nextNode = currNode.makeTransition(property);\n        if (nextNode?.isLeaf()) {\n          return leafHandlers(nextNode, nextPath).get?.(\n            target,\n            property,\n            receiver\n          );\n        } else if (nextNode && !(property in target)) {\n          target[property] = rec(nextPath, nextNode, false, undefined);\n        }\n        return Reflect.get(target, property, receiver);\n      },\n      set(target, property, value, receiver) {\n        const nextPath = getNextPath(property);\n        let nextNode = currNode.makeTransition(property);\n\n        if (property === \"registerInitFunc\" && currPath.length === 0) {\n          return Reflect.set(target, property, value, receiver);\n        }\n        if (!nextNode && currNode.hasArrayTransition()) {\n          set($$state.stateValues, nextPath, value);\n          //array can set his own properties such as length, map, ...\n          return Reflect.set(target, property, value, receiver);\n        }\n        if (nextNode?.isLeaf()) {\n          leafHandlers(nextNode, nextPath).set?.(\n            target,\n            property,\n            value,\n            receiver\n          );\n        }\n        if (!isOutside && !currNode.isLeaf() && !nextNode) {\n          // can't set an unknown field in $state\n          return false;\n        }\n        // we keep pointing to the leaf\n        if (!nextNode) {\n          assert(isOutside || currNode.isLeaf, \"unexpected update in nextNode\");\n          nextNode = currNode;\n        }\n        if (canProxy(value)) {\n          target[property] = rec(\n            nextPath,\n            nextNode,\n            isOutside || currNode.isLeaf(),\n            value\n          );\n        } else if (!isOutside && !currNode.isLeaf() && !nextNode?.isLeaf()) {\n          throw new Error(\"inserting a primitive value into a non-leaf\");\n        } else {\n          Reflect.set(target, property, value, receiver);\n        }\n        if (currNode.isLeaf()) {\n          if (spec.onChangeProp) {\n            $$state.env.$props[spec.onChangeProp]?.(target);\n          }\n        } else {\n          nextNode.getAllSpecs().forEach((spec) => {\n            if (spec.onChangeProp) {\n              $$state.env.$props[spec.onChangeProp]?.(value);\n            }\n          });\n        }\n        const newValue =\n          (isOutside || currNode.isLeaf()) && currNode.getSpec().isImmutable\n            ? mkUntrackedValue(value)\n            : value;\n        set($$state.stateValues, nextPath, newValue);\n        return true;\n      },\n    };\n    const baseObject =\n      !isOutside && !currNode.isLeaf()\n        ? currNode.hasArrayTransition()\n          ? []\n          : {}\n        : Array.isArray(initialObject)\n        ? []\n        : Object.create(Object.getPrototypeOf(initialObject ?? {}));\n    const proxyObj = new Proxy(baseObject, handlers);\n    if (currPath.length === 0) {\n      proxyRoot = proxyObj;\n    }\n    if (initialObject) {\n      Reflect.ownKeys(initialObject).forEach((key) => {\n        const desc = Object.getOwnPropertyDescriptor(\n          initialObject,\n          key\n        ) as PropertyDescriptor;\n        if (desc.get || desc.set) {\n          Object.defineProperty(baseObject, key, desc);\n        } else {\n          proxyObj[key] = initialObject[key];\n        }\n      });\n    }\n    return proxyObj;\n  };\n\n  return rec([], $$state.rootSpecTree, false, undefined);\n}\n\nconst mkUntrackedValue = (o: any) =>\n  o != null && typeof o === \"object\" ? ref(o) : o;\n\nconst envFieldsAreNonNill = (\n  env: DollarStateEnv\n): NoUndefinedField<DollarStateEnv> => ({\n  $props: env.$props,\n  $ctx: env.$ctx ?? {},\n  $queries: env.$queries ?? {},\n});\n\n/**\n * We need to support two versions with different parameters to be backward compatible\n *    {\n *       specs: $StateSpec<any>[],\n *       props: Record<string, any>,\n *       $ctx?: Record<string, any>,\n *       opts?: { inCanvas: boolean; }\n *    }\n *    {\n *       specs: $StateSpec<any>[],\n *       env: { $props; $queries; $ctx },\n *       opts?: { inCanvas: boolean }\n *    }\n */\nfunction extractDollarStateParametersBackwardCompatible(\n  ...rest: any[]\n): {\n  env: DollarStateEnv;\n  opts?: { inCanvas: boolean };\n} {\n  if (\"$props\" in rest[0]) {\n    // latest version\n    return {\n      env: rest[0],\n      opts: rest[1],\n    };\n  } else {\n    return {\n      env: {\n        $props: rest[0],\n        $ctx: rest[1],\n        $queries: {},\n      },\n      opts: rest[2],\n    };\n  }\n}\n\nfunction invokeInitFuncBackwardsCompatible<T>(\n  initFunc: InitFunc<T> | DeprecatedInitFunc<T>,\n  env: NoUndefinedField<InitFuncEnv>\n) {\n  if (initFunc.length > 1) {\n    return (initFunc as DeprecatedInitFunc<T>)(\n      env.$props,\n      env.$state,\n      env.$ctx\n    );\n  } else {\n    return (initFunc as InitFunc<T>)(env);\n  }\n}\n\nexport function useDollarState(\n  specs: $StateSpec<any>[],\n  ...rest: any[]\n): $State {\n  const { env, opts } = extractDollarStateParametersBackwardCompatible(...rest);\n  const $$state = React.useRef<Internal$State>(\n    (() => {\n      const rootSpecTree = buildTree(specs);\n      return {\n        rootSpecTree: rootSpecTree,\n        specTreeLeaves: getStateCells(rootSpecTree),\n        stateValues: createValtioProxy({}),\n        env: envFieldsAreNonNill(env),\n        specs: [],\n        registrationsQueue: createValtioProxy([]),\n      };\n    })()\n  ).current;\n  ($$state.env = envFieldsAreNonNill(env)), ($$state.specs = specs);\n\n  const create$State = () => {\n    const $state = Object.assign(\n      create$StateProxy($$state, (node, path) => {\n        if (!node.hasState(path)) {\n          node.createStateCell(path);\n          const spec = node.getSpec();\n          if (spec.initFunc) {\n            initializeStateValue($$state, node, path, $state);\n          } else if (!spec.valueProp) {\n            set($state, path, spec.initVal);\n          }\n        }\n        return {\n          get(target, property, receiver) {\n            const spec = node.getSpec();\n            if (spec.valueProp) {\n              return $$state.env.$props[spec.valueProp];\n            } else {\n              return Reflect.get(target, property, receiver);\n            }\n          },\n        };\n      }),\n      {\n        registerInitFunc: function <T>(\n          pathStr: string,\n          f: InitFunc<T>,\n          repetitionIndex?: number[]\n        ) {\n          const { node, realPath } = findStateCell(\n            $$state.rootSpecTree,\n            pathStr,\n            repetitionIndex\n          );\n          if (!node.hasState(realPath)) {\n            node.createStateCell(realPath);\n          }\n          if (\n            !deepEqual(\n              node.getState(realPath).initialValue,\n              f({ $state, ...$$state.env })\n            )\n          ) {\n            $$state.registrationsQueue.push(\n              mkUntrackedValue({ node, path: realPath, f })\n            );\n          }\n        },\n      }\n    );\n    return $state;\n  };\n  const ref = React.useRef<undefined | $State>(undefined);\n  if (!ref.current) {\n    ref.current = create$State();\n  }\n  let $state = ref.current as $State;\n  if (opts?.inCanvas) {\n    $$state.rootSpecTree = updateTree($$state.rootSpecTree, specs);\n    const newLeaves = getStateCells($$state.rootSpecTree);\n    if (!arrayEq(newLeaves, $$state.specTreeLeaves)) {\n      const old$State = $state;\n      $state = ref.current = create$State();\n      $$state.specTreeLeaves = newLeaves;\n      $$state.specTreeLeaves\n        .flatMap((node) => node.states())\n        .forEach(({ path }) => {\n          set($state, path, get(old$State, path));\n        });\n    }\n    // we need to eager initialize all states in canvas to populate the data picker\n    $$state.specTreeLeaves.forEach((node) => {\n      const spec = node.getSpec();\n      if (spec.isRepeated || node.hasState(spec.pathObj as string[])) {\n        return;\n      }\n      node.createStateCell(spec.pathObj as string[]);\n      const init = spec.valueProp\n        ? $$state.env.$props[spec.valueProp]\n        : spec.initFunc\n        ? initializeStateValue($$state, node, spec.pathObj as string[], $state)\n        : spec.initVal;\n      set($state, spec.pathObj, init);\n    });\n  }\n\n  // For each spec with an initFunc, evaluate it and see if\n  // the init value has changed. If so, reset its state.\n  const resetSpecs: {\n    stateCell: StateCell<any>;\n    node: StateSpecNode<any>;\n  }[] = [];\n  $$state.specTreeLeaves\n    .flatMap((node) => node.states().map((stateCell) => ({ stateCell, node })))\n    .forEach(({ node, stateCell }) => {\n      const initFunc = node.getInitFunc(stateCell);\n      if (initFunc) {\n        const newInit = invokeInitFuncBackwardsCompatible(initFunc, {\n          $state,\n          ...envFieldsAreNonNill(env),\n        });\n        if (!deepEqual(newInit, stateCell.initialValue)) {\n          resetSpecs.push({ stateCell, node });\n        }\n      }\n    });\n  const reInitializeState = (\n    node: StateSpecNode<any>,\n    stateCell: StateCell<any>\n  ) => {\n    const newInit = initializeStateValue($$state, node, stateCell.path, $state);\n    const spec = node.getSpec();\n    if (spec.onChangeProp) {\n      $$state.env.$props[spec.onChangeProp]?.(newInit);\n    }\n  };\n  useIsomorphicLayoutEffect(() => {\n    resetSpecs.forEach(({ stateCell, node }) => {\n      reInitializeState(node, stateCell);\n    });\n  }, [env.$props, resetSpecs]);\n  useIsomorphicLayoutEffect(() => {\n    while ($$state.registrationsQueue.length) {\n      const { node, path, f } = $$state.registrationsQueue.shift()!;\n      const stateCell = node.getState(path);\n      stateCell.registeredInitFunc = f;\n      reInitializeState(node, stateCell);\n    }\n  }, [$$state.registrationsQueue.length]);\n  // immediately initialize exposed non-private states\n  useIsomorphicLayoutEffect(() => {\n    $$state.specTreeLeaves.forEach((node) => {\n      const spec = node.getSpec();\n      if (!spec.isRepeated && spec.type !== \"private\" && spec.initFunc) {\n        node.createStateCell(spec.pathObj as string[]);\n        initializeStateValue($$state, node, spec.pathObj as string[], $state);\n      }\n    });\n  }, []);\n\n  // Re-render if any value changed in one of these objects\n  useSnapshot($$state.stateValues, { sync: true });\n  useSnapshot($$state.registrationsQueue);\n  return $state;\n}\n\nexport default useDollarState;\n","// Utilities used by generated code\nimport _classNames from \"classnames\";\nexport { PlasmicPageGuard } from \"./auth/PlasmicPageGuard\";\nexport { omit, pick } from \"./common\";\nexport { HTMLElementRefOf, StrictProps } from \"./react-utils\";\nexport {\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  Flex,\n  hasVariant,\n  makeFragment,\n  mergeVariantsWithStates,\n  MultiChoiceArg,\n  SingleBooleanChoiceArg,\n  SingleChoiceArg,\n  wrapWithClassName,\n} from \"./render/elements\";\nexport { ensureGlobalVariants } from \"./render/global-variants\";\nexport { PlasmicHead, plasmicHeadMeta } from \"./render/PlasmicHead\";\nexport { PlasmicIcon } from \"./render/PlasmicIcon\";\nexport { PlasmicImg } from \"./render/PlasmicImg\";\nexport { PlasmicLink } from \"./render/PlasmicLink\";\nexport { PlasmicSlot, renderPlasmicSlot } from \"./render/PlasmicSlot\";\nexport { createUseScreenVariants } from \"./render/screen-variants\";\nexport {\n  PlasmicDataSourceContextProvider,\n  PlasmicRootProvider,\n  useCurrentUser,\n  useIsSSR,\n} from \"./render/ssr\";\nexport { Stack } from \"./render/Stack\";\nexport { genTranslatableString, Trans } from \"./render/translation\";\nexport { useTrigger } from \"./render/triggers\";\nexport * from \"./states\";\nexport const classNames = _classNames;\n","import * as React from \"react\";\nimport { groupBy, mapValues } from \"../common\";\nimport { SingleChoiceArg } from \"../render/elements\";\n\nexport let PLUME_STRICT_MODE = true;\n\nexport function setPlumeStrictMode(mode: boolean) {\n  PLUME_STRICT_MODE = mode;\n}\n\ntype VariantArgChoices<T> = T extends (infer M)[]\n  ? M\n  : T extends SingleChoiceArg<infer M>\n  ? M\n  : never;\ntype VariantArgsChoices<V> = { [k in keyof V]-?: VariantArgChoices<V[k]> };\ntype DictValues<V extends Record<string, any>> = V[keyof V];\ntype DictTuples<V extends Record<string, any>> = DictValues<\n  { [K in keyof V]: [K, V[K]] }\n>;\nexport type VariantDefTuple<V> = DictTuples<VariantArgsChoices<V>>;\n\ntype DistributeTuple<T> = T extends [infer T1, infer T2]\n  ? { group: T1; variant: T2 }\n  : never;\n\nexport type VariantDef<V> = DistributeTuple<VariantDefTuple<V>>;\n\nexport type PlasmicClass<\n  V extends Record<string, any>,\n  A extends Record<string, any>,\n  O extends Record<string, any>\n> = {\n  (props: { variants?: V; args?: A; overrides?: O }): React.ReactElement | null;\n  internalVariantProps: (keyof V)[];\n  internalArgProps: (keyof A)[];\n};\n\nexport type AnyPlasmicClass = PlasmicClass<any, any, any>;\n\nexport type PlasmicClassVariants<\n  C extends AnyPlasmicClass\n> = C extends PlasmicClass<infer V, any, any> ? V : unknown;\nexport type PlasmicClassArgs<\n  C extends AnyPlasmicClass\n> = C extends PlasmicClass<any, infer A, any> ? A : unknown;\nexport type PlasmicClassOverrides<\n  C extends AnyPlasmicClass\n> = C extends PlasmicClass<any, any, infer O> ? O : unknown;\n\ntype BooleanLike = boolean | undefined | null;\n\nexport function mergeVariantToggles<V>(\n  ...toggles: { def?: VariantDef<V>; active: BooleanLike }[]\n) {\n  const definedToggles = toggles.filter((x) => !!x.def) as {\n    def: VariantDef<V>;\n    active: BooleanLike;\n  }[];\n  const grouped = groupBy(definedToggles, ({ def }) => def.group as string);\n  return mapValues(grouped, (subToggles) => {\n    return Object.fromEntries(\n      subToggles.map(({ def, active }) => [def.variant, !!active])\n    );\n  });\n}\n\nexport function noOutline() {\n  return { outline: \"none\" };\n}\n\nexport function getPlumeType(child: React.ReactChild): string | undefined {\n  if (!React.isValidElement(child)) {\n    return undefined;\n  }\n  const childType = child.type as any;\n  return (childType.__plumeType || childType.getPlumeType?.(child.props)) as\n    | string\n    | undefined;\n}\n","import * as React from \"react\";\nimport { pick, pickBy } from \"../common\";\nimport {\n  AnyPlasmicClass,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n} from \"./plume-utils\";\n\nexport interface StyleProps {\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport function getStyleProps<P extends StyleProps>(props: P): StyleProps {\n  return pick(props, \"className\", \"style\");\n}\n\nexport function getDefaultPlasmicProps<C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: Record<string, any>\n) {\n  return {\n    plasmicProps: {\n      variants: pick(\n        props,\n        ...plasmicClass.internalVariantProps\n      ) as PlasmicClassVariants<C>,\n      args: pick(\n        props,\n        ...plasmicClass.internalArgProps\n      ) as PlasmicClassArgs<C>,\n      overrides: {} as PlasmicClassOverrides<C>,\n    },\n  };\n}\n\nconst RE_DATA_PROP = /^(data-.*)$/;\n\nexport function getDataProps(props: Record<string, any>) {\n  return pickBy(props, (k) => RE_DATA_PROP.test(k));\n}\n","/**\n * In general, we try not to expose react-aria's Collections API to Plume users.\n * The Collections API is how react-aria users pass data about collections of\n * things using the built-in Item and Section components, which are abstract,\n * metadata-only components that don't render anything but only serve to specify\n * data.  For example, here's how you would use react-spectrum's Picker:\n *\n *   <Picker>\n *     <Section title=\"Asia\">\n *       <Item key=\"taiwan\">Taiwan</Item>\n *       <Item key=\"japan\">Japan</Item>\n *       <Item key=\"china\">China</Item>\n *     </Section>\n *     <Section title=\"Europe\">\n *       <Item key=\"germany\">Germany</Item>\n *       <Item key=\"france\">France</Item>\n *     </Section>\n *   </Picker>\n *\n * You would re-use this same Item/Section components to pass similar things to\n * Menu, Tabs, etc.\n *\n * For Plasmic, this API is too abstract.  The user has explicitly designed components\n * like Select.Option and Select.OptionGroup, and it is weird that they don't actually\n * use these components. It is more natural to do:\n *\n *   <Select>\n *     <Select.OptionGroup title=\"Asia\">\n *       <Select.Option key=\"taiwan\">Taiwan</Select>\n *     </Select.OptionGroup>\n *   </Select>\n *\n * For Plume, we let users directly use the components they designed, both to collect\n * information and to perform actual rendering.  For example, for Plume,\n * you'd use Select.Option instead of Item, and Select.OptionGroup instead of Section.\n * This means that the Select.Option props will collect the same information Item\n * does.\n *\n * A component like Select.Option then serves two purposes:\n *\n * 1. Allow users to specify the collection of data, like in the above example\n *    Here, we're mainly interested in the props in those ReactElements so\n *    we can pass the Item/Section data onto react-aria's APIs.  We are not\n *    actually rendering these elements.\n * 2. Once react-aria's Collections API has gone through them and built\n *    Collection \"nodes\", we then create cloned versions of these elements\n *    with the corresponding node passed in as a secret prop.  These ReactElements\n *    are then actually used to _render_ the corresponding Option / OptionGroup.\n *\n * This file contains helper functions to help with implementing the above.\n *\n * Note also that most of the collections-based react-aria components expose\n * a parallel API that accepts a list of \"items\" and a render prop, instead\n * of list of Item/Section elements.  This is for efficiency, but we are opting\n * to only support the composite-component pattern for now for simplicity.\n */\n\nimport { Item, Section } from \"@react-stately/collections\";\nimport { Node } from \"@react-types/shared\";\nimport React from \"react\";\nimport { isString } from \"../common\";\nimport { getElementTypeName, toChildArray } from \"../react-utils\";\nimport { getPlumeType, PLUME_STRICT_MODE } from \"./plume-utils\";\n\nexport interface PlasmicLoaderProps<T> {\n  component: string;\n  componentProps: T;\n}\n\n/**\n * Props for a Plume component that corresponds to an Item\n */\nexport interface ItemLikeProps {\n  /**\n   * value key corresponding to this item. Not required if you use the\n   * `key` prop instead.\n   */\n  value?: string | null;\n\n  /**\n   * The text string value corresponding to this item. Used to support\n   * keyboard type-ahead.  If not specified, then will be derived from\n   * `children` if it is a string, or the `value` or `key`.\n   */\n  textValue?: string;\n\n  /**\n   * aria-label for this item.\n   */\n  \"aria-label\"?: string;\n\n  /**\n   * Primary content label for this item.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * If true, this item will not be selectable.\n   */\n  isDisabled?: boolean;\n}\n\ntype LoaderAwareItemLikeProps =\n  | ItemLikeProps\n  | PlasmicLoaderProps<ItemLikeProps>;\n\n/**\n * Props for a Plume component that corresponds to a Section\n */\nexport interface SectionLikeProps {\n  /**\n   * Heading content of the title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * aria-label for this section\n   */\n  \"aria-label\"?: string;\n\n  /**\n   * A list of items that belong in this group\n   */\n  children?: React.ReactNode;\n}\n\ntype LoaderAwareSectionLikeProps =\n  | SectionLikeProps\n  | PlasmicLoaderProps<SectionLikeProps>;\n\nexport type ItemJson = LeafItemJson | SectionJson;\n\nexport type LeafItemJson =\n  | string\n  | {\n      value: string;\n      label?: string;\n      textValue?: string;\n      isDisabled?: boolean;\n    };\n\nexport interface SectionJson {\n  title: string;\n  children: ItemJson[];\n}\n\nexport function deriveItemsFromProps(\n  props: any,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n    ItemComponent?: React.ComponentType<ItemLikeProps>;\n    SectionComponent?: React.ComponentType<SectionLikeProps>;\n    itemsProp?: string;\n  }\n) {\n  if (opts.itemsProp && opts.itemsProp in props) {\n    if (!opts.ItemComponent || !opts.SectionComponent) {\n      throw new Error(`You may need to re-generate your Plasmic* files`);\n    }\n    const items = props[opts.itemsProp] as ItemJson[] | undefined;\n    return deriveItemsFromItemsProp(items, {\n      ItemComponent: opts.ItemComponent,\n      SectionComponent: opts.SectionComponent,\n    });\n  } else {\n    return deriveItemsFromChildren(props.children as React.ReactNode, opts);\n  }\n}\n\nfunction deriveItemsFromItemsProp(\n  items: ItemJson[] | undefined,\n  opts: {\n    ItemComponent: React.ComponentType<ItemLikeProps>;\n    SectionComponent: React.ComponentType<SectionLikeProps>;\n  }\n) {\n  const { ItemComponent, SectionComponent } = opts;\n  const disabledKeys: string[] = [];\n  const transform = (item: ItemJson) => {\n    if (typeof item === \"string\") {\n      return (\n        <ItemComponent key={item} value={item}>\n          {item}\n        </ItemComponent>\n      );\n    } else if (\"children\" in item) {\n      return (\n        <SectionComponent key={item.title} title={item.title}>\n          {item.children.map((x) => transform(x))}\n        </SectionComponent>\n      );\n    } else {\n      if (item.isDisabled) {\n        disabledKeys.push(item.value);\n      }\n      return (\n        <ItemComponent\n          key={item.value}\n          value={item.value}\n          textValue={item.textValue}\n          isDisabled={item.isDisabled}\n        >\n          {item.label ?? item.value}\n        </ItemComponent>\n      );\n    }\n  };\n  return {\n    items: items?.map((x) => transform(x)) ?? [],\n    disabledKeys,\n  };\n}\n\n/**\n * Given children of a component like Select or Menu, derive the items\n * that we will pass into the Collections API.  These will be\n * ReactElement<ItemLikeProps|SectionLikeProps>[].\n *\n * Will also assign keys to items by their index in the collection,\n * and collect the keys of disabled items.\n */\nexport function deriveItemsFromChildren<T extends React.ReactElement>(\n  children: React.ReactNode,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n  }\n) {\n  if (!children) {\n    return {\n      items: [] as T[],\n      disabledKeys: [] as React.Key[],\n    };\n  }\n\n  const { itemPlumeType, sectionPlumeType, invalidChildError } = opts;\n\n  // For Plume items without an explicit key, we assign a key as the index\n  // of the collection.\n  let itemCount = 0;\n  let sectionCount = 0;\n\n  const ensureValue = (element: React.ReactElement) => {\n    if (!propInChild(element, \"value\")) {\n      if (opts.requireItemValue && PLUME_STRICT_MODE) {\n        throw new Error(\n          `Must specify a \"value\" prop for ${getElementTypeName(element)}`\n        );\n      } else {\n        return cloneChild(element, { value: `${itemCount++}` });\n      }\n    } else {\n      // Still increment count even if key is present, so that the\n      // auto-assigned key really reflects the index\n      itemCount++;\n      return element;\n    }\n  };\n\n  const disabledKeys: React.Key[] = [];\n\n  const flattenedChildren = (\n    children: React.ReactNode\n  ): React.ReactElement[] => {\n    return toChildArray(children).flatMap((child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === React.Fragment) {\n          return flattenedChildren(\n            (child as React.ReactElement<{ children: React.ReactNode }>).props\n              .children\n          );\n        }\n        const type = getPlumeType(child);\n        if (type === itemPlumeType) {\n          child = ensureValue(child);\n          const childKey = getItemLikeKey(child);\n          if (getChildProp(child, \"isDisabled\") && !!childKey) {\n            disabledKeys.push(childKey);\n          }\n          return [child];\n        }\n        if (type === sectionPlumeType) {\n          return [\n            cloneChild(child, {\n              // key of section doesn't actually matter, just needs\n              // to be unique\n              key: child.key ?? `section-${sectionCount++}`,\n              children: flattenedChildren(getChildProp(child, \"children\")),\n            }),\n          ];\n        }\n      }\n\n      if (PLUME_STRICT_MODE) {\n        throw new Error(invalidChildError ?? `Unexpected child`);\n      } else {\n        return [];\n      }\n    });\n  };\n\n  return { items: flattenedChildren(children) as T[], disabledKeys };\n}\n\nexport function useDerivedItems(\n  props: any,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n    ItemComponent?: React.ComponentType<ItemLikeProps>;\n    SectionComponent?: React.ComponentType<SectionLikeProps>;\n    itemsProp?: string;\n  }\n) {\n  const { children } = props;\n  const {\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n    ItemComponent,\n    SectionComponent,\n    itemsProp,\n  } = opts;\n  const items = itemsProp ? props[itemsProp] : undefined;\n  return React.useMemo(() => {\n    return deriveItemsFromProps(props, {\n      itemPlumeType,\n      sectionPlumeType,\n      invalidChildError,\n      requireItemValue,\n      itemsProp,\n      ItemComponent,\n      SectionComponent,\n    });\n  }, [\n    children,\n    items,\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n    ItemComponent,\n    SectionComponent,\n  ]);\n}\n\nexport function useDerivedItemsFromChildren<T extends React.ReactElement>(\n  children: React.ReactNode,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n    invalidChildError?: string;\n    requireItemValue: boolean;\n  }\n) {\n  const {\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n  } = opts;\n  return React.useMemo(() => {\n    return deriveItemsFromChildren<T>(children, {\n      itemPlumeType,\n      sectionPlumeType,\n      invalidChildError,\n      requireItemValue,\n    });\n  }, [\n    children,\n    itemPlumeType,\n    sectionPlumeType,\n    invalidChildError,\n    requireItemValue,\n  ]);\n}\n\n/**\n * Given a Collection node, create the React element that we should use\n * to render it.\n */\nexport function renderCollectionNode(node: Node<any>) {\n  // node.rendered should already have our item-like or section-like Plume\n  // component elements, so we just need to clone them with a secret\n  // _node prop that we use to render.\n  return cloneChild(node.rendered as React.ReactElement, {\n    _node: node,\n    key: node.key,\n  });\n}\n\n/**\n * Renders a item-like or section-like Plume component element into an\n * Item or a Section element.\n */\nexport function renderAsCollectionChild<\n  T extends React.ReactElement<\n    LoaderAwareItemLikeProps | LoaderAwareSectionLikeProps\n  >\n>(\n  child: T,\n  opts: {\n    itemPlumeType: string;\n    sectionPlumeType?: string;\n  }\n) {\n  const plumeType = getPlumeType(child);\n  if (plumeType === opts.itemPlumeType) {\n    const option = child as React.ReactElement<LoaderAwareItemLikeProps>;\n\n    // We look at the children passed to the item-like element, and derive key\n    // or textValue from it if it is a string\n    const content = getChildProp(option, \"children\");\n\n    // The children render prop needs to return an <Item/>\n    return (\n      <Item\n        // We use ItemLike.value if the user explicitly specified a value,\n        // and we fallback to key.  If the user specified neither, then\n        // the Collections API will generate a unique key for this item.\n        key={getItemLikeKey(option)}\n        // textValue is either explicitly specified by the user, or we\n        // try to derive it if `content` is a string.\n        textValue={\n          getChildProp(option, \"textValue\") ??\n          (isString(content)\n            ? content\n            : propInChild(option, \"value\")\n            ? getChildProp(option, \"value\")\n            : option.key)\n        }\n        aria-label={getChildProp(option, \"aria-label\")}\n      >\n        {\n          // Note that what we setting the item-like element as the children\n          // here, and not content; we want the entire item-like Plume element to\n          // end up as Node.rendered.\n        }\n        {option}\n      </Item>\n    );\n  } else {\n    const group = child as React.ReactElement<LoaderAwareSectionLikeProps>;\n    return (\n      <Section\n        // Note that we are using the whole section-like element as the title\n        // here, and not group.props.title; we want the entire section-like\n        // Plume element to end up as Node.rendered.\n        title={group}\n        aria-label={getChildProp(group, \"aria-label\")}\n        // We are flattening and deriving the descendant Options as items here.\n        // group.props.children should've already been cleaned up by\n        // deriveItemsFromChildren()\n        items={getChildProp(group, \"children\") as React.ReactElement[]}\n      >\n        {\n          // We use the same render function to turn descendent Options into Items\n        }\n        {(c: React.ReactElement) => renderAsCollectionChild(c, opts)}\n      </Section>\n    );\n  }\n}\n\nfunction getItemLikeKey(element: React.ReactElement<LoaderAwareItemLikeProps>) {\n  return getChildProp(element, \"value\") ?? element.key;\n}\n\n// PlasmicLoader-aware function to get prop from child.\nexport function getChildProp(child: React.ReactElement, prop: string) {\n  return \"componentProps\" in child.props\n    ? child.props.componentProps[prop]\n    : child.props[prop];\n}\n\n// PlasmicLoader-aware function to check `if (prop in element.props)`.\nfunction propInChild(child: React.ReactElement, prop: string): boolean {\n  return \"componentProps\" in child.props\n    ? prop in child.props.componentProps\n    : prop in child.props;\n}\n\n// PlasmicLoader-aware function to clone React element.\nfunction cloneChild(child: React.ReactElement, props: Record<string, any>) {\n  if ((child.type as any).getPlumeType) {\n    // If React element has getPlumeType(), assume that it is PlasmicLoader,\n    // so add nodeProps to componentProps instead of element props.\n    return React.cloneElement(child, {\n      componentProps: {\n        ...child.props.componentProps,\n        ...props,\n      },\n      ...(props.key ? { key: props.key } : {}),\n    });\n  }\n\n  return React.cloneElement(child, props);\n}\n","import type { Placement } from \"@react-types/overlays\";\nimport type { FocusStrategy } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport type { OverlayTriggerState } from \"@react-stately/overlays\";\n\nexport interface TriggeredOverlayContextValue {\n  triggerRef: React.RefObject<HTMLElement>;\n  state: OverlayTriggerState;\n  autoFocus?: boolean | FocusStrategy;\n\n  placement?: Placement;\n  overlayMatchTriggerWidth?: boolean;\n  overlayMinTriggerWidth?: boolean;\n  overlayWidth?: number;\n}\n\nexport const TriggeredOverlayContext = React.createContext<\n  TriggeredOverlayContextValue | undefined\n>(undefined);\n","import * as React from \"react\";\nimport type { TreeState } from \"@react-stately/tree\";\nimport type { BaseMenuProps } from \"./menu\";\n\nexport interface MenuContextValue {\n  menuProps: BaseMenuProps;\n  state: TreeState<any>;\n}\n\nexport const MenuContext = React.createContext<MenuContextValue | undefined>(\n  undefined\n);\n","import { useMenu as useAriaMenu } from \"@react-aria/menu\";\nimport { useTreeState } from \"@react-stately/tree\";\nimport { AriaMenuProps } from \"@react-types/menu\";\nimport { AriaLabelingProps, DOMProps } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  renderAsCollectionChild,\n  renderCollectionNode,\n  useDerivedItemsFromChildren,\n} from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { MenuContext } from \"./context\";\n\nexport interface BaseMenuProps extends DOMProps, AriaLabelingProps, StyleProps {\n  /**\n   * List of `Menu.Item`s or `Menu.Group`s that make up the menu\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Called with the value of a `Menu.Item` when it is selected.\n   */\n  onAction?: (value: string) => void;\n}\n\nexport type MenuRef = React.Ref<MenuRefValue>;\nexport interface MenuRefValue extends MenuState {\n  getRoot: () => HTMLElement | null;\n}\n\nconst COLLECTION_OPTS = {\n  itemPlumeType: \"menu-item\",\n  sectionPlumeType: \"menu-group\",\n};\n\nexport interface MenuConfig<C extends AnyPlasmicClass> {\n  isPlacedTopVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedBottomVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedLeftVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedRightVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  itemsSlot: keyof PlasmicClassArgs<C>;\n  itemsContainer: keyof PlasmicClassOverrides<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\n/**\n * Converts props from BaseMenuProps to react-aria's useMenu() props.\n */\nfunction asAriaMenuProps(props: BaseMenuProps) {\n  const { children, ...rest } = props;\n  const { items, disabledKeys } = useDerivedItemsFromChildren(children, {\n    ...COLLECTION_OPTS,\n    invalidChildError: `Can only use Menu.Item and Menu.Group as children to Menu`,\n    requireItemValue: false,\n  });\n\n  const collectionChildRenderer = React.useCallback(\n    (child: any) => renderAsCollectionChild(child, COLLECTION_OPTS),\n    []\n  );\n\n  return {\n    ariaProps: {\n      ...rest,\n      children: collectionChildRenderer,\n      items,\n      disabledKeys,\n    } as AriaMenuProps<any>,\n  };\n}\n\nexport interface MenuState {\n  getFocusedValue: () => string | null;\n  setFocusedValue: (value: string) => void;\n}\n\nexport function useMenu<P extends BaseMenuProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: MenuConfig<C>,\n  ref: MenuRef = null\n) {\n  useEnsureSSRProvider();\n  const { ariaProps } = asAriaMenuProps(props);\n  const triggerContext = React.useContext(TriggeredOverlayContext);\n  const rootRef = React.useRef<HTMLElement>(null);\n\n  const state = useTreeState(ariaProps);\n\n  const menuListRef = React.useRef<HTMLUListElement>(null);\n\n  const { menuProps } = useAriaMenu(\n    {\n      ...ariaProps,\n      autoFocus: triggerContext?.autoFocus,\n    },\n    state,\n    menuListRef\n  );\n\n  const contextValue = React.useMemo(() => ({ state, menuProps: props }), [\n    state,\n    props,\n  ]);\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n    },\n    [config.itemsContainer]: {\n      as: \"ul\",\n      props: mergeProps(menuProps, {\n        ref: menuListRef,\n        style: {\n          ...noOutline(),\n        },\n      }),\n    },\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.itemsSlot]: (\n      <MenuContext.Provider value={contextValue}>\n        {Array.from(state.collection).map((node) => renderCollectionNode(node))}\n      </MenuContext.Provider>\n    ),\n  };\n\n  const plumeState: MenuState = React.useMemo(\n    () => ({\n      getFocusedValue: () => state.selectionManager.focusedKey as string | null,\n      setFocusedValue: (value: string) =>\n        state.selectionManager.setFocusedKey(value),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      getFocusedValue: () => plumeState.getFocusedValue(),\n      setFocusedValue: (key) => plumeState.setFocusedValue(key),\n    }),\n    [rootRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n    state: plumeState,\n  };\n}\n","import { Placement } from \"@react-types/overlays\";\nimport * as React from \"react\";\nimport { useMenuTrigger as useAriaMenuTrigger } from \"@react-aria/menu\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { MenuTriggerState } from \"@react-stately/menu\";\nimport { mergeProps } from \"../../react-utils\";\nimport { BaseMenuProps } from \"../menu/menu\";\nimport { getPlumeType, PLUME_STRICT_MODE } from \"../plume-utils\";\nimport { TriggeredOverlayContextValue } from \"../triggered-overlay/context\";\n\n/**\n * A menu trigger hook that combines react-aria's useMenuTrigger, useAriaMenuTrigger,\n * useOverlayPosition, useOverlay, and usePress\n */\nexport function useMenuTrigger(\n  opts: {\n    isDisabled?: boolean;\n    triggerRef: React.RefObject<HTMLElement>;\n    placement?: Placement;\n    menuMatchTriggerWidth?: boolean;\n    menuWidth?: number;\n    menu:\n      | React.ReactElement<BaseMenuProps>\n      | (() => React.ReactElement<BaseMenuProps>);\n  },\n  state: MenuTriggerState\n) {\n  const {\n    triggerRef,\n    isDisabled,\n    placement,\n    menuMatchTriggerWidth,\n    menuWidth,\n    menu,\n  } = opts;\n\n  const { menuTriggerProps: triggerPressProps, menuProps } = useAriaMenuTrigger(\n    {\n      type: \"menu\",\n      isDisabled,\n    },\n    state,\n    triggerRef\n  );\n\n  const { pressProps: triggerProps } = usePress({\n    ...triggerPressProps,\n    isDisabled,\n  });\n\n  const makeMenu = () => {\n    let realMenu = typeof menu === \"function\" ? menu() : menu;\n    if (!realMenu) {\n      return null;\n    }\n    if (getPlumeType(realMenu) !== \"menu\") {\n      if (PLUME_STRICT_MODE) {\n        throw new Error(`Must use an instance of the Menu component.`);\n      }\n      return null;\n    }\n\n    return React.cloneElement(realMenu, mergeProps(realMenu.props, menuProps));\n  };\n\n  const triggerContext: TriggeredOverlayContextValue = React.useMemo(\n    () => ({\n      triggerRef,\n      state,\n      autoFocus: state.focusStrategy ?? true,\n      placement,\n      overlayMatchTriggerWidth: menuMatchTriggerWidth,\n      overlayMinTriggerWidth: true,\n      overlayWidth: menuWidth,\n    }),\n    [triggerRef, state, placement, menuMatchTriggerWidth, menuWidth]\n  );\n\n  return {\n    triggerProps,\n    makeMenu,\n    triggerContext,\n  };\n}\n","import * as React from \"react\";\nimport type { ListState } from \"@react-stately/list\";\n\nexport const SelectContext = React.createContext<ListState<any> | undefined>(\n  undefined\n);\n","import { usePlasmicCanvasContext } from \"@plasmicapp/host\";\nimport { usePress } from \"@react-aria/interactions\";\nimport { useListBox } from \"@react-aria/listbox\";\nimport { HiddenSelect, useSelect as useAriaSelect } from \"@react-aria/select\";\nimport {\n  SelectState as AriaSelectState,\n  useSelectState as useAriaSelectState,\n} from \"@react-stately/select\";\nimport { Placement } from \"@react-types/overlays\";\nimport { AriaSelectProps } from \"@react-types/select\";\nimport {\n  AriaLabelingProps,\n  DOMProps,\n  FocusableDOMProps,\n  FocusableProps,\n  InputBase,\n} from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  getChildProp,\n  ItemJson,\n  ItemLikeProps,\n  renderAsCollectionChild,\n  renderCollectionNode,\n  SectionLikeProps,\n  useDerivedItems,\n} from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\nimport {\n  TriggeredOverlayContext,\n  TriggeredOverlayContextValue,\n} from \"../triggered-overlay/context\";\nimport { SelectContext } from \"./context\";\nimport { BaseSelectOptionProps } from \"./select-option\";\nimport { BaseSelectOptionGroupProps } from \"./select-option-group\";\n\nexport interface BaseSelectProps\n  extends DOMProps,\n    AriaLabelingProps,\n    FocusableDOMProps,\n    InputBase,\n    FocusableProps,\n    StyleProps {\n  /**\n   * Key of the currently selected value\n   */\n  value?: string | null;\n\n  /**\n   * Event handler fired when currently selected value changes\n   */\n  onChange?: (value: string | null) => void;\n\n  /**\n   * Uncontrolled key of the default selected value\n   */\n  defaultValue?: string;\n\n  /**\n   * List of Select.Options\n   */\n  children?: React.ReactNode;\n\n  /**\n   * List of options as an array, instead of using `children` prop. If this\n   * is passed in, then `children` is ignored.\n   *\n   * The options can be a list of strings, or a list of objects with\n   * fields `value` (for the value of the option), `label` (for what's rendered\n   * in the option), and `isDisabled` (if the option should be disabled).\n   */\n  options?: ItemJson[];\n\n  /**\n   * Whether the Select is currently open\n   */\n  isOpen?: boolean;\n\n  /**\n   * Event handler fired when Select's open state changes\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n\n  /**\n   * Uncontrolled default open state\n   */\n  defaultOpen?: boolean;\n\n  /**\n   * Form name of the select element\n   */\n  name?: string;\n\n  /**\n   * By default, Select will render whatever is in Select.Option as the\n   * content in the trigger button when it is selected.  You can override\n   * what content by passing in `selectedContent` here.\n   */\n  selectedContent?: React.ReactNode;\n\n  /**\n   * Desired placement location of the Select dropdown\n   */\n  placement?: Placement;\n\n  /**\n   * If true, menu width will always match the trigger button width.\n   * If false, then menu width will have min-width matching the\n   * trigger button width.\n   */\n  menuMatchTriggerWidth?: boolean;\n\n  /**\n   * If set, menu width will be exactly this width, overriding\n   * menuMatchTriggerWidth.\n   */\n  menuWidth?: number;\n\n  /**\n   * Content to display when nothing is selected.\n   */\n  placeholder?: React.ReactNode;\n}\n\nconst COLLECTION_OPTS = {\n  itemPlumeType: \"select-option\",\n  sectionPlumeType: \"select-option-group\",\n};\n\ntype AriaOptionType = React.ReactElement<BaseSelectOptionProps>;\ntype AriaGroupType = React.ReactElement<BaseSelectOptionGroupProps>;\ntype AriaSelectItemType = AriaOptionType | AriaGroupType;\n\n/**\n * Converts props in our BaseSelectProps into props that react-aria's\n * useSelect() understands.\n *\n * Because we're not exposing the Collections API (see ./index.tsx),\n * we are converting our own API into props for useSelect.\n *\n * Specifically, in Plume's API,\n * - `children` flattens to a list of ReactElements of type Select.Option\n *   or Select.OptionGroup\n *\n * and we map it this way to the Collections API:\n * - `items` is a list of those flattened ReactElements from `children`!\n * - `children`, as a render prop, is supposed to take one of the `items`\n *   and return a `Section` or `Item` element. We take an Option/OptionGroup\n *   element, and use its props to render the appropriate `Section` or\n *   `Item`. The \"trick\" here is that we then stuff the Option element as\n *   `Item.children`, and the OptionGroup element as `Section.title`.\n *\n * When the Collections API does its work deriving `Node`s, the corresponding\n * Option/OptionGroup ReactElements will end up as `Node.rendered`.\n *\n * Then, when we are actually rendering the content of the dropdown, we\n * iterate through each collected `Node`, and renders\n * React.cloneElement(Node.rendered, {_node: node}).  This \"secretly\" passes\n * the derived collection `Node` as a prop to Option and OptionGroup, and they\n * can make use of the derived `Node.key` etc in their rendering functions.\n *\n * One thing to note here is that we never \"rendered\" the Option/OptionGroup\n * React elements that the user constructed; instead, we just looked at the\n * props used on those elements, and passed those onto the Collections API.\n * What gets rendered to the screen is the cloned version of these elements\n * with the secret derived `_node` prop.  That means Option and OptionGroup\n * render functions can assume that _node is passed in.\n */\nfunction useAriaSelectProps(props: BaseSelectProps, config: SelectConfig<any>) {\n  let {\n    value,\n    defaultValue,\n    children,\n    onChange,\n    placement,\n    menuMatchTriggerWidth,\n    menuWidth,\n    ...rest\n  } = props;\n\n  const { items, disabledKeys } = useDerivedItems(props, {\n    ...COLLECTION_OPTS,\n    invalidChildError: `Can only use Select.Option and Select.OptionGroup as children to Select`,\n    requireItemValue: true,\n    ItemComponent: config.OptionComponent,\n    SectionComponent: config.OptionGroupComponent,\n    itemsProp: \"options\",\n  });\n\n  const collectionChildRenderer = React.useCallback(\n    (child: any) => renderAsCollectionChild(child, COLLECTION_OPTS),\n    []\n  );\n\n  const onSelectionChange = React.useMemo(() => {\n    if (onChange) {\n      return (val: string | null) =>\n        onChange!(\n          (val == null || val === \"null\" ? null : val) as string | null\n        );\n    } else {\n      return undefined;\n    }\n  }, [onChange]);\n\n  return {\n    ariaProps: {\n      ...rest,\n      children: collectionChildRenderer,\n      onSelectionChange,\n      items,\n      disabledKeys,\n      defaultSelectedKey: defaultValue,\n\n      // react-aria is picky about selectedKey; if it is null, it means \"no selection\";\n      // if it is undefined, it means \"uncontrolled\".  So here, if the user passes in a\n      // value prop, then we make sure selectedKey will be null and not undefined, so\n      // we don't accidentally enter uncontrolled mode.\n      ...(\"value\" in props && { selectedKey: value ?? null }),\n    } as AriaSelectProps<AriaSelectItemType>,\n  };\n}\n\nexport type SelectRef = React.Ref<SelectRefValue>;\n\nexport interface SelectRefValue extends SelectState {\n  getTrigger: () => HTMLElement | null;\n  getRoot: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\ninterface SelectConfig<C extends AnyPlasmicClass> {\n  placeholderVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isOpenVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  triggerContentSlot: keyof PlasmicClassArgs<C>;\n  optionsSlot: keyof PlasmicClassArgs<C>;\n  placeholderSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  trigger: keyof PlasmicClassOverrides<C>;\n  overlay: keyof PlasmicClassOverrides<C>;\n  optionsContainer: keyof PlasmicClassOverrides<C>;\n\n  OptionComponent?: React.ComponentType<ItemLikeProps>;\n  OptionGroupComponent?: React.ComponentType<SectionLikeProps>;\n}\n\ninterface SelectState {\n  open: () => void;\n  close: () => void;\n  isOpen: () => boolean;\n  getSelectedValue: () => string | null;\n  setSelectedValue: (value: string | null) => void;\n}\n\nexport function useSelect<P extends BaseSelectProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: SelectConfig<C>,\n  ref: React.Ref<SelectRefValue> = null\n) {\n  useEnsureSSRProvider();\n  const { ariaProps } = useAriaSelectProps(props, config);\n  const { placement } = props;\n  const state = useAriaSelectState<AriaSelectItemType>(ariaProps);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const rootRef = React.useRef<HTMLElement>(null);\n\n  const {\n    isDisabled,\n    name,\n    menuWidth,\n    menuMatchTriggerWidth,\n    autoFocus,\n    placeholder,\n    selectedContent,\n  } = props;\n\n  const canvasCtx = usePlasmicCanvasContext();\n\n  const { triggerProps: triggerPressProps, menuProps } = useAriaSelect(\n    ariaProps,\n    state,\n    triggerRef\n  );\n\n  const { pressProps: triggerProps } = usePress({\n    ...triggerPressProps,\n    isDisabled,\n  });\n\n  const triggerContent = state.selectedItem\n    ? selectedContent ?? getChildProp(state.selectedItem.value, \"children\")\n    : null;\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isOpenVariant, active: state.isOpen },\n      { def: config.placeholderVariant, active: !state.selectedItem },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const triggerContext: TriggeredOverlayContextValue = React.useMemo(\n    () => ({\n      triggerRef,\n      state,\n      placement,\n      overlayMatchTriggerWidth: menuMatchTriggerWidth,\n      overlayMinTriggerWidth: true,\n      overlayWidth: menuWidth,\n    }),\n    [triggerRef, state, placement, menuMatchTriggerWidth, menuWidth]\n  );\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n      wrapChildren: (children) => (\n        <>\n          {!canvasCtx && (\n            <HiddenSelect\n              state={state}\n              triggerRef={triggerRef}\n              name={name}\n              isDisabled={isDisabled}\n            />\n          )}\n          {children}\n        </>\n      ),\n    },\n    [config.trigger]: {\n      props: mergeProps(canvasCtx ? {} : triggerProps, {\n        ref: triggerRef,\n        autoFocus,\n        disabled: !!isDisabled,\n        // Don't trigger form submission!\n        type: \"button\",\n      }),\n    },\n    [config.overlay]: {\n      wrap: (content) => (\n        <TriggeredOverlayContext.Provider value={triggerContext}>\n          {content}\n        </TriggeredOverlayContext.Provider>\n      ),\n    },\n    [config.optionsContainer]: {\n      wrap: (content) => (\n        <ListBoxWrapper state={state} menuProps={menuProps}>\n          {content as React.ReactElement}\n        </ListBoxWrapper>\n      ),\n    },\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.triggerContentSlot]: triggerContent,\n    [config.placeholderSlot]: placeholder,\n    [config.optionsSlot]: (\n      <SelectContext.Provider value={state}>\n        {Array.from(state.collection).map((node) => renderCollectionNode(node))}\n      </SelectContext.Provider>\n    ),\n  };\n\n  const plumeState: SelectState = React.useMemo(\n    () => ({\n      open: () => state.open(),\n      close: () => state.close(),\n      isOpen: () => state.isOpen,\n      getSelectedValue: () =>\n        state.selectedKey ? `${state.selectedKey}` : null,\n      setSelectedValue: (key) => state.setSelectedKey(key as any),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      getTrigger: () => triggerRef.current,\n      focus: () => triggerRef.current?.focus(),\n      blur: () => triggerRef.current?.blur(),\n      open: () => plumeState.open(),\n      close: () => plumeState.close(),\n      isOpen: () => plumeState.isOpen(),\n      getSelectedValue: () => plumeState.getSelectedValue(),\n      setSelectedValue: (key) => plumeState.setSelectedValue(key),\n    }),\n    [rootRef, triggerRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n    state: plumeState,\n  };\n}\n\nfunction ListBoxWrapper(props: {\n  state: AriaSelectState<any>;\n  menuProps: React.HTMLAttributes<Element>;\n  children: React.ReactElement;\n}) {\n  const { state, menuProps, children } = props;\n\n  const ref = React.useRef<HTMLElement>(null);\n  const canvasCtx = usePlasmicCanvasContext();\n\n  const { listBoxProps } = useListBox(\n    {\n      ...menuProps,\n      isVirtualized: false,\n      autoFocus: state.focusStrategy || true,\n      disallowEmptySelection: true,\n    },\n    state,\n    ref\n  );\n\n  return React.cloneElement(\n    children,\n    mergeProps(children.props, canvasCtx ? {} : listBoxProps, {\n      style: noOutline(),\n      ref,\n    })\n  );\n}\n","import { Placement } from \"@react-types/overlays\";\nimport * as React from \"react\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { mergeProps } from \"../../react-utils\";\nimport { BaseMenuProps } from \"../menu/menu\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { useMenuTrigger } from \"./menu-trigger\";\n\nexport interface DropdownMenuProps {\n  /**\n   * A ReactElement that takes in a `ref` as well as the usual mouse and\n   * pointer events. The dropdown menu will be positioned relative to this\n   * trigger.\n   */\n  children: React.ReactElement;\n\n  /**\n   * The menu to show; must be either a ReactElement of Menu type, or\n   * a function that creates one if you prefer to delay creating it until\n   * the menu has been triggered.\n   */\n  menu:\n    | React.ReactElement<BaseMenuProps>\n    | (() => React.ReactElement<BaseMenuProps>);\n\n  /**\n   * Where to place the menu relative to the trigger.\n   */\n  placement?: Placement;\n\n  /**\n   * Whether the menu is currently shown.\n   */\n  isOpen?: boolean;\n\n  /**\n   * Uncontrolled open state.\n   */\n  defaultOpen?: boolean;\n\n  /**\n   * Event handler fired when Menu's open state changes\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n}\n\nexport function DropdownMenu(props: DropdownMenuProps) {\n  const {\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    children,\n    placement,\n    menu,\n  } = props;\n\n  const triggerRef = React.useRef<HTMLElement>(null);\n\n  const state = useMenuTriggerState({\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    shouldFlip: true,\n  });\n\n  const { triggerProps, makeMenu, triggerContext } = useMenuTrigger(\n    {\n      triggerRef,\n      placement,\n      menu,\n    },\n    state\n  );\n\n  return (\n    <TriggeredOverlayContext.Provider value={triggerContext}>\n      {React.cloneElement(\n        children,\n        mergeProps(children.props, triggerProps, { ref: triggerRef })\n      )}\n      {state.isOpen && makeMenu()}\n    </TriggeredOverlayContext.Provider>\n  );\n}\n","import * as React from \"react\";\n\nexport function PlasmicIcon(\n  props: React.ComponentProps<\"svg\"> & {\n    PlasmicIconType: React.ComponentType;\n  }\n) {\n  const { PlasmicIconType, ...rest } = props;\n  return <PlasmicIconType {...rest} />;\n}\n","const isDefaultValue = (val: string) => val === \"PLEASE_RENDER_INSIDE_PROVIDER\";\nconst seenDefaultVariants: Record<string, boolean> = {};\nexport function ensureGlobalVariants<T extends Record<string, any>>(\n  globalVariantValues: T\n) {\n  Object.entries(globalVariantValues)\n    .filter(([_, value]) => isDefaultValue(value))\n    .forEach(([key, _]) => {\n      (globalVariantValues as any)[key] = undefined;\n\n      if (!seenDefaultVariants[key] && process.env.NODE_ENV === \"development\") {\n        seenDefaultVariants[key] = true;\n        const providerName = `${key[0].toUpperCase()}${key.substring(\n          1\n        )}Context.Provider`;\n        console.warn(\n          `Plasmic context value for global variant \"${key}\" was not provided; please use ${providerName} at the root of your React app. Learn More: https://www.plasmic.app/learn/other-assets/#global-variants`\n        );\n      }\n    });\n  return globalVariantValues;\n}\n","import * as React from \"react\";\nimport { omit, pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\n\ninterface CommonProps {\n  showStartIcon?: boolean;\n  showEndIcon?: boolean;\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  children?: React.ReactNode;\n  isDisabled?: boolean;\n}\n\ninterface HtmlButtonProps\n  extends Omit<React.ComponentProps<\"button\">, \"ref\" | \"disabled\"> {}\n\ninterface HtmlAnchorProps\n  extends Omit<React.ComponentProps<\"a\">, \"ref\" | \"href\"> {\n  link?: string;\n}\n\nexport type BaseButtonProps = CommonProps & HtmlButtonProps & HtmlAnchorProps;\n\nexport type HtmlAnchorOnlyProps = Exclude<\n  keyof HtmlAnchorProps,\n  keyof HtmlButtonProps\n>;\nexport type HtmlButtonOnlyProps = Exclude<\n  keyof HtmlButtonProps,\n  keyof HtmlAnchorProps\n>;\n\nexport type ButtonRef = React.Ref<HTMLButtonElement | HTMLAnchorElement>;\n\ninterface ButtonConfig<C extends AnyPlasmicClass> {\n  showStartIconVariant: VariantDef<PlasmicClassVariants<C>>;\n  showEndIconVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  startIconSlot?: keyof PlasmicClassArgs<C>;\n  endIconSlot?: keyof PlasmicClassArgs<C>;\n  contentSlot: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useButton<P extends BaseButtonProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: ButtonConfig<C>,\n  ref: ButtonRef = null\n) {\n  const {\n    link,\n    isDisabled,\n    startIcon,\n    endIcon,\n    showStartIcon,\n    showEndIcon,\n    children,\n    ...rest\n  } = props;\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.showStartIconVariant, active: showStartIcon },\n      { def: config.showEndIconVariant, active: showEndIcon },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.startIconSlot && { [config.startIconSlot]: startIcon }),\n    ...(config.endIconSlot && { [config.endIconSlot]: endIcon }),\n    [config.contentSlot]: children,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      as: !!link ? \"a\" : \"button\",\n      props: {\n        ...omit(\n          rest as any,\n          ...plasmicClass.internalArgProps,\n          ...plasmicClass.internalVariantProps\n        ),\n        ref: ref,\n        disabled: isDisabled,\n        ...(!!link && { href: link }),\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { useCheckbox as useAriaCheckbox } from \"@react-aria/checkbox\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { AriaCheckboxProps } from \"@react-types/checkbox\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\n\nexport type CheckboxRef = React.Ref<CheckboxRefValue>;\nexport interface CheckboxRefValue extends CheckboxState {\n  getRoot: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\ninterface CheckboxState {\n  setChecked: (checked: boolean) => void;\n}\n\nexport interface CheckboxProps\n  extends Omit<AriaCheckboxProps, \"isSelected\" | \"defaultSelected\">,\n    StyleProps {\n  /**\n   * Whether the Checkbox is checked or not; controlled\n   */\n  isChecked?: boolean;\n\n  /**\n   * Whether the Checkbox is checked by default; uncontrolled\n   */\n  defaultChecked?: boolean;\n\n  /**\n   * Whether the Checkbox is in an \"indeterminate\" state; this usually\n   * refers to a \"check all\" that is used to check / uncheck many other\n   * checkboxes, and is visually indeterminate if some of its controlled\n   * checkboxes are checked and some are not.\n   */\n  isIndeterminate?: boolean;\n}\n\nfunction asAriaCheckboxProps(props: CheckboxProps) {\n  const ariaProps = {\n    ...props,\n    isSelected: props.isChecked,\n    defaultSelected: props.defaultChecked,\n  };\n  delete ariaProps[\"isChecked\"];\n  delete ariaProps[\"defaultChecked\"];\n  return ariaProps;\n}\n\ninterface CheckboxConfig<C extends AnyPlasmicClass> {\n  isCheckedVariant: VariantDef<PlasmicClassVariants<C>>;\n  isIndeterminateVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  noLabelVariant?: VariantDef<PlasmicClassVariants<C>>;\n  labelSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useCheckbox<P extends CheckboxProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: CheckboxConfig<C>,\n  ref: CheckboxRef = null\n) {\n  const { children, isDisabled, isIndeterminate } = props;\n  useEnsureSSRProvider();\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const rootRef = React.useRef<HTMLElement>(null);\n  const ariaProps = asAriaCheckboxProps(props);\n  const state = useToggleState(ariaProps);\n  const { inputProps } = useAriaCheckbox(ariaProps, state, inputRef);\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      {\n        def: config.isDisabledVariant,\n        active: isDisabled,\n      },\n      {\n        def: config.isCheckedVariant,\n        active: state.isSelected,\n      },\n      {\n        def: config.isIndeterminateVariant,\n        active: isIndeterminate,\n      },\n      {\n        def: config.noLabelVariant,\n        active: !children,\n      }\n    ),\n  };\n  const overrides: Overrides = {\n    [config.root]: {\n      as: \"label\",\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n      wrapChildren: (children: React.ReactNode) => (\n        <>\n          <VisuallyHidden>\n            <input {...inputProps} ref={inputRef} />\n          </VisuallyHidden>\n          {children}\n        </>\n      ),\n    },\n  };\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.labelSlot ? { [config.labelSlot]: children } : {}),\n  };\n\n  const plumeState: CheckboxState = React.useMemo(\n    () => ({\n      setChecked: (checked: boolean) => state.setSelected(checked),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      focus: () => inputRef.current?.focus(),\n      blur: () => inputRef.current?.blur(),\n      setChecked: (checked) => plumeState.setChecked(checked),\n    }),\n    [rootRef, inputRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n      args: args as PlasmicClassArgs<C>,\n    },\n    state: plumeState,\n  };\n}\n","import { Placement } from \"@react-types/overlays\";\nimport { DOMProps, FocusableProps } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport { BaseMenuProps } from \"../menu/menu\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { useMenuTrigger } from \"./menu-trigger\";\n\nexport interface BaseMenuButtonProps\n  extends DOMProps,\n    FocusableProps,\n    StyleProps,\n    Pick<React.ComponentProps<\"button\">, \"title\"> {\n  /**\n   * The menu to show; can either be a Menu instance, or a function that returns a Menu\n   * instance if you want to defer creating the instance till when it's opened.\n   */\n  menu:\n    | React.ReactElement<BaseMenuProps>\n    | (() => React.ReactElement<BaseMenuProps>);\n\n  /**\n   * Whether the button is disabled\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Whether the menu is currently shown.\n   */\n  isOpen?: boolean;\n\n  /**\n   * Uncontrolled open state\n   */\n  defaultOpen?: boolean;\n\n  /**\n   * Event handler fired when Menu's open state changes\n   */\n  onOpenChange?: (isOpen: boolean) => void;\n\n  /**\n   * Desired placement location of the Select dropdown\n   */\n  placement?: Placement;\n  /**\n   * If true, menu width will always match the trigger button width.\n   * If false, then menu width will have min-width matching the\n   * trigger button width.\n   */\n  menuMatchTriggerWidth?: boolean;\n\n  /**\n   * If set, menu width will be exactly this width, overriding\n   * menuMatchTriggerWidth.\n   */\n  menuWidth?: number;\n}\n\nexport interface MenuButtonConfig<C extends AnyPlasmicClass> {\n  isOpenVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  menuSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  trigger: keyof PlasmicClassOverrides<C>;\n}\n\ninterface MenuButtonState {\n  open: () => void;\n  close: () => void;\n  isOpen: () => boolean;\n}\n\nexport type MenuButtonRef = React.Ref<MenuButtonRefValue>;\n\nexport interface MenuButtonRefValue extends MenuButtonState {\n  getRoot: () => HTMLElement | null;\n  getTrigger: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\nexport function useMenuButton<\n  P extends BaseMenuButtonProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: MenuButtonConfig<C>,\n  outerRef: MenuButtonRef = null\n) {\n  const {\n    placement,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    isDisabled,\n    menu,\n    autoFocus,\n    menuMatchTriggerWidth,\n    menuWidth,\n  } = props;\n\n  useEnsureSSRProvider();\n  const rootRef = React.useRef<HTMLElement>(null);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n\n  const state = useMenuTriggerState({\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    shouldFlip: true,\n  });\n\n  const { triggerProps, makeMenu, triggerContext } = useMenuTrigger(\n    {\n      isDisabled,\n      triggerRef,\n      placement,\n      menuMatchTriggerWidth,\n      menuWidth,\n      menu,\n    },\n    state\n  );\n\n  const { focusableProps: triggerFocusProps } = useFocusable(props, triggerRef);\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isOpenVariant, active: state.isOpen },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.menuSlot]: state.isOpen ? makeMenu() : undefined,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      wrapChildren: (children) => (\n        <TriggeredOverlayContext.Provider value={triggerContext}>\n          {children}\n        </TriggeredOverlayContext.Provider>\n      ),\n      props: {\n        ref: rootRef,\n      },\n    },\n    [config.trigger]: {\n      props: mergeProps(\n        triggerProps,\n        triggerFocusProps,\n        getStyleProps(props),\n        pick(props, \"title\"),\n        {\n          ref: triggerRef,\n          autoFocus,\n          disabled: !!isDisabled,\n          // Make sure this button is not interpreted as submit\n          type: \"button\",\n        }\n      ),\n    },\n  };\n\n  const plumeState: MenuButtonState = React.useMemo(\n    () => ({\n      open: () => state.open(),\n      close: () => state.close(),\n      isOpen: () => state.isOpen,\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    outerRef,\n    () => ({\n      getRoot: () => rootRef.current,\n      getTrigger: () => triggerRef.current,\n      focus: () => triggerRef.current && triggerRef.current.focus(),\n      blur: () => triggerRef.current && triggerRef.current.blur(),\n      open: plumeState.open,\n      close: plumeState.close,\n      isOpen: plumeState.isOpen,\n    }),\n    [rootRef, triggerRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n    state: plumeState,\n  };\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { useSeparator } from \"@react-aria/separator\";\nimport { pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport { renderCollectionNode, SectionLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { MenuContext } from \"./context\";\n\nexport interface BaseMenuGroupProps extends SectionLikeProps, StyleProps {}\n\ninterface MenuGroupConfig<C extends AnyPlasmicClass> {\n  noTitleVariant: PlasmicClassVariants<C>;\n  isFirstVariant: PlasmicClassVariants<C>;\n\n  itemsSlot: keyof PlasmicClassArgs<C>;\n  titleSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  separator: keyof PlasmicClassOverrides<C>;\n  titleContainer: keyof PlasmicClassOverrides<C>;\n  itemsContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useMenuGroup<\n  P extends BaseMenuGroupProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: MenuGroupConfig<C>) {\n  const context = React.useContext(MenuContext);\n\n  const node = (props as any)._node as\n    | Node<React.ReactElement<BaseMenuGroupProps>>\n    | undefined;\n\n  if (!context || !node) {\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\"You can only use a Menu.Group within a Menu component.\");\n    }\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { headingProps, groupProps } = useMenuSection({\n    heading: props.title,\n    \"aria-label\": props[\"aria-label\"],\n  });\n\n  const { separatorProps } = useSeparator({\n    elementType: \"li\",\n  });\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.noTitleVariant, active: !props.title },\n      {\n        def: config.isFirstVariant,\n        active: context.state.collection.getFirstKey() === node.key,\n      }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.titleSlot]: props.title,\n    [config.itemsSlot]: Array.from(node.childNodes).map((childNode) =>\n      renderCollectionNode(childNode)\n    ),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: getStyleProps(props),\n    },\n    [config.separator]: {\n      props: {\n        ...separatorProps,\n      },\n      as: \"li\",\n    },\n    [config.titleContainer]: {\n      props: {\n        role: \"presentation\",\n        ...headingProps,\n      },\n      ...(!props.title && {\n        render: () => null,\n      }),\n    },\n    [config.itemsContainer]: {\n      props: {\n        ...groupProps,\n      },\n      as: \"ul\",\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useMenuItem as useAriaMenuItem } from \"@react-aria/menu\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { ItemLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getDefaultPlasmicProps } from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"../triggered-overlay/context\";\nimport { MenuContext } from \"./context\";\n\nexport interface BaseMenuItemProps extends ItemLikeProps {\n  /**\n   * Called when this item is selected\n   */\n  onAction?: (key: string) => void;\n}\n\ninterface MenuItemConfig<C extends AnyPlasmicClass> {\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isHighlightedVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  labelSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  labelContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useMenuItem<\n  P extends BaseMenuItemProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: MenuItemConfig<C>) {\n  const menuContext = React.useContext(MenuContext);\n  const triggerContext = React.useContext(TriggeredOverlayContext);\n\n  if (!menuContext) {\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\"You can only use a Menu.Item within a Menu component.\");\n    }\n\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { children, onAction } = props;\n\n  const { state, menuProps } = menuContext;\n\n  // We pass in the Node secretly as an undocumented prop from <Select />\n  const node = (props as any)._node as Node<\n    React.ReactElement<BaseMenuItemProps>\n  >;\n\n  const isDisabled = state.disabledKeys.has(node.key);\n  const isHighlighted =\n    state.selectionManager.isFocused &&\n    state.selectionManager.focusedKey === node.key;\n\n  const ref = React.useRef<HTMLLIElement>(null);\n\n  const { menuItemProps, labelProps } = useAriaMenuItem(\n    mergeProps(\n      {\n        // We need to merge both the onAction on MenuItem and the onAction\n        // on Menu\n        onAction,\n      },\n      {\n        onAction: menuProps.onAction,\n        onClose: triggerContext?.state.close,\n      },\n      {\n        isDisabled,\n        \"aria-label\": node && node[\"aria-label\"],\n        key: node.key,\n        isVirtualized: false,\n        closeOnSelect: true,\n      }\n    ),\n    state,\n    ref\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isDisabledVariant, active: isDisabled },\n      { def: config.isHighlightedVariant, active: isHighlighted }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.labelSlot]: children,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      as: \"li\",\n      props: mergeProps(menuItemProps, { ref, style: noOutline() }),\n    },\n    [config.labelContainer]: {\n      props: { ...labelProps },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { usePlasmicCanvasContext } from \"@plasmicapp/host\";\nimport { useOption as useAriaOption } from \"@react-aria/listbox\";\nimport { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps, mergeRefs } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { ItemLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  noOutline,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n  VariantDef,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { SelectContext } from \"./context\";\n\nexport interface BaseSelectOptionProps extends ItemLikeProps, StyleProps {}\n\ninterface SelectOptionConfig<C extends AnyPlasmicClass> {\n  isSelectedVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isHighlightedVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  labelSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  labelContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport type SelectOptionRef = React.Ref<HTMLElement>;\n\nexport function useSelectOption<\n  P extends BaseSelectOptionProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: SelectOptionConfig<C>,\n  outerRef: SelectOptionRef = null\n) {\n  const state = React.useContext(SelectContext);\n\n  if (!state) {\n    // If no context, then we are being incorrectly used.  Complain or just don't\n    // bother installing any hooks.  It's okay to violate rules of hooks here\n    // because this instance won't suddenly be used correctly in another render.\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\n        \"You can only use a Select.Option within a Select component.\"\n      );\n    }\n\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { children } = props;\n\n  const canvasCtx = usePlasmicCanvasContext();\n  const rootRef = React.useRef<HTMLElement>(null);\n  const onRef = mergeRefs(rootRef, outerRef);\n\n  // We pass in the Node secretly as an undocumented prop from <Select />\n  const node = (props as any)._node as Node<\n    React.ReactElement<BaseSelectOptionProps>\n  >;\n\n  const isSelected = state.selectionManager.isSelected(node.key);\n  const isDisabled = state.disabledKeys.has(node.key);\n  const isHighlighted =\n    state.selectionManager.isFocused &&\n    state.selectionManager.focusedKey === node.key;\n\n  const { optionProps, labelProps } = useAriaOption(\n    {\n      isSelected,\n      isDisabled,\n      \"aria-label\": node && node[\"aria-label\"],\n      key: node.key,\n      shouldSelectOnPressUp: true,\n      shouldFocusOnHover: true,\n      isVirtualized: false,\n      shouldUseVirtualFocus: !!canvasCtx,\n    },\n    state,\n    rootRef\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isSelectedVariant, active: isSelected },\n      { def: config.isDisabledVariant, active: isDisabled },\n      { def: config.isHighlightedVariant, active: isHighlighted }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.labelSlot]: children,\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(canvasCtx ? {} : optionProps, getStyleProps(props), {\n        ref: onRef,\n        style: noOutline(),\n      }),\n    },\n    [config.labelContainer]: {\n      props: labelProps,\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { Node } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport { useListBoxSection } from \"@react-aria/listbox\";\nimport { useSeparator } from \"@react-aria/separator\";\nimport { pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport { renderCollectionNode, SectionLikeProps } from \"../collection-utils\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { SelectContext } from \"./context\";\n\nexport interface BaseSelectOptionGroupProps\n  extends SectionLikeProps,\n    StyleProps {}\n\ninterface SelectOptionGroupConfig<C extends AnyPlasmicClass> {\n  noTitleVariant: PlasmicClassVariants<C>;\n  isFirstVariant: PlasmicClassVariants<C>;\n\n  optionsSlot: keyof PlasmicClassArgs<C>;\n  titleSlot: keyof PlasmicClassArgs<C>;\n\n  root: keyof PlasmicClassOverrides<C>;\n  separator: keyof PlasmicClassOverrides<C>;\n  titleContainer: keyof PlasmicClassOverrides<C>;\n  optionsContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useSelectOptionGroup<\n  P extends BaseSelectOptionGroupProps,\n  C extends AnyPlasmicClass\n>(plasmicClass: C, props: P, config: SelectOptionGroupConfig<C>) {\n  const state = React.useContext(SelectContext);\n\n  // `node` should exist if the OptionGroup was instantiated properly\n  // within a Select\n  const node = (props as any)._node as\n    | Node<React.ReactElement<BaseSelectOptionGroupProps>>\n    | undefined;\n\n  if (!state || !node) {\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\n        \"You can only use a Select.OptionGroup within a Select component.\"\n      );\n    }\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { headingProps, groupProps } = useListBoxSection({\n    heading: props.title,\n    \"aria-label\": props[\"aria-label\"],\n  });\n\n  const { separatorProps } = useSeparator({\n    elementType: \"li\",\n  });\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.noTitleVariant, active: !props.title },\n      {\n        def: config.isFirstVariant,\n        active: state.collection.getFirstKey() === node.key,\n      }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.titleSlot]: props.title,\n    [config.optionsSlot]: Array.from(node.childNodes).map((childNode) =>\n      renderCollectionNode(childNode)\n    ),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: getStyleProps(props),\n    },\n    [config.separator]: {\n      props: {\n        ...separatorProps,\n      },\n    },\n    [config.titleContainer]: {\n      props: {\n        role: \"presentation\",\n        ...headingProps,\n      },\n      ...(!props.title && {\n        render: () => null,\n      }),\n    },\n    [config.optionsContainer]: {\n      props: {\n        ...groupProps,\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { useSwitch as useAriaSwitch } from \"@react-aria/switch\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { AriaSwitchProps } from \"@react-types/switch\";\nimport * as React from \"react\";\nimport { pick } from \"../../common\";\nimport { mergeProps } from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport { useEnsureSSRProvider } from \"../../render/ssr\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\nimport { getStyleProps, StyleProps } from \"../props-utils\";\n\nexport type SwitchRef = React.Ref<SwitchRefValue>;\nexport interface SwitchRefValue extends SwitchState {\n  getRoot: () => HTMLElement | null;\n  focus: () => void;\n  blur: () => void;\n}\n\ninterface SwitchState {\n  setChecked: (checked: boolean) => void;\n}\n\nexport interface SwitchProps\n  extends Omit<AriaSwitchProps, \"isSelected\" | \"defaultSelected\">,\n    StyleProps {\n  /**\n   * Whether the Switch is checked or not; controlled\n   */\n  isChecked?: boolean;\n\n  /**\n   * Whether the Switch is checked by default; uncontrolled\n   */\n  defaultChecked?: boolean;\n}\n\nfunction asAriaSwitchProps(props: SwitchProps) {\n  const ariaProps = {\n    ...props,\n    isSelected: props.isChecked,\n    defaultSelected: props.defaultChecked,\n  };\n  delete ariaProps[\"isChecked\"];\n  delete ariaProps[\"defaultChecked\"];\n  return ariaProps;\n}\n\ninterface SwitchConfig<C extends AnyPlasmicClass> {\n  isCheckedVariant: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  noLabelVariant?: VariantDef<PlasmicClassVariants<C>>;\n  labelSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useSwitch<P extends SwitchProps, C extends AnyPlasmicClass>(\n  plasmicClass: C,\n  props: P,\n  config: SwitchConfig<C>,\n  ref: SwitchRef = null\n) {\n  const { children, isDisabled } = props;\n  useEnsureSSRProvider();\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const rootRef = React.useRef<HTMLElement>(null);\n  const ariaProps = asAriaSwitchProps(props);\n  const state = useToggleState(ariaProps);\n  const { inputProps } = useAriaSwitch(ariaProps, state, inputRef);\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      {\n        def: config.isDisabledVariant,\n        active: isDisabled,\n      },\n      {\n        def: config.isCheckedVariant,\n        active: state.isSelected,\n      },\n      {\n        def: config.noLabelVariant,\n        active: !children,\n      }\n    ),\n  };\n  const overrides: Overrides = {\n    [config.root]: {\n      as: \"label\",\n      props: mergeProps(getStyleProps(props), {\n        ref: rootRef,\n      }),\n      wrapChildren: (children: React.ReactNode) => (\n        <>\n          <VisuallyHidden>\n            <input {...inputProps} ref={inputRef} />\n          </VisuallyHidden>\n          {children}\n        </>\n      ),\n    },\n  };\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.labelSlot ? { [config.labelSlot]: children } : {}),\n  };\n\n  const plumeState: SwitchState = React.useMemo(\n    () => ({\n      setChecked: (checked: boolean) => state.setSelected(checked),\n    }),\n    [state]\n  );\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      getRoot: () => rootRef.current,\n      focus: () => inputRef.current?.focus(),\n      blur: () => inputRef.current?.blur(),\n      setChecked: (checked) => plumeState.setChecked(checked),\n    }),\n    [rootRef, inputRef, plumeState]\n  );\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n      args: args as PlasmicClassArgs<C>,\n    },\n    state: plumeState,\n  };\n}\n","import * as React from \"react\";\nimport { omit, pick } from \"../../common\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  VariantDef,\n} from \"../plume-utils\";\n\nexport interface BaseTextInputProps\n  extends Omit<React.ComponentProps<\"input\">, \"type\" | \"disabled\"> {\n  showStartIcon?: boolean;\n  showEndIcon?: boolean;\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  isDisabled?: boolean;\n  type?: \"text\" | \"password\" | \"email\" | \"url\" | string;\n  inputClassName?: string;\n  inputStyle?: React.CSSProperties;\n}\n\nexport interface TextInputRefValue {\n  focus: () => void;\n  blur: () => void;\n  getRoot: () => HTMLElement | null;\n  getInput: () => HTMLInputElement | null;\n}\n\nexport type TextInputRef = React.Ref<TextInputRefValue>;\n\ninterface TextInputConfig<C extends AnyPlasmicClass> {\n  showStartIconVariant: VariantDef<PlasmicClassVariants<C>>;\n  showEndIconVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;\n  startIconSlot?: keyof PlasmicClassArgs<C>;\n  endIconSlot?: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n  input: keyof PlasmicClassOverrides<C>;\n}\n\nexport function useTextInput<\n  P extends BaseTextInputProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: TextInputConfig<C>,\n  ref: TextInputRef = null\n) {\n  const {\n    isDisabled,\n    startIcon,\n    endIcon,\n    showStartIcon,\n    showEndIcon,\n    className,\n    style,\n    inputClassName,\n    inputStyle,\n    ...rest\n  } = props;\n  const rootRef = React.useRef<HTMLElement>(null);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  React.useImperativeHandle(\n    ref,\n    () => ({\n      focus() {\n        inputRef.current?.focus();\n      },\n      blur() {\n        inputRef.current?.blur();\n      },\n      getRoot() {\n        return rootRef.current;\n      },\n      getInput() {\n        return inputRef.current;\n      },\n    }),\n    [rootRef, inputRef]\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.showStartIconVariant, active: showStartIcon },\n      { def: config.showEndIconVariant, active: showEndIcon },\n      { def: config.isDisabledVariant, active: isDisabled }\n    ),\n  };\n\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    ...(config.startIconSlot && { [config.startIconSlot]: startIcon }),\n    ...(config.endIconSlot && { [config.endIconSlot]: endIcon }),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: {\n        ref: rootRef,\n        className,\n        style,\n      },\n    },\n    [config.input]: {\n      props: {\n        ...omit(\n          rest as any,\n          // We need to remove `required` from the list of internalArgProps to\n          // be omitted in the props being passed through because Plume pkg\n          // <= 19.1.1 had a bug: input[required] was not linked to the\n          // `required` arg as it should.\n          ...plasmicClass.internalArgProps.filter(\n            (prop) => prop !== \"required\"\n          ),\n          ...plasmicClass.internalVariantProps\n        ),\n        disabled: isDisabled,\n        ref: inputRef,\n        className: inputClassName,\n        style: inputStyle,\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n","import { usePlasmicCanvasContext } from \"@plasmicapp/host\";\nimport { FocusScope } from \"@react-aria/focus\";\nimport {\n  DismissButton,\n  useOverlay,\n  useOverlayPosition,\n} from \"@react-aria/overlays\";\nimport { DOMProps } from \"@react-types/shared\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { pick } from \"../../common\";\nimport {\n  mergeProps,\n  mergeRefs,\n  useIsomorphicLayoutEffect,\n} from \"../../react-utils\";\nimport { Overrides } from \"../../render/elements\";\nimport {\n  AnyPlasmicClass,\n  mergeVariantToggles,\n  PlasmicClassArgs,\n  PlasmicClassOverrides,\n  PlasmicClassVariants,\n  PLUME_STRICT_MODE,\n  VariantDef,\n} from \"../plume-utils\";\nimport {\n  getDefaultPlasmicProps,\n  getStyleProps,\n  StyleProps,\n} from \"../props-utils\";\nimport { TriggeredOverlayContext } from \"./context\";\n\nexport interface BaseTriggeredOverlayProps extends StyleProps, DOMProps {\n  children?: React.ReactNode;\n}\n\nexport interface TriggeredOverlayConfig<C extends AnyPlasmicClass> {\n  isPlacedTopVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedBottomVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedLeftVariant?: VariantDef<PlasmicClassVariants<C>>;\n  isPlacedRightVariant?: VariantDef<PlasmicClassVariants<C>>;\n\n  contentSlot: keyof PlasmicClassArgs<C>;\n  root: keyof PlasmicClassOverrides<C>;\n  contentContainer: keyof PlasmicClassOverrides<C>;\n}\n\nexport type TriggeredOverlayRef = React.Ref<HTMLElement>;\n\nexport function useTriggeredOverlay<\n  P extends BaseTriggeredOverlayProps,\n  C extends AnyPlasmicClass\n>(\n  plasmicClass: C,\n  props: P,\n  config: TriggeredOverlayConfig<C>,\n  outerRef: TriggeredOverlayRef = null,\n  isDismissable = true\n) {\n  const overlayRef = React.useRef<HTMLElement>(null);\n  const onOverlayRef = mergeRefs(overlayRef, outerRef);\n\n  const context = React.useContext(TriggeredOverlayContext);\n\n  if (!context) {\n    // If no context, then we are not being correctly used.  Either complain, or\n    // exit early.  It's okay to exit early and break the rules of React hooks\n    // because we won't suddenly have the appropriate context anyway for this instance.\n    if (PLUME_STRICT_MODE) {\n      throw new Error(\n        \"You can only use a triggered overlay with a TriggeredOverlayContext\"\n      );\n    }\n    return getDefaultPlasmicProps(plasmicClass, props);\n  }\n\n  const { children } = props;\n  const {\n    triggerRef,\n    placement,\n    overlayMatchTriggerWidth,\n    overlayMinTriggerWidth,\n    overlayWidth,\n    state,\n  } = context;\n\n  // Measure the width of the trigger to inform the width of the menu (below).\n  const [isRendered, setRendered] = React.useState(false);\n  const triggerWidth =\n    triggerRef.current && (overlayMatchTriggerWidth || overlayMinTriggerWidth)\n      ? triggerRef.current.offsetWidth\n      : undefined;\n\n  useIsomorphicLayoutEffect(() => {\n    if (\n      !isRendered &&\n      triggerRef.current &&\n      (overlayMatchTriggerWidth || overlayMinTriggerWidth)\n    ) {\n      setRendered(true);\n    }\n  }, [\n    triggerRef,\n    isRendered,\n    overlayMatchTriggerWidth,\n    overlayMinTriggerWidth,\n  ]);\n\n  const { overlayProps: overlayAriaProps } = useOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      isDismissable,\n      shouldCloseOnBlur: true,\n    },\n    overlayRef\n  );\n\n  const {\n    overlayProps: overlayPositionProps,\n    updatePosition,\n    placement: placementAxis,\n  } = useOverlayPosition({\n    targetRef: triggerRef,\n    overlayRef,\n    placement: placement ?? \"bottom left\",\n    shouldFlip: true,\n    isOpen: state.isOpen,\n    onClose: state.close,\n    containerPadding: 0,\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    if (state.isOpen) {\n      requestAnimationFrame(() => {\n        updatePosition();\n      });\n    }\n  }, [state.isOpen, updatePosition]);\n\n  const overlayProps = mergeProps(\n    {\n      style: {\n        left: \"auto\",\n        right: \"auto\",\n        top: \"auto\",\n        bottom: \"auto\",\n        position: \"absolute\",\n        width:\n          overlayWidth ?? (overlayMatchTriggerWidth ? triggerWidth : \"auto\"),\n        minWidth: overlayMinTriggerWidth ? triggerWidth : \"auto\",\n      },\n    },\n    overlayAriaProps,\n    overlayPositionProps\n  );\n\n  const variants = {\n    ...pick(props, ...plasmicClass.internalVariantProps),\n    ...mergeVariantToggles(\n      { def: config.isPlacedTopVariant, active: placementAxis === \"top\" },\n      { def: config.isPlacedBottomVariant, active: placementAxis === \"bottom\" },\n      { def: config.isPlacedLeftVariant, active: placementAxis === \"left\" },\n      { def: config.isPlacedRightVariant, active: placementAxis === \"right\" }\n    ),\n  };\n\n  const canvasCtx = usePlasmicCanvasContext();\n  const args = {\n    ...pick(props, ...plasmicClass.internalArgProps),\n    [config.contentSlot]: canvasCtx ? (\n      children\n    ) : (\n      <FocusScope restoreFocus>\n        <DismissButton onDismiss={state.close} />\n        {children}\n        {/* We don't use the DismissButton at the end because it ends up taking up 1px space :-/ */}\n        {/* <DismissButton onDismiss={state.close} /> */}\n      </FocusScope>\n    ),\n  };\n\n  const overrides: Overrides = {\n    [config.root]: {\n      props: mergeProps(overlayProps, getStyleProps(props), {\n        ref: onOverlayRef,\n      }),\n      wrap: (root) => {\n        if (typeof document !== \"undefined\") {\n          return ReactDOM.createPortal(root, document.body);\n        } else {\n          // Possibly being invoked on the server during SSR; no need to\n          // bother with a portal in that case.\n          return root;\n        }\n      },\n    },\n  };\n\n  return {\n    plasmicProps: {\n      variants: variants as PlasmicClassVariants<C>,\n      args: args as PlasmicClassArgs<C>,\n      overrides: overrides as PlasmicClassOverrides<C>,\n    },\n  };\n}\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","_triggerLogin","appId","authorizeEndpoint","redirectUri","sha256","_sha","text","encoder","TextEncoder","data","encode","_context","subtle","digest","hashArray","Array","from","hashHex","map","b","padStart","join","continueTo","window","location","href","JSON","stringify","code_verifier","localStorage","setItem","_context2","code_challenge","params","URLSearchParams","set","url","notNil","x","pick","res","omit","includes","chainSingleArgFuncs","funcs","func","groupBy","collection","keyFunc","mapValues","mapper","isBrowser","NONE","useIsomorphicLayoutEffect","React","useLayoutEffect","useEffect","createElementWithChildren","elementType","props","children","isArray","createElement","toChildArray","isValidElement","child","isReactText","flatMap","mergeProps","restProps","every","rest","mergePropVals","updateRef","ref","isFrozen","current","mergeRefs","refs","val1","val2","classNames","startsWith","renderStack","as","hasGap","wrappedChildren","wrapFlexContainerChildren","FlexStack_","outerRef","makeStackImpl","Stack","assign","div","a","button","h1","h2","h3","h4","h5","h6","label","form","section","head","main","nav","className","createPlasmicElement","override","defaultRoot","defaultProps","wrapChildrenInFlex","override2","deriveOverride","mergeOverrideProps","render","root","wrapChildren","Fragment","ensureNotArray","seenElements","Map","createPlasmicElementFromJsx","defaultElement","wrapFlexChild","triggerProps","UNSET","defaults","overrides","defaultVal","overrideVal","isReactNode","a1","a2","mergeFlexOverrides","o1","o2","merged","Set","mergeFlexOverride","fo1","fo2","filter","PlasmicHeadContext","DEVICE_SIZES","ALL_SIZES","PlasmicImg","forwardRef","src","displayWidth","displayHeight","displayMinWidth","displayMinHeight","displayMaxWidth","displayMaxHeight","quality","loader","imgRef","style","loading","imgProps","fullWidth","fullHeight","aspectRatio","srcStr","isSvg","computedDisplayWidth","getPixelLength","spacerWidth","spacerHeight","isFinite","DEFAULT_SVG_WIDTH","Math","round","width","extra","minWidth","pixelWidth","pixelMinWidth","widthDescs","getClosestPresetSize","max","desc","sizes","usefulSizes","size","getWidths","imageLoader","PLASMIC_IMAGE_LOADER","getImageLoader","spacerSvg","spacerSvgBase64","Buffer","btoa","wrapperStyle","spacerStyle","maxWidth","height","minHeight","maxHeight","alt","opts","supportsUrl","srcSet","wd","transformUrl","format","decoding","makePicture","endsWith","nextBiggerIndex","findIndex","w","nextBigger","parsed","val","match","num","units","parseNumeric","PlasmicLink","platform","nextjsProps","component","legacyBehavior","test","to","PlasmicTranslatorContext","createContext","genTranslatableString","elt","components","componentsCount","str","getText","node","nodeChildren","hasKey","contents","Children","toArray","componentId","cloneElement","Trans","transKey","_t","useContext","hasWarned","console","warn","v","renderPlasmicSlot","defaultContents","content","maybeString","maybeAsString","p","listeners","queries","matchScreenVariants","entries","matchMedia","matches","curScreenVariants","addEventListener","screenVariant","ReactDOM","unstable_batchedUpdates","listener","PlasmicRootContext","useIsSSR","useAriaIsSSR","useEnsureSSRProvider","TRIGGER_TO_HOOK","useHover","setHover","onMouseEnter","onMouseLeave","useFocused","useAriaFocusRing","within","isTextInput","isFocused","focusProps","useFocusVisible","isFocusVisible","useFocusedWithin","useFocusVisibleWithin","usePressed","setPressed","onMouseDown","onMouseUp","ARRAY_SYMBOL","PLASMIC_STATE_PROXY_SYMBOL","UNINITIALIZED","StateSpecNode","specs","_specs","_edges","_state","_proto","setSpecs","edges","hasEdge","has","addEdge","clearEdges","makeTransition","get","isLeaf","hasArrayTransition","getSpec","getAllSpecs","getState","path","getInitFunc","stateCell","registeredInitFunc","initFunc","clearStates","states","hasState","createStateCell","initialValue","deleteStateCell","prefixPath","parse","shallowEqual","_this","setInitialValue","getInitialValue","addListener","f","transformPathStringToObj","split","splitStatePathPart","buildTree","internalSpec","spec","pathObj","isRepeated","some","part","rec","currentPath","nextKey","updateTree","oldNode","nodeSpecs","oldEdges","getStateCells","leaves","findStateCell","pathStr","repetitionIndex","realPath","currRepIndex","isPlasmicStateProxy","arrayEq","xs","ys","_","index","k","l","t","indexOf","objValue","other","eq","baseAssignValue","isNum","initializeStateValue","$$state","initialSpecNode","initialStatePath","proxyRoot","stateAccess","$state","create$StateProxy","add","valueProp","env","$props","newValue","invokeInitFuncBackwardsCompatible","clone","initialSpec","isImmutable","mkUntrackedValue","onChangeProp","_$$state$env$$props$i","leafHandlers","currPath","currNode","isOutside","initialObject","getNextPath","property","handlers","deleteProperty","target","stateValues","_$$state$env$$props$s","nextPath","nextNode","Reflect","receiver","_leafHandlers$get","_nextNode","_leafHandlers$set","cond","msg","assert","canProxy","_nextNode2","_$$state$env$$props$s2","_$$state$env$$props$s3","baseObject","proxyObj","Proxy","ownKeys","getOwnPropertyDescriptor","rootSpecTree","o","envFieldsAreNonNill","$ctx","$queries","extractDollarStateParametersBackwardCompatible","_classNames","PLUME_STRICT_MODE","mergeVariantToggles","toggles","definedToggles","def","grouped","group","subToggles","fromEntries","variant","active","getPlumeType","childType","__plumeType","getStyleProps","getDefaultPlasmicProps","plasmicClass","plasmicProps","variants","internalVariantProps","args","internalArgProps","RE_DATA_PROP","deriveItemsFromChildren","items","disabledKeys","itemPlumeType","sectionPlumeType","invalidChildError","itemCount","sectionCount","flattenedChildren","childKey","getItemLikeKey","element","propInChild","requireItemValue","comp","_comp$render","getElementTypeName","cloneChild","ensureValue","getChildProp","renderCollectionNode","rendered","_node","renderAsCollectionChild","option","Item","textValue","Section","title","prop","componentProps","TriggeredOverlayContext","MenuContext","COLLECTION_OPTS","useMenuTrigger","triggerRef","isDisabled","placement","menuMatchTriggerWidth","menuWidth","menu","useAriaMenuTrigger","menuProps","usePress","menuTriggerProps","pressProps","makeMenu","realMenu","triggerContext","autoFocus","focusStrategy","overlayMatchTriggerWidth","overlayMinTriggerWidth","overlayWidth","SelectContext","ListBoxWrapper","canvasCtx","usePlasmicCanvasContext","useListBox","isVirtualized","disallowEmptySelection","listBoxProps","outline","isOpen","defaultOpen","onOpenChange","useMenuTriggerState","shouldFlip","Provider","Head","image","description","canonical","PlasmicIconType","minRole","canTriggerLogin","dataSourceCtxValue","usePlasmicDataSourceContext","isUserLoading","user","triggerLogin","authRedirectUri","roleIds","userAuthToken","dataSourceContextValue","SSRProvider","PlasmicDataSourceContextProvider","translator","isRoot","forNodeName","forNode","clear","isMulti","screenQueries","updateState","lastScreenVariantsRef","updateIfChanged","splice","config","v1","v2","descendantNames","internalVariantPropNames","internalArgPropNames","reservedPropNames","leftoverProps","globalVariantValues","pickBy","rootPath","isImplicitStateArray","groupName","groupVariants","linkedStates","variantGroup","statePath","importName","importPath","isRepeatable","styleSections","mode","link","startIcon","endIcon","showStartIcon","showEndIcon","showStartIconVariant","showEndIconVariant","isDisabledVariant","startIconSlot","endIconSlot","contentSlot","disabled","isIndeterminate","inputRef","rootRef","ariaProps","isSelected","isChecked","defaultSelected","defaultChecked","asAriaCheckboxProps","useToggleState","inputProps","useAriaCheckbox","isCheckedVariant","isIndeterminateVariant","noLabelVariant","VisuallyHidden","labelSlot","plumeState","setChecked","checked","setSelected","getRoot","focus","_inputRef$current","blur","_inputRef$current2","useRef","specTreeLeaves","createValtioProxy","registrationsQueue","create$State","initVal","registerInitFunc","deepEqual","inCanvas","newLeaves","old$State","init","resetSpecs","newInit","reInitializeState","_$$state$env$$props$s4","shift","useSnapshot","sync","useMemo","useDerivedItemsFromChildren","asAriaMenuProps","useTreeState","menuListRef","useAriaMenu","contextValue","itemsContainer","itemsSlot","getFocusedValue","selectionManager","focusedKey","setFocusedValue","setFocusedKey","triggerFocusProps","useFocusable","focusableProps","isOpenVariant","menuSlot","trigger","open","close","getTrigger","useMenuSection","heading","aria-label","headingProps","groupProps","separatorProps","useSeparator","noTitleVariant","isFirstVariant","getFirstKey","titleSlot","childNodes","childNode","separator","titleContainer","role","menuContext","onAction","isHighlighted","useAriaMenuItem","onClose","closeOnSelect","menuItemProps","labelProps","isHighlightedVariant","labelContainer","defaultValue","onChange","ItemComponent","SectionComponent","itemsProp","transform","item","deriveItemsFromItemsProp","deriveItemsFromProps","useDerivedItems","OptionComponent","OptionGroupComponent","onSelectionChange","defaultSelectedKey","selectedKey","useAriaSelectProps","useAriaSelectState","placeholder","selectedContent","useAriaSelect","triggerContent","selectedItem","placeholderVariant","HiddenSelect","overlay","optionsContainer","triggerContentSlot","placeholderSlot","optionsSlot","getSelectedValue","setSelectedValue","setSelectedKey","_triggerRef$current","_triggerRef$current2","onRef","useAriaOption","shouldSelectOnPressUp","shouldFocusOnHover","shouldUseVirtualFocus","optionProps","isSelectedVariant","useListBoxSection","asAriaSwitchProps","useAriaSwitch","inputClassName","inputStyle","getInput","input","isDismissable","overlayRef","onOverlayRef","isRendered","setRendered","triggerWidth","offsetWidth","overlayAriaProps","useOverlay","shouldCloseOnBlur","overlayProps","useOverlayPosition","targetRef","containerPadding","overlayPositionProps","updatePosition","placementAxis","requestAnimationFrame","left","right","top","bottom","position","isPlacedTopVariant","isPlacedBottomVariant","isPlacedLeftVariant","isPlacedRightVariant","FocusScope","restoreFocus","DismissButton","onDismiss","document","body","display"],"mappings":"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"}