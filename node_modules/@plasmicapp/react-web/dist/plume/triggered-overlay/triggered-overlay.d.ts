import { DOMProps } from "@react-types/shared";
import * as React from "react";
import { AnyPlasmicClass, PlasmicClassArgs, PlasmicClassOverrides, PlasmicClassVariants, VariantDef } from "../plume-utils";
import { StyleProps } from "../props-utils";
export interface BaseTriggeredOverlayProps extends StyleProps, DOMProps {
    children?: React.ReactNode;
}
export interface TriggeredOverlayConfig<C extends AnyPlasmicClass> {
    isPlacedTopVariant?: VariantDef<PlasmicClassVariants<C>>;
    isPlacedBottomVariant?: VariantDef<PlasmicClassVariants<C>>;
    isPlacedLeftVariant?: VariantDef<PlasmicClassVariants<C>>;
    isPlacedRightVariant?: VariantDef<PlasmicClassVariants<C>>;
    contentSlot: keyof PlasmicClassArgs<C>;
    root: keyof PlasmicClassOverrides<C>;
    contentContainer: keyof PlasmicClassOverrides<C>;
}
export declare type TriggeredOverlayRef = React.Ref<HTMLElement>;
export declare function useTriggeredOverlay<P extends BaseTriggeredOverlayProps, C extends AnyPlasmicClass>(plasmicClass: C, props: P, config: TriggeredOverlayConfig<C>, outerRef?: TriggeredOverlayRef, isDismissable?: boolean): {
    plasmicProps: {
        variants: PlasmicClassVariants<C>;
        args: PlasmicClassArgs<C>;
        overrides: PlasmicClassOverrides<C>;
    };
};
