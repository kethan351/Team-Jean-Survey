import * as React from "react";
export declare const Stack: (<T extends keyof JSX.IntrinsicElements = "div">(props: {
    as?: T | undefined;
    hasGap?: boolean | undefined;
} & React.ComponentProps<T>) => React.ReactElement) & {
    div: React.FC<React.ClassAttributes<HTMLDivElement> & React.HTMLAttributes<HTMLDivElement> & {
        hasGap?: boolean | undefined;
    }>;
    a: React.FC<React.ClassAttributes<HTMLAnchorElement> & React.AnchorHTMLAttributes<HTMLAnchorElement> & {
        hasGap?: boolean | undefined;
    }>;
    button: React.FC<React.ClassAttributes<HTMLButtonElement> & React.ButtonHTMLAttributes<HTMLButtonElement> & {
        hasGap?: boolean | undefined;
    }>;
    h1: React.FC<React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement> & {
        hasGap?: boolean | undefined;
    }>;
    h2: React.FC<React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement> & {
        hasGap?: boolean | undefined;
    }>;
    h3: React.FC<React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement> & {
        hasGap?: boolean | undefined;
    }>;
    h4: React.FC<React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement> & {
        hasGap?: boolean | undefined;
    }>;
    h5: React.FC<React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement> & {
        hasGap?: boolean | undefined;
    }>;
    h6: React.FC<React.ClassAttributes<HTMLHeadingElement> & React.HTMLAttributes<HTMLHeadingElement> & {
        hasGap?: boolean | undefined;
    }>;
    label: React.FC<React.ClassAttributes<HTMLLabelElement> & React.LabelHTMLAttributes<HTMLLabelElement> & {
        hasGap?: boolean | undefined;
    }>;
    form: React.FC<React.ClassAttributes<HTMLFormElement> & React.FormHTMLAttributes<HTMLFormElement> & {
        hasGap?: boolean | undefined;
    }>;
    section: React.FC<React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement> & {
        hasGap?: boolean | undefined;
    }>;
    head: React.FC<React.ClassAttributes<HTMLHeadElement> & React.HTMLAttributes<HTMLHeadElement> & {
        hasGap?: boolean | undefined;
    }>;
    main: React.FC<React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement> & {
        hasGap?: boolean | undefined;
    }>;
    nav: React.FC<React.ClassAttributes<HTMLElement> & React.HTMLAttributes<HTMLElement> & {
        hasGap?: boolean | undefined;
    }>;
};
