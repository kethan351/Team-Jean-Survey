import * as React from 'react';

var PlasmicHeadContext = React.createContext(undefined);
function PlasmicHead(props) {
    var Head = React.useContext(PlasmicHeadContext);
    if (!Head) {
        console.warn("Plasmic: Head meta tags are being ignored. To make them work, pass a Head component into PlasmicRootProvider.");
        // TODO: Link to doc about Head.
        return null;
    }
    // Helmet does not support React.Fragments, so we need to use `[<meta />,
    // <meta />]` instead of `<><meta /><meta /></>`.
    return (React.createElement(Head, null,
        props.image ? ([
            React.createElement("meta", { key: "twitter:card", name: "twitter:card", content: "summary_large_image" }),
            React.createElement("meta", { key: "og:image", property: "og:image", content: props.image }),
            React.createElement("meta", { key: "twitter:image", name: "twitter:image", content: props.image }),
        ]) : (React.createElement("meta", { key: "twitter:card", name: "twitter:card", content: "summary" })),
        props.title && [
            React.createElement("title", { key: "title" }, props.title),
            React.createElement("meta", { key: "og:title", property: "og:title", content: props.title }),
            React.createElement("meta", { key: "twitter:title", property: "twitter:title", content: props.title }),
        ],
        props.description && [
            React.createElement("meta", { key: "description", name: "description", content: props.description }),
            React.createElement("meta", { key: "og:description", property: "og:description", content: props.description }),
            React.createElement("meta", { key: "twitter:description", name: "twitter:description", content: props.description }),
        ],
        props.canonical && (React.createElement("link", { key: "canonical", ref: "canonical", href: props.canonical }))));
}
var plasmicHeadMeta = {
    name: "hostless-plasmic-head",
    displayName: "Head",
    description: "Used to add page metadata to HTML <head />.",
    importName: "PlasmicHead",
    importPath: "@plasmicapp/react-web",
    isRepeatable: false,
    styleSections: false,
    props: {
        title: {
            type: "string",
            displayName: "Title"
        },
        description: {
            type: "string",
            displayName: "Description"
        },
        image: {
            type: "imageUrl",
            displayName: "Image"
        },
        canonical: {
            type: "string",
            displayName: "Canonical URL"
        }
    }
};

export { PlasmicHead, PlasmicHeadContext, plasmicHeadMeta };
//# sourceMappingURL=index.js.map
