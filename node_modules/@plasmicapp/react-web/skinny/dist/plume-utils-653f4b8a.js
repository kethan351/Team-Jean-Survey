import * as React from 'react';
import { m as mapValues, h as groupBy } from './common-c2744215.js';

var PLUME_STRICT_MODE = true;
function mergeVariantToggles() {
    var toggles = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        toggles[_i] = arguments[_i];
    }
    var definedToggles = toggles.filter(function (x) { return !!x.def; });
    var grouped = groupBy(definedToggles, function (_a) {
        var def = _a.def;
        return def.group;
    });
    return mapValues(grouped, function (subToggles) {
        return Object.fromEntries(subToggles.map(function (_a) {
            var def = _a.def, active = _a.active;
            return [def.variant, !!active];
        }));
    });
}
function noOutline() {
    return { outline: "none" };
}
function getPlumeType(child) {
    var _a;
    if (!React.isValidElement(child)) {
        return undefined;
    }
    var childType = child.type;
    return (childType.__plumeType || ((_a = childType.getPlumeType) === null || _a === void 0 ? void 0 : _a.call(childType, child.props)));
}

export { PLUME_STRICT_MODE as P, getPlumeType as g, mergeVariantToggles as m, noOutline as n };
//# sourceMappingURL=plume-utils-653f4b8a.js.map
