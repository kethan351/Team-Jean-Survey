{"version":3,"file":"ssr-08aff522.js","sources":["../../src/render/translation.tsx","../../src/render/ssr.tsx"],"sourcesContent":["import React from \"react\";\n\nexport type PlasmicTranslator = (\n  str: string,\n  opts?: {\n    components?: {\n      [key: string]: React.ReactElement;\n    };\n  }\n) => React.ReactNode;\n\nexport const PlasmicTranslatorContext = React.createContext<\n  PlasmicTranslator | undefined\n>(undefined);\n\nexport interface TransProps {\n  transKey?: string;\n  children?: React.ReactNode;\n}\n\nfunction isIterable(val: any): val is Iterable<any> {\n  return val != null && typeof val[Symbol.iterator] === \"function\";\n}\n\nexport function genTranslatableString(elt: React.ReactNode) {\n  const components: {\n    [key: string]: React.ReactElement;\n  } = {};\n  let componentsCount = 0;\n\n  const getText = (node: React.ReactNode): string => {\n    if (!node) {\n      return \"\";\n    }\n    if (\n      typeof node === \"number\" ||\n      typeof node === \"boolean\" ||\n      typeof node === \"string\"\n    ) {\n      return node.toString();\n    }\n    if (typeof node !== \"object\") {\n      return \"\";\n    }\n    if (Array.isArray(node) || isIterable(node)) {\n      return Array.from(node)\n        .map((child) => getText(child))\n        .filter((child) => !!child)\n        .join(\"\");\n    }\n    const nodeChildren: React.ReactNode =\n      (hasKey(node, \"props\") &&\n        hasKey(node.props, \"children\") &&\n        (node.props.children as React.ReactNode | undefined)) ||\n      (hasKey(node, \"children\") && node.children) ||\n      [];\n    const contents = `${React.Children.toArray(nodeChildren)\n      .map((child) => getText(child))\n      .filter((child) => !!child)\n      .join(\"\")}`;\n    if (React.isValidElement(node) && node.type === React.Fragment) {\n      return contents;\n    }\n    const componentId = componentsCount + 1;\n    componentsCount++;\n    components[componentId] = React.isValidElement(node)\n      ? React.cloneElement(node as any, {\n          key: componentId,\n          children: undefined,\n        })\n      : (node as never);\n    return `<${componentId}>${contents}</${componentId}>`;\n  };\n\n  const str = getText(elt);\n  return {\n    str,\n    components,\n    componentsCount,\n  };\n}\n\nexport function Trans({ transKey, children }: TransProps) {\n  const _t = React.useContext(PlasmicTranslatorContext);\n  if (!_t) {\n    warnNoTranslationFunctionAtMostOnce();\n    return children;\n  }\n\n  const { str, components, componentsCount } = genTranslatableString(children);\n  return _t(transKey ?? str, componentsCount > 0 ? { components } : undefined);\n}\n\nlet hasWarned = false;\nfunction warnNoTranslationFunctionAtMostOnce() {\n  if (!hasWarned) {\n    console.warn(\n      \"Using Plasmic Translation but no translation function has been provided\"\n    );\n    hasWarned = true;\n  }\n}\n\nfunction hasKey<K extends string>(v: any, key: K): v is Record<K, any> {\n  return typeof v === \"object\" && v !== null && key in v;\n}\n","import { PlasmicDataSourceContextProvider } from \"@plasmicapp/data-sources-context\";\nimport { SSRProvider, useIsSSR as useAriaIsSSR } from \"@react-aria/ssr\";\nimport * as React from \"react\";\nimport { PlasmicHeadContext } from \"./PlasmicHead\";\nimport { PlasmicTranslator, PlasmicTranslatorContext } from \"./translation\";\nexport {\n  PlasmicDataSourceContextProvider,\n  useCurrentUser,\n} from \"@plasmicapp/data-sources-context\";\n\nexport interface PlasmicRootContextValue {\n  platform?: \"nextjs\" | \"gatsby\";\n}\n\nconst PlasmicRootContext = React.createContext<\n  PlasmicRootContextValue | undefined\n>(undefined);\n\nexport interface PlasmicRootProviderProps {\n  platform?: \"nextjs\" | \"gatsby\";\n  children?: React.ReactNode;\n  translator?: PlasmicTranslator;\n  Head?: React.ComponentType<any>;\n}\n\nexport function PlasmicRootProvider(props: PlasmicRootProviderProps) {\n  const {\n    platform,\n    children,\n    userAuthToken,\n    isUserLoading,\n    authRedirectUri,\n    user,\n  } = props as any;\n  const context = React.useMemo(\n    () => ({\n      platform,\n    }),\n    [platform]\n  );\n  const dataSourceContextValue = React.useMemo(\n    () => ({\n      userAuthToken,\n      user,\n      isUserLoading,\n      authRedirectUri,\n    }),\n    [userAuthToken, isUserLoading, user, authRedirectUri]\n  );\n  return (\n    <PlasmicRootContext.Provider value={context}>\n      <SSRProvider>\n        <PlasmicDataSourceContextProvider value={dataSourceContextValue}>\n          <PlasmicTranslatorContext.Provider value={props.translator}>\n            <PlasmicHeadContext.Provider value={props.Head}>\n              {children}\n            </PlasmicHeadContext.Provider>\n          </PlasmicTranslatorContext.Provider>\n        </PlasmicDataSourceContextProvider>\n      </SSRProvider>\n    </PlasmicRootContext.Provider>\n  );\n}\n\nexport const useIsSSR = useAriaIsSSR;\n\nexport function useHasPlasmicRoot() {\n  return !!React.useContext(PlasmicRootContext);\n}\n\nlet hasWarnedSSR = false;\n/**\n * Warns the user if PlasmicRootProvider is not used\n */\nexport function useEnsureSSRProvider() {\n  const hasRoot = useHasPlasmicRoot();\n  if (hasRoot || hasWarnedSSR || process.env.NODE_ENV !== \"development\") {\n    return;\n  }\n\n  hasWarnedSSR = true;\n  console.warn(\n    `Plasmic: To ensure your components work correctly with server-side rendering, please use PlasmicRootProvider at the root of your application.  See https://docs.plasmic.app/learn/ssr`\n  );\n}\n"],"names":["React","useAriaIsSSR"],"mappings":"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"}