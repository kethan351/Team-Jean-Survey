import * as React from "react";
import { ItemLikeProps } from "../collection-utils";
import { AnyPlasmicClass, PlasmicClassArgs, PlasmicClassOverrides, PlasmicClassVariants, VariantDef } from "../plume-utils";
import { StyleProps } from "../props-utils";
export interface BaseSelectOptionProps extends ItemLikeProps, StyleProps {
}
interface SelectOptionConfig<C extends AnyPlasmicClass> {
    isSelectedVariant: VariantDef<PlasmicClassVariants<C>>;
    isDisabledVariant?: VariantDef<PlasmicClassVariants<C>>;
    isHighlightedVariant?: VariantDef<PlasmicClassVariants<C>>;
    labelSlot: keyof PlasmicClassArgs<C>;
    root: keyof PlasmicClassOverrides<C>;
    labelContainer: keyof PlasmicClassOverrides<C>;
}
export type SelectOptionRef = React.Ref<HTMLElement>;
export declare function useSelectOption<P extends BaseSelectOptionProps, C extends AnyPlasmicClass>(plasmicClass: C, props: P, config: SelectOptionConfig<C>, outerRef?: SelectOptionRef): {
    plasmicProps: {
        variants: PlasmicClassVariants<C>;
        args: PlasmicClassArgs<C>;
        overrides: PlasmicClassOverrides<C>;
    };
};
export {};
