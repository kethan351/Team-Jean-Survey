declare module "common-theme-settings" {
    export function setMediaStyles(): void;
    export function setStyles(): void;
}
declare module "bootstrapmaterial/cssbootstrapmaterial" {
    export var defaultCss: {
        root: string;
        container: string;
        header: string;
        body: string;
        bodyEmpty: string;
        footer: string;
        title: string;
        description: string;
        logo: string;
        logoImage: string;
        headerText: string;
        navigationButton: string;
        completedPage: string;
        navigation: {
            complete: string;
            prev: string;
            next: string;
            start: string;
            preview: string;
            edit: string;
        };
        progress: string;
        progressBar: string;
        progressTextUnderBar: string;
        progressTextInBar: string;
        progressButtonsContainerCenter: string;
        progressButtonsContainer: string;
        progressButtonsImageButtonLeft: string;
        progressButtonsImageButtonRight: string;
        progressButtonsImageButtonHidden: string;
        progressButtonsListContainer: string;
        progressButtonsList: string;
        progressButtonsListElementPassed: string;
        progressButtonsListElementCurrent: string;
        progressButtonsListElementNonClickable: string;
        progressButtonsPageTitle: string;
        progressButtonsPageDescription: string;
        page: {
            root: string;
            title: string;
            description: string;
        };
        pageTitle: string;
        pageDescription: string;
        row: string;
        question: {
            mainRoot: string;
            flowRoot: string;
            header: string;
            headerLeft: string;
            content: string;
            contentLeft: string;
            titleLeftRoot: string;
            requiredText: string;
            title: string;
            titleExpandable: string;
            titleExpanded: string;
            titleCollapsed: string;
            number: string;
            description: string;
            descriptionUnderInput: string;
            comment: string;
            required: string;
            titleRequired: string;
            hasError: string;
            indent: number;
            formGroup: string;
            disabled: string;
        };
        panel: {
            title: string;
            titleExpandable: string;
            titleExpanded: string;
            titleCollapsed: string;
            titleOnError: string;
            icon: string;
            iconExpanded: string;
            description: string;
            container: string;
            footer: string;
            number: string;
            requiredText: string;
        };
        error: {
            root: string;
            icon: string;
            item: string;
            locationTop: string;
            locationBottom: string;
        };
        boolean: {
            root: string;
            rootRadio: string;
            item: string;
            control: string;
            controlCheckbox: string;
            itemChecked: string;
            itemIndeterminate: string;
            itemDisabled: string;
            switch: string;
            slider: string;
            label: string;
            disabledLabel: string;
            materialDecorator: string;
            itemDecorator: string;
            checkedPath: string;
            uncheckedPath: string;
            indeterminatePath: string;
        };
        checkbox: {
            root: string;
            item: string;
            itemChecked: string;
            itemSelectAll: string;
            itemNone: string;
            itemInline: string;
            itemDecorator: string;
            itemControl: string;
            label: string;
            labelChecked: string;
            controlLabel: string;
            materialDecorator: string;
            other: string;
            column: string;
        };
        ranking: {
            root: string;
            rootMobileMod: string;
            rootDragMod: string;
            rootDisabled: string;
            rootDragHandleAreaIcon: string;
            item: string;
            itemContent: string;
            itemIndex: string;
            itemIndexEmptyMode: string;
            controlLabel: string;
            itemGhostNode: string;
            itemIconContainer: string;
            itemIcon: string;
            itemIconHoverMod: string;
            itemIconFocusMod: string;
            itemGhostMod: string;
            itemDragMod: string;
        };
        comment: string;
        dropdown: {
            root: string;
            popup: string;
            selectWrapper: string;
            control: string;
            controlValue: string;
            other: string;
            cleanButton: string;
            cleanButtonSvg: string;
            cleanButtonIconId: string;
            filterStringInput: string;
        };
        tagbox: {
            root: string;
            popup: string;
            selectWrapper: string;
            control: string;
            controlValue: string;
            other: string;
            cleanButton: string;
            cleanButtonSvg: string;
            cleanButtonIconId: string;
            filterStringInput: string;
        };
        html: {
            root: string;
        };
        image: {
            root: string;
            image: string;
        };
        matrix: {
            root: string;
            row: string;
            label: string;
            cellText: string;
            cellTextSelected: string;
            cellLabel: string;
            itemValue: string;
            itemChecked: string;
            itemDecorator: string;
            materialDecorator: string;
            cellResponsiveTitle: string;
        };
        matrixdropdown: {
            root: string;
            itemValue: string;
            headerCell: string;
            row: string;
            rowAdditional: string;
            detailRow: string;
            detailRowText: string;
            detailCell: string;
            detailButton: string;
            detailButtonExpanded: string;
            detailIcon: string;
            detailIconExpanded: string;
            detailPanelCell: string;
            actionsCell: string;
        };
        matrixdynamic: {
            mainRoot: string;
            flowRoot: string;
            root: string;
            button: string;
            itemValue: string;
            buttonAdd: string;
            buttonRemove: string;
            iconAdd: string;
            iconRemove: string;
            iconDrag: string;
            headerCell: string;
            row: string;
            detailRow: string;
            detailCell: string;
            detailButton: string;
            detailButtonExpanded: string;
            detailIcon: string;
            detailIconExpanded: string;
            detailPanelCell: string;
            actionsCell: string;
            emptyRowsSection: string;
            emptyRowsText: string;
            emptyRowsButton: string;
            ghostRow: string;
        };
        paneldynamic: {
            root: string;
            navigation: string;
            progressTop: string;
            progressBottom: string;
            title: string;
            button: string;
            buttonAdd: string;
            buttonRemove: string;
            buttonRemoveRight: string;
            buttonPrev: string;
            buttonNext: string;
            buttonPrevDisabled: string;
            buttonNextDisabled: string;
            progressContainer: string;
            progress: string;
            progressBar: string;
            progressText: string;
            panelWrapper: string;
            panelWrapperInRow: string;
            progressBtnIcon: string;
            footer: string;
        };
        multipletext: {
            root: string;
            itemTitle: string;
            item: string;
            itemLabel: string;
            row: string;
            itemValue: string;
        };
        radiogroup: {
            root: string;
            item: string;
            itemChecked: string;
            itemInline: string;
            itemDecorator: string;
            label: string;
            labelChecked: string;
            itemControl: string;
            controlLabel: string;
            materialDecorator: string;
            other: string;
            clearButton: string;
            column: string;
        };
        buttongroup: {
            root: string;
            item: string;
            itemIcon: string;
            itemDecorator: string;
            itemCaption: string;
            itemSelected: string;
            itemHover: string;
            itemDisabled: string;
            itemControl: string;
        };
        imagepicker: {
            root: string;
            item: string;
            itemChecked: string;
            itemInline: string;
            label: string;
            itemControl: string;
            image: string;
            itemText: string;
            clearButton: string;
        };
        rating: {
            root: string;
            item: string;
            selected: string;
            minText: string;
            itemText: string;
            maxText: string;
            disabled: string;
        };
        text: string;
        expression: string;
        file: {
            root: string;
            placeholderInput: string;
            preview: string;
            removeButton: string;
            fileInput: string;
            fileSign: string;
            removeFile: string;
            fileDecorator: string;
            removeButtonBottom: string;
            dragAreaPlaceholder: string;
            fileList: string;
        };
        signaturepad: {
            root: string;
            controls: string;
            placeholder: string;
            clearButton: string;
        };
        saveData: {
            root: string;
            info: string;
            error: string;
            success: string;
            button: string;
        };
        window: {
            root: string;
            body: string;
            header: {
                root: string;
                title: string;
                button: string;
                buttonExpanded: string;
                buttonCollapsed: string;
            };
        };
    };
}
declare module "bootstrapmaterial/theme-settings" {
    export const bootstrapMaterialThemeName = "bootstrapmaterial";
    export const bootstrapMaterialThemeColors: {
        [key: string]: string;
    };
    export const bootstrapMaterialThemeCssRules: {
        ".sv_main.sv_bootstrapmaterial_css .form-group.is-focused .form-control": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_qstn": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_qstn label.sv_q_m_label": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_q_image": string;
        ".sv_main .sv_row .sv_qstn:first-child:last-child": string;
        ".sv_main .sv_row .sv_p_container:first-child:last-child": string;
        ".sv_main.sv_bootstrapmaterial_css .checkbox input[type=checkbox]:checked + .checkbox-material .check": string;
        ".sv_main.sv_bootstrapmaterial_css label.checkbox-inline input[type=checkbox]:checked + .checkbox-material .check": string;
        ".sv_main.sv_bootstrapmaterial_css .checkbox input[type=checkbox]:checked + .checkbox-material .check:before": string;
        ".sv_main.sv_bootstrapmaterial_css label.checkbox-inline input[type=checkbox]:checked + .checkbox-material .check:before": string;
        ".sv_main.sv_bootstrapmaterial_css .radio input[type=radio]:checked ~ .circle": string;
        ".sv_main.sv_bootstrapmaterial_css label.radio-inline input[type=radio]:checked ~ .circle": string;
        ".sv_main.sv_bootstrapmaterial_css .radio input[type=radio]:checked ~ .check": string;
        ".sv_main.sv_bootstrapmaterial_css label.radio-inline input[type=radio]:checked ~ .check": string;
        ".sv_main.sv_bootstrapmaterial_css .btn-default.active": string;
        ".sv_main.sv_bootstrapmaterial_css .btn-default:active": string;
        ".sv_main.sv_bootstrapmaterial_css .btn-secondary.active": string;
        ".sv_main.sv_bootstrapmaterial_css .btn-secondary:active": string;
        ".sv_main.sv_bootstrapmaterial_css .open>.dropdown-toggle.btn-default": string;
        ".sv_main.sv_bootstrapmaterial_css input[type='button'].btn-primary, .sv_main.sv_bootstrapmaterial_css button.btn-primary": string;
        ".sv_main.sv_bootstrapmaterial_css input[type='button'].btn-primary:hover, .sv_main.sv_bootstrapmaterial_css button.btn-primary:hover": string;
        ".sv_main .sv_q_imgsel.checked label>div": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_q_file_remove:hover": string;
        ".sv_main.sv_bootstrapmaterial_css .form-group input[type=file]": string;
        ".sv_main.sv_bootstrapmaterial_css .progress": string;
        ".sv_main.sv_bootstrapmaterial_css .progress-bar": string;
        ".sv_main .sv-progress": string;
        ".sv_main .sv-progress__bar": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_progress-buttons__list li:before": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_progress-buttons__list li:after": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_progress-buttons__list .sv_progress-buttons__page-title": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_progress-buttons__list .sv_progress-buttons__page-description": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_progress-buttons__list li.sv_progress-buttons__list-element--passed:before": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_progress-buttons__list li.sv_progress-buttons__list-element--passed + li:after": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_progress-buttons__list li.sv_progress-buttons__list-element--current:before": string;
        ".sv_main.sv_bootstrapmaterial_css .sv_progress-buttons__list li.sv_progress-buttons__list-element--passed.sv_progress-buttons__list-element--current:before": string;
        ".sv_main .sv-paneldynamic__prev-btn.sv-paneldynamic__prev-btn--disabled, .sv_main .sv-paneldynamic__next-btn.sv-paneldynamic__next-btn--disabled": string;
        ".sv_main .sv-paneldynamic__progress-text": string;
        ".sv_main .sv-paneldynamic__prev-btn, .sv_main .sv-paneldynamic__next-btn": string;
        ".sv_main .sv-boolean .checkbox-decorator": string;
        ".sv_main .sv-boolean__switch": string;
        ".sv_main .sv-boolean__slider": string;
        ".sv_main .sv-boolean__label.sv-boolean__label--disabled": string;
        ".sv_main .sv-boolean__label": string;
        ".sv_main .sv-boolean--disabled .sv-boolean__switch": string;
        ".sv_main .sv-boolean--disabled  .sv-boolean__slider": string;
        ".sv_main .sv_matrix_detail_row": string;
        ".sv_main .sjs_sp_container": string;
        ".sv_main .sjs_sp_placeholder": string;
        ".sv_main .sv-action-bar-item": string;
        ".sv_main .sv-action-bar-item__icon use": string;
        ".sv_main .sv-action-bar-item:hover": string;
        ".sv-skeleton-element": string;
    };
}
declare module "bootstrapmaterial/index" {
    export * from "bootstrapmaterial/theme-settings";
    export * from "bootstrapmaterial/cssbootstrapmaterial";
}

declare module "survey-core/plugins/bootstrap-material-integration" { import main = require("bootstrapmaterial/index"); export = main; }